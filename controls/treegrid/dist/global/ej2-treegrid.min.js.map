{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/base/constant.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentIndex) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData, index)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                                if (!isNullOrUndefined(this.hierarchyData[index][this.parent.parentIdMapping]) && groupData.key === this.taskIds[index]) {\n                                    this.hierarchyData.splice(index, 1);\n                                    this.taskIds.splice(index, 1);\n                                }\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData, index) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var returns = false;\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        this.hierarchyData.splice(index, 1);\n                        this.taskIds.splice(index, 1);\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[i][this.parent.childMapping])) {\n                returns = this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData, index);\n            }\n        }\n        return returns;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                    var compFun = col.sortComparer && !this.isRemote() ?\n                        col.sortComparer.bind(col) :\n                        this.parent.grid.sortSettings.columns[srt].direction;\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        else if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n                this.isOnBatch = false;\n            }\n            this.enableToolbarItems('save');\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n            var saveArgs = {\n                type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                previousData: args.previousValue, row: row, target: args.cell\n            };\n            this.parent.trigger(events.actionComplete, saveArgs);\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","Print","GridPrint","addEventListener","on","printTreeGrid","removeEventListener","off","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","totalIconsWidth","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","collapsed","width","cellElement","allowTextWrap","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","isSortAction","dataResults","sortedRecords","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","returns","childs","Math","ceil","random","rowDetails","parentRow","rows","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","count","totalRecordsCount","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","col","getColumnByField","compFun","sortComparer","bind","sortBy","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","selectedRowIndex","rowDeselected","toolbarClick","cancel","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","batchCancel","mode","actionBegin","actionComplete","requestType","newRowPosition","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","this_2","parent_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","current","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","beginAdd","keyPressed","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","request","toolbarID","cells","rowIndex_1","parentNode","primaryKeys_1","updateRow","formObj","querySelectorAll","saveArgs","previousData","previousValue","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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"}