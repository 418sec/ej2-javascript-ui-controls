{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/base/constant.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex) && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentIndex) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + container.querySelectorAll('.e-icons').length * 10 + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.isParent = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = new Query().select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.isParent = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                            }\n                            else {\n                                this.hierarchyData.splice(index, 1);\n                                this.taskIds.splice(index, 1);\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[this.parent.childMapping])) {\n                this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData);\n            }\n        }\n        return false;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (records) {\n        for (var rec = 0; rec < records.length; rec++) {\n            if (!records[rec][this.parent.parentIdMapping] && isNullOrUndefined(records[rec].index) && records[rec].index !== 0) {\n                records[rec].level = 0;\n                records[rec].index = Math.ceil(Math.random() * 1000);\n                records[rec].hasChildRecords = true;\n            }\n        }\n        return records;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = new Query();\n            var clonequries = this.parent.query.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.isParent.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, this.parent.grid.sortSettings.columns[srt].direction);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Row')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            if (args.item.id === _this.grid.element.id + '_expandall') {\n                _this.expandAll();\n            }\n            else if (args.item.id === _this.grid.element.id + '_collapseall') {\n                _this.collapseAll();\n            }\n            _this.trigger(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                args.result = treeGrid.dataModule.updateParentRemoteData(args.result);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.expandRow(null, records[i]);\n        }\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.collapseRow(null, records[i]);\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.className.indexOf('e-gridrowindex') !== -1 && e.className.indexOf('level0') !== -1;\n        });\n        this.isExpandAll = true;\n        for (var i = 0; i < rows.length; i++) {\n            action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[rowIndex];\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        //this.parent.grid.toolbarModule.destroy();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            this.enableToolbarItems();\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function () {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], false);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], true);\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.closeEdit();\n                this.isOnBatch = false;\n            }\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            if (isNullOrUndefined(row)) {\n                var key_1 = this.parent.getPrimaryKeyFieldNames()[0];\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[key_1] === args.rowData[key_1]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.enableToolbarItems();\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n            }\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","Print","GridPrint","addEventListener","on","printTreeGrid","removeEventListener","off","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","collapsed","width","cellElement","allowTextWrap","querySelectorAll","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","isParent","hierarchyData","isSortAction","dataResults","sortedRecords","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","childs","updateParentRemoteData","Math","ceil","random","rowDetails","parentRow","rows","clonequries","queries","fn","showSpinner","currentViewData","inx","haveChild","count","totalRecordsCount","dataManagerSuccess","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","sortBy","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","bind","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","col","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","height","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","selectedRowIndex","rowDeselected","toolbarClick","item","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","cancel","batchCancel","mode","actionBegin","actionComplete","requestType","newRowPosition","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","getColumnByField","iterateArrayOrObject","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","expandCollapse","collapseArgs","expandAtLevel","collapseAtLevel","expandCollapseAll","isChild","gridRows","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","getDataModule","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","this_2","parent_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","generateQuery","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","current","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","beginAdd","keyPressed","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","toolbarID","cells","rowIndex_1","parentNode","key_1","updateRow","formObj","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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"}