{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                console[item.logType](message);\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields are missing which are ' +\n                'required for the hierarchy relation of records in Tree Grid.\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n                    this.keyPress = null;\n                }\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","console","logType","treeLog","treeGrid","allowRowDragAndDrop","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"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"}