{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/base/constant.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex)) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = data.expanded &&\n                    (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                    !this.parent.enableCollapseAll;\n                addClass([expandIcon], expand ? 'e-treegridexpand' : 'e-treegridcollapse');\n                container.appendChild(expandIcon);\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + container.querySelectorAll('.e-icons').length * 10 + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.isParent = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = new Query().select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.isParent = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                            }\n                            else {\n                                this.hierarchyData.splice(index, 1);\n                                this.taskIds.splice(index, 1);\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[this.parent.childMapping])) {\n                this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData);\n            }\n        }\n        return false;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (records) {\n        for (var rec = 0; rec < records.length; rec++) {\n            if (!records[rec][this.parent.parentIdMapping] && isNullOrUndefined(records[rec].index) && records[rec].index !== 0) {\n                records[rec].level = 0;\n                records[rec].index = Math.ceil(Math.random() * 1000);\n                records[rec].hasChildRecords = true;\n            }\n        }\n        return records;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = new Query();\n            var clonequries = this.parent.query.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.isParent.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, this.parent.grid.sortSettings.columns[srt].direction);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Row')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n            }\n        }\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            if (args.item.id === _this.grid.element.id + '_expandall') {\n                _this.expandAll();\n            }\n            else if (args.item.id === _this.grid.element.id + '_collapseall') {\n                _this.collapseAll();\n            }\n            _this.trigger(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                args.result = treeGrid.dataModule.updateParentRemoteData(args.result);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.columns = this.columnModel;\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.expandRow(null, records[i]);\n        }\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.collapseRow(null, records[i]);\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.className.indexOf('e-gridrowindex') !== -1 && e.className.indexOf('level0') !== -1;\n        });\n        this.isExpandAll = true;\n        for (var i = 0; i < rows.length; i++) {\n            action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[rowIndex];\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        //this.parent.grid.toolbarModule.destroy();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    setValue('parentItem', parentRecord, item);\n                    var level = getObject('level', parentRecord);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', parentRecord);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    var childRecords = getObject('childRecords', parentRecord);\n                    childRecords.push(item);\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        return cellElement.innerHTML;\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], false);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], true);\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.closeEdit();\n                this.isOnBatch = false;\n            }\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            if (isNullOrUndefined(row)) {\n                var key_1 = this.parent.getPrimaryKeyFieldNames()[0];\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[key_1] === args.rowData[key_1]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], true);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], false);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n            }\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","Print","GridPrint","addEventListener","on","printTreeGrid","removeEventListener","off","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","row","getAttribute","expandStateMapping","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","expandIcon","expand","cellElement","allowTextWrap","width","querySelectorAll","textContent","cell","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","isParent","hierarchyData","isSortAction","dataResults","sortedRecords","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","childs","updateParentRemoteData","Math","ceil","random","rowDetails","parentRow","rows","clonequries","queries","fn","showSpinner","currentViewData","inx","haveChild","count","pageSettings","totalRecordsCount","dataManagerSuccess","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","sortBy","allowPaging","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","bind","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","col","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","height","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","selectedRowIndex","rowDeselected","toolbarClick","item","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","cancel","batchCancel","mode","actionBegin","actionComplete","requestType","newRowPosition","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","addOnPersist","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","rowIndex","columnIndex","getColumnByField","iterateArrayOrObject","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","expandCollapse","collapseArgs","expandAtLevel","collapseAtLevel","expandCollapseAll","isChild","gridRows","pageSizeMode","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","selectRow","isToggle","selectRows","rowIndexes","clearSelection","selectCell","cellIndex","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","getDataModule","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","this_2","parent_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","generateQuery","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","current","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","sumData","forEach","toLowerCase","val","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","beginAdd","keyPressed","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","toolbarID","cells","rowIndex_1","parentNode","key_1","updateRow","formObj","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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BAAa,IACpCE,GACI8hB,WACDvS,EAASzP,UAAW,kBAAe,IACtCE,GACI8hB,WACDvS,EAASzP,UAAW,qBAAkB,IACzCE,GACI8hB,WACDvS,EAASzP,UAAW,gBAAa,IACpCE,GACI8hB,WACDvS,EAASzP,UAAW,eAAY,IACnCE,GACI8hB,WACDvS,EAASzP,UAAW,oBAAiB,IACxCE,GACI8hB,WACDvS,EAASzP,UAAW,gBAAa,IACpCE,GACI8hB,WACDvS,EAASzP,UAAW,wBAAqB,IAC5CE,GACI8hB,WACDvS,EAASzP,UAAW,sBAAmB,IAC1CE,GACI8hB,WACDvS,EAASzP,UAAW,wBAAqB,IAC5CE,GACI8hB,WACDvS,EAASzP,UAAW,mBAAgB,IACvCE,GACI8hB,WACDvS,EAASzP,UAAW,oBAAiB,IACxCE,GACIiB,YAAS,IACVsO,EAASzP,UAAW,qBAAkB,IACzCE,GACI8hB,WACDvS,EAASzP,UAAW,mBAAgB,IACvCE,GACI8hB,WACDvS,EAASzP,UAAW,kBAAe,IACtCE,GACI8hB,WACDvS,EAASzP,UAAW,qBAAkB,IACzCE,GACI8hB,WACDvS,EAASzP,UAAW,oBAAiB,IACxCE,GACI8hB,WACDvS,EAASzP,UAAW,qBAAkB,IACzCE,GACI8hB,WACDvS,EAASzP,UAAW,oBAAiB,IACxCE,GACI8hB,WACDvS,EAASzP,UAAW,mBAAgB,IACvCE,GACI8hB,WACDvS,EAASzP,UAAW,sBAAmB,IAC1CE,GACI8hB,WACDvS,EAASzP,UAAW,qBAAkB,IACzCE,GACI8hB,WACDvS,EAASzP,UAAW,kBAAe,IACtCE,GACI8hB,WACDvS,EAASzP,UAAW,eAAY,IACnCE,GACI8hB,WACDvS,EAASzP,UAAW,iBAAc,IACrCE,GACI8hB,WACDvS,EAASzP,UAAW,sBAAmB,IAC1CE,GACI8hB,WACDvS,EAASzP,UAAW,iBAAc,IACrCE,GACI8hB,WACDvS,EAASzP,UAAW,iBAAc,IACrCE,GACI8hB,WACDvS,EAASzP,UAAW,oBAAiB,IACxCE,GACI8hB,WACDvS,EAASzP,UAAW,kBAAe,IACtCE,GACI8hB,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"}