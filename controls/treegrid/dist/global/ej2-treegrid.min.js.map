{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record[control.childMapping].indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n    var data = control.grid.dataSource instanceof DataManager ?\n        control.grid.dataSource.dataSource.json : control.grid.dataSource;\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][primaryKeys] === record[primaryKeys]) {\n            data[i] = record;\n            break;\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            for (var i = 0; i < args.cell.children.length; i++) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All')\n            || this.enableVirtualization) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return e.parentUniqueID === record.uniqueID;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property.dataSource) {\n            this.parent.dataModule.convertToFlatData(property.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop.dataSource) {\n            this.parent.dataModule.convertToFlatData(prop.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = -1;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            value[this.parent.parentIdMapping] = idMapping;\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","totalRecordsCount","parentRecords","currentData","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","bindedDataSource","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","isPrinting","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cancel","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","cellsaveArgs","isBlazor","getElement","promise","batchCancel","setTimeout","treeColumnRowTemplate","defaultQuery","dm_1","JsonAdaptor","detailDataBound","actionBegin","getSelectedRecords","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","displayAction","targetEle","detailrows","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","getRowObjectFromUID","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","manipulateExportProperties","book","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","document","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","crudAction","beginAdd","keyPressed","contentready","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","scrollTop","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow"],"mappings":"uEAIO,SAASA,GAAaC,GACzB,GAAIA,EAAOC,qBAAsBC,eAAa,CAC1C,GAAIC,GAAUH,EAAOC,WAAWE,OAChC,OAAQA,aAAmBC,iBACtBD,YAAmBE,kBAAmBF,YAAmBG,qBACzDH,YAAmBI,iBAAiBJ,YAAmBK,cAEhE,OAAO,EAKX,QAAgBC,GAAkBC,GAC9B,GAAIC,EACJA,KAEA,KAAK,GAAIC,GAAI,EAAGC,EADIC,OAAOC,KAAKL,GAASM,OACJJ,EAAIC,EAAKD,IAC3BK,YAAU,kBAAmBP,EAAQE,KAEhDD,EAAMO,KAAKR,EAAQE,GAG3B,OAAOD,GAKX,QAAgBQ,GAAgBnB,EAAQoB,EAAQC,GAC5C,GAEIC,GAFAC,EAAeC,oBAAkBJ,EAAOK,YAAc,KACtDC,EAAc1B,EAAQoB,EAAOK,WAAWE,SAE5C,OAAoB,OAAhBJ,KACIvB,EAAO4B,eAAkBJ,oBAAkBD,EAAavB,EAAO6B,sBAC3DN,EAAavB,EAAO6B,qBAIO,IAA1BN,EAAaO,YAGbP,EAAaE,aAClBH,EAAcI,EAAc1B,EAAQuB,EAAaE,WAAWE,UACxDL,GAAetB,EAAO4B,gBAAkBJ,oBAAkBF,EAAYtB,EAAO6B,uBACzEP,EAAYtB,EAAO6B,qBACvBP,EAAYQ,UAAW,GAChB,KAEPR,IAAwC,IAAzBA,EAAYQ,aAGtBR,GACEH,EAAgBnB,EAAQsB,EAAaD,OAjBhDE,EAAaO,UAAW,GACjB,IA+BnB,QAAgBC,GAAoBrB,GAChC,GAAIC,KACJ,IAAIa,oBAAkBd,KAAaA,EAAQsB,gBACvC,QAEJ,KAAKR,oBAAkBd,EAAQuB,cAE3B,IAAK,GADDA,GAAevB,EAAQuB,aAClBrB,EAAI,EAAGC,EAAMC,OAAOC,KAAKkB,GAAcjB,OAAQJ,EAAIC,EAAKD,IAC7DD,EAAMO,KAAKe,EAAarB,IACpBqB,EAAarB,GAAGoB,kBAChBrB,EAAQA,EAAMuB,OAAOH,EAAoBE,EAAarB,KAIlE,OAAOD,GAEX,QAAgBwB,GAAUnC,GACtB,GAAID,EAAaC,GAAS,CACtB,GAAIoC,GAAKpC,EAAOC,UAChB,QAAQuB,oBAAkBY,EAAGC,OAEjC,OAAO,EAEX,QAAgBC,GAAYC,GAIxB,IAAK,GAFDC,GACAzB,EAFA0B,KAGK7B,EAAI,EAAGA,EAAI2B,EAAMvB,OAAQJ,IAAK,CACnCG,EAAOD,OAAOC,KAAKwB,EAAM3B,IACzB4B,IACA,KAAK,GAAIE,GAAI,EAAGA,EAAI3B,EAAKC,OAAQ0B,IAC7BF,EAAIzB,EAAK2B,IAAMH,EAAM3B,GAAGG,EAAK2B,GAEjCD,GAAOvB,KAAKsB,GAEhB,MAAOC,GAEX,QAAgBE,GAAaC,GAMzB,aALOA,GAAMZ,sBACNY,GAAMX,mBACNW,GAAMC,YACND,GAAMnB,iBACNmB,GAAME,MACNF,EAEX,QAAgBlB,GAAc1B,EAAQ4C,EAAOG,GACzC,GAAIA,EAAe,CAEf,MAAO/C,GAAe,yBAAE4C,GAIxB,MAAO5C,GAAS,mBAAE4C,GCvHnB,QAASI,GAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,GAEI3C,GACA8B,EAHAE,EAAQK,EAAQL,MAChBY,EAASP,EAAQO,OAGjBC,EAAMP,EAAQQ,KAAKC,0BAA0B,GAC7CC,EAAWV,EAAQjD,qBAAsBC,eACzCgD,EAAQjD,WAAWA,WAAW4D,KAAOX,EAAQjD,WAC7C6D,KACAC,EAAenB,EACfoB,GAAS,CACYd,GAAQQ,KAAKO,uBACtC,IAAe,QAAXT,EAAkB,CAClB,GAAIU,GAASC,EAAUlB,EAASW,EAAUV,EAASC,EAAiBC,EAAaC,EAAeE,EAChGX,GAAQsB,EAAOtB,MACfoB,EAASE,EAAOF,OAQpB,GANIpB,YAAiBwB,OACjBN,EAAexB,EAAYM,GAG3BkB,EAAa5C,KAAKmD,YAAWzB,KAE5BoB,IAAsB,QAAXR,GAC6B,QAAxCN,EAAQoB,aAAaC,gBAAoE,WAAxCrB,EAAQoB,aAAaC,gBACvE,IAAK,GAAIC,GAAI,EAAGA,EAAIV,EAAa9C,OAAQwD,IAAK,CAC1C,GAAIzD,GAAOD,OAAOC,KAAK+C,EAAaU,GACpC5D,GAAIgD,EAAS5C,MAsEb,MAAOJ,KAAOA,GAAK,GAEC,UAvEN,WACV,GAAIgD,EAAShD,GAAG6C,KAASK,EAAaU,GAAGf,GAAM,CAC3C,GAAe,WAAXD,EAuBC,CACD,GAAe,SAAXA,EACA,IAAKd,EAAI,EAAGA,EAAI3B,EAAKC,OAAQ0B,KACrBkB,EAAShD,GAAG6D,eAAe1D,EAAK2B,KAAsC,SAA9BQ,EAAQoB,aAAaI,MAC1D3D,EAAK2B,KAAOY,IACfM,EAAShD,GAAGG,EAAK2B,IAAMoB,EAAaU,GAAGzD,EAAK2B,SAInD,IAAe,QAAXc,EAAkB,CACvB,GAAIX,OAAQ,EACgC,WAAxCK,EAAQoB,aAAaC,eACjBpB,GACAY,EAAab,EAAQyB,iBAAmBf,EAAShD,GAAGsC,EAAQ0B,WAC5DhB,EAASiB,OAAOjE,EAAI,EAAG,EAAGmD,KAGrBH,EAAShD,GAAG6D,eAAevB,EAAQ4B,gBACpClB,EAAShD,GAAGsC,EAAQ4B,kBAExBlB,EAAShD,GAAGsC,EAAQ4B,cAAc5D,KAAK6C,GACvCgB,EAAgBtB,EAAKG,EAAShD,GAAI4C,EAAQN,EAASC,IAGV,UAAxCD,EAAQoB,aAAaC,eAC1BX,EAASiB,OAAOjE,EAAI,EAAG,EAAGmD,GAEpBX,EAIuC,UAAxCF,EAAQoB,aAAaC,gBAC1BX,EAASiB,OAAOjE,EAAG,EAAGmD,IAJtBlB,EAAQ,EACRe,EAASiB,OAAOhC,EAAO,EAAGkB,IAMlC,MAAO,QAzDP,GAAIiB,GAAgBpB,EAAShD,EAE7B,IADAgD,EAASiB,OAAOjE,EAAG,GACfuC,EAAiB,CACjB,IAAK3B,oBAAkBwD,EAAc9B,EAAQyB,kBAKzC,IAAK,GAJDM,GAAa/B,EAAQgC,SAASC,OAAO,SAAUC,GAC/C,MAAOA,GAAElC,EAAQ0B,aAAeI,EAAc9B,EAAQyB,mBACvD,GACC1C,EAAegD,EAAaA,EAAW/B,EAAQ4B,iBAC1CO,EAAIpD,EAAajB,OAAS,EAAGqE,GAAK,EAAGA,IAC1C,GAAIpD,EAAaoD,GAAGnC,EAAQ0B,aAAeI,EAAc9B,EAAQ0B,WAAY,CACzE3C,EAAa4C,OAAOQ,EAAG,GAClBpD,EAAajB,SACdiE,EAAWjD,iBAAkB,EAC7B+C,EAAgBtB,EAAKwB,EAAYzB,EAAQN,EAASC,GAEtD,OAIZ,MAAO,aAyCT3B,qBAAkBoC,EAAShD,GAAGsC,EAAQ4B,gBACxCQ,EAAmB1B,EAAShD,GAAGsC,EAAQ4B,cAAehB,EAAaU,GAAIhB,EAAQC,EAAKP,EAASC,EAAiBY,EAAcT,IAC5HyB,EAAgBtB,EAAKG,EAAShD,GAAI4C,EAAQN,EAASC,UAY3E,QAAgBgB,GAAUlB,EAASW,EAAUV,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,GAAIX,GACAoB,GAAS,EACTuB,EAAqBrC,EAAQQ,KAAKO,uBAGtC,QAFArB,EAAQyB,YAAWpB,EAAQL,OAC3BA,EAAQD,EAAaC,GACbM,EAAQoB,aAAaC,gBACzB,IAAK,MACDX,EAAS4B,QAAQ5C,GACjBoB,GAAS,CACT,MACJ,KAAK,SACDJ,EAAS1C,KAAK0B,GACdoB,GAAS,CACT,MACJ,KAAK,QAKGpB,EAJCpB,oBAAkB+B,GAIXgC,EAAmBnC,EAAc,GAHjCG,CAKZ,MACJ,KAAK,QACL,IAAK,QAKGX,EAJCpB,oBAAkB+B,GAIXgC,EAAmBnC,GAHnBG,GAKW,IAAnBF,IACAO,EAAS4B,QAAQ5C,GACjBoB,GAAS,GAGrB,OAASpB,MAAOA,EAAOoB,OAAQA,GAEnC,QAAgBsB,GAAmBrD,EAAc6B,EAAcN,EAAQC,EAAKP,EAASC,EAAiBY,EAAcT,GAGhH,IAFA,GAAImC,IAAa,EACb/C,EAAIT,EAAajB,OACd0B,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGe,KAASK,EAAaL,IACrCN,GAAmBlB,EAAaS,GAAGQ,EAAQyB,mBAAqBb,EAAaZ,EAAQ0B,WAAa,CACnG,GAAe,SAAXpB,EAAmB,CAEnB,IAAK,GADDzC,GAAOD,OAAOC,KAAK+C,GACdlD,EAAI,EAAGA,EAAIG,EAAKC,OAAQJ,KACzBqB,EAAaS,GAAG+B,eAAe1D,EAAKH,KAAsC,SAA9BsC,EAAQoB,aAAaI,MAAmB3D,EAAKH,KAAO0C,IAChGrB,EAAaS,GAAG3B,EAAKH,IAAMkD,EAAa/C,EAAKH,IAGrD,OAEC,GAAe,QAAX4C,EACuC,UAAxCN,EAAQoB,aAAaC,eACjBpB,GACAY,EAAab,EAAQyB,iBAAmB1C,EAAaS,GAAGQ,EAAQ0B,WAChE3C,EAAa4C,OAAOnC,EAAI,EAAG,EAAGqB,GAC9BgB,EAAgBtB,EAAKxB,EAAaS,GAAIc,EAAQN,EAASC,KAGlDlB,EAAaS,GAAG+B,eAAevB,EAAQ4B,gBACxC7C,EAAaS,GAAGQ,EAAQ4B,kBAE5B7C,EAAaS,GAAGQ,EAAQ4B,cAAc5D,KAAK6C,GAC3CgB,EAAgBtB,EAAKxB,EAAaS,GAAIc,EAAQN,EAASC,IAGd,UAAxCD,EAAQoB,aAAaC,eAC1BtC,EAAa4C,OAAOnC,EAAG,EAAGqB,GAEmB,UAAxCb,EAAQoB,aAAaC,gBAC1BtC,EAAa4C,OAAOnC,EAAI,EAAG,EAAGqB,OAGjC,CACgB9B,EAAaS,GAAGjB,UACjCQ,GAAa4C,OAAOnC,EAAG,GAClBT,EAAajB,SACdyE,GAAa,QAIfjE,qBAAkBS,EAAaS,GAAGQ,EAAQ4B,gBAC5CQ,EAAmBrD,EAAaS,GAAGQ,EAAQ4B,cAAehB,EAAcN,EAAQC,EAAKP,EAASC,EAAiBY,EAAcT,IAC7HyB,EAAgBtB,EAAKxB,EAAaS,GAAIc,EAAQN,EAASC,EAInE,OAAOsC,GAEX,QAAgBV,GAAgBtB,EAAKrC,EAAQoC,EAAQN,EAASC,EAAiBuC,GAC3E,GACI7C,GADA8C,EAAiBzC,EAAQQ,KAAKO,uBAQlC,IANA0B,EAAeC,IAAI,SAAUR,EAAGxE,GAAK,GAAIwE,EAAE3B,KAASrC,EAAOqC,GAEvD,YADAZ,EAAQjC,KAGZQ,EAASuE,EAAe9C,GACxBzB,EAAOY,iBAAkB,EACV,QAAXwB,EAAkB,CAClBpC,EAAOU,UAAW,EAClBV,EAAOY,iBAAkB,EACrBkB,EAAQ2C,aAAaC,QAAQ9E,QAAUQ,oBAAkBkE,KACzDA,EAAQC,EAAeR,OAAO,SAAUC,GACpC,MAAIA,GAAEW,iBAAmB3E,EAAOO,SACrByD,EAGA,OAInB,IAAInD,GAAeyD,EAAQA,YAAiBtB,OAAQsB,EAAM,GAAKA,EAAQC,EAAe9C,EAAQ,EACzFzB,GAAOqD,eAAe,kBACvBrD,EAAOa,kBAEwC,IAA/Cb,EAAOa,aAAa+D,QAAQ/D,IAC5Bb,EAAOa,aAAauD,QAAQvD,GAE5BkB,IACK/B,EAAOqD,eAAevB,EAAQ4B,gBAC/B1D,EAAO8B,EAAQ4B,mBAEyC,IAAxD1D,EAAO8B,EAAQ4B,cAAckB,QAAQ/D,IACrCb,EAAO8B,EAAQ4B,cAAcU,QAAQvD,IAOjD,IAAK,GAHDgE,GAAc/C,EAAQQ,KAAKC,0BAA0B,GACrDuC,EAAOhD,EAAQQ,KAAKzD,qBAAsBC,eAC1CgD,EAAQQ,KAAKzD,WAAWA,WAAW4D,KAAOX,EAAQQ,KAAKzD,WAClDW,EAAI,EAAGA,EAAIsF,EAAKlF,OAAQJ,IAC7B,GAAIsF,EAAKtF,GAAGqF,KAAiB7E,EAAO6E,GAAc,CAC9CC,EAAKtF,GAAKQ,CACV,OAGR8B,EAAQQ,KAAKyC,WAAW1C,EAAKrC,EAC7B,IAAIgF,GAAMlD,EAAQmD,cAAcxD,EAChCK,GAAQoD,aAAaC,YACjBL,KAAM9E,EAAQoF,KAAMJ,EAAIK,MAAMvD,EAAQwD,iBACtCC,OAAQzD,EAAQQ,KAAKkD,aAAa1D,EAAQwD,mBCtPlD,GAAIG,GAAwB,WACxB,QAASA,GAAOC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAMLF,KAAKG,iBAAkB,EAMvBH,KAAKI,gBAAiB,EAMtBJ,KAAKK,gBAAiB,EAMtBL,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAK5B,UACLoC,QAAMR,KAAMD,GAEhB,MAAOD,MC5DPW,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAO5DK,EAAgC,SAAUC,GAE1C,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAUqB,EAAgBC,GAI1BZ,GACIc,gBAAeC,cAChBJ,EAAeb,UAAW,cAAW,IACxCE,GACIgB,WAAS,cACVL,EAAeb,UAAW,WAAQ,IACrCE,GACIgB,cACDL,EAAeb,UAAW,WAAQ,IACrCE,GACIgB,YAAS,IACVL,EAAeb,UAAW,0BAAuB,IACpDE,GACIgB,WAAS,OACVL,EAAeb,UAAW,yBAAsB,IACnDE,GACIgB,cACDL,EAAeb,UAAW,gBAAa,IAC1CE,GACIgB,YAAS,IACVL,EAAeb,UAAW,mBAAgB,IAC7CE,GACIgB,WAAS,WACVL,EAAeb,UAAW,oBAAiB,IACvCa,GACTM,iBC7CEC,EAA2B,WAI3B,QAASA,GAAUpJ,GACf+G,KAAK/G,OAASA,EACd+G,KAAKsC,iBACLtC,KAAKuC,mBACLvC,KAAKwC,mBA0WT,MApWAH,GAAUpB,UAAUwB,cAAgB,WAChC,MAAO,aAEXJ,EAAUpB,UAAUuB,iBAAmB,WACnCxC,KAAK/G,OAAOyJ,GAAG,eAAgB1C,KAAK2C,eAAgB3C,MACpDA,KAAK/G,OAAOyJ,GAAG,iBAAkB1C,KAAK4C,eAAgB5C,MACtDA,KAAK/G,OAAOyJ,GAAG,oBAAqB1C,KAAK6C,kBAAmB7C,MAC5DA,KAAK/G,OAAOyJ,GAAG,oBAAqB1C,KAAK8C,kBAAmB9C,OAEhEqC,EAAUpB,UAAU8B,oBAAsB,WAClC/C,KAAK/G,OAAO+J,cAGhBhD,KAAK/G,OAAOgK,IAAI,eAAgBjD,KAAK2C,gBACrC3C,KAAK/G,OAAOgK,IAAI,iBAAkBjD,KAAK4C,gBACvC5C,KAAK/G,OAAOgK,IAAI,oBAAqBjD,KAAK8C,mBAC1C9C,KAAK/G,OAAOgK,IAAI,oBAAqBjD,KAAK6C,qBAO9CR,EAAUpB,UAAUiC,QAAU,WAC1BlD,KAAK+C,uBAETV,EAAUpB,UAAU6B,kBAAoB,SAAUK,GAC9C,GAEIC,GAFA/B,EAASnH,YAAU,SAAUiJ,GAC7BE,EAAYC,eAAajC,EAAQ,qBAErC,IAAIgC,GAAaA,EAAUE,iBAAiB,sBAAsBtJ,OAAS,EAAG,CAC1EmJ,EAAWC,EAAUG,cAAc,yBACnC,IAAIC,OAAW,IACfA,MACStJ,KAAKkH,EAAOqC,QAAQ,MAAMD,UACnCzD,KAAK2D,iBAAiBF,GACtBzD,KAAK4D,sBAAsBR,EAAUA,EAASS,mBAAmBC,UAAUC,SAAS,WAAY1C,EAAOqC,QAAQ,WAE9G,IAAIL,GAAaA,EAAUE,iBAAiB,oBAAoBtJ,OAAS,GAAK+F,KAAK/G,OAAO+K,mBAAoB,CAC/G,GAAIC,IAAiBZ,EAAUG,cAAc,YAAYM,UAAUC,SAAS,aACpEV,EAAUG,cAAc,YAAYM,UAAUC,SAAS,SAC/D/D,MAAKkE,gBAAgBD,GACrBb,EAAWC,EAAUG,cAAc,0BACnCxD,KAAK4D,sBAAsBR,EAAUa,EAAe5C,EAAOqC,QAAQ,SAG3ErB,EAAUpB,UAAU2C,sBAAwB,SAAUR,EAAUe,EAAYC,GACxE,GAAIjF,GAAOa,KAAK/G,OAAOiE,wBAAwBkH,EAAWX,UACtDN,GAASkB,QAASF,EAAY9C,OAAQ+B,EAAUgB,WAAYA,EAC5DE,QAASlB,EAASU,UAAUC,SAAS,mBAC/B/D,KAAK/G,OAAOsL,oBAAsBpF,EAC5Ca,MAAK/G,OAAOuL,QCrDQ,iBDqDuBrB,IAE/Cd,EAAUpB,UAAUwD,uBAAyB,WAIzC,IAAK,GAHDC,GACAC,EACA5F,EAAWiB,KAAK/G,OAAe,QAC1B2L,EAAM,EAAGA,EAAM7F,EAAQ9E,OAAQ2K,IAChC7F,EAAQ6F,GAAKC,eACbH,EAAa1E,KAAK/G,OAAO8F,QAAQ6F,GAAKE,IAI9C,KAAK,GADDC,GAAmB/E,KAAK/G,OAAO+L,iBAAiBzB,iBAAiB,oBAAoBtJ,OAChF0B,EAAI,EAAGA,EAAIoJ,EAAkBpJ,IACjBqE,KAAK/G,OAAO+L,iBAAiBzB,iBAAiB,oBAAoB5H,GACpEsJ,aAAa,kBAAoBP,IAC5CC,EAAchJ,EAGtB,OAAOgJ,IAEXtC,EAAUpB,UAAU0B,eAAiB,WAEjC,GADA3C,KAAK2E,YAAc3E,KAAKyE,yBACpBzE,KAAK2E,aAAe,GAAkF,IAA7E3E,KAAK/G,OAAO+L,iBAAiBzB,iBAAiB,oBAAoBtJ,OAAc,CACzG,GAAIiL,GAAgBlF,KAAK/G,OAAO+L,iBAAiBzB,iBAAiB,oBAAoBvD,KAAK2E,aACvFtB,MAAY,GAEZ8B,EAAYnF,KAAK/G,OAAOmM,cAAc,SAAWC,UAAW,kBAAmBC,OAASC,KAAQ,eACpGlC,EAAYmC,iBAAexF,KAAK/G,OAAOmM,eAAe,GAASf,SAFnD,EAEmEoB,MAAO,OAC5E3B,UAAU4B,IAAI,uBACxBrC,EAAUG,cAAc,YAAYmC,MAAMC,MAAQ,OAClDvC,EAAUwC,aAAaV,EAAUW,YAAazC,EAAU0C,YACnDtL,oBAAkByK,IACnBA,EAAcW,aAAaxC,EAAW6B,EAAca,YAExD/F,KAAKkE,oBAGb7B,EAAUpB,UAAU+E,qBAAuB,SAAU7C,GACjD,GAAIE,GACA8B,EAAYnF,KAAK/G,OAAOmM,cAAc,SAAWC,UAAW,oBAAqBC,OAASC,KAAQ,cAClGpG,EAAOgE,EAAKhE,IAChBgE,GAAK1D,KAAKqE,UAAU4B,IAAI,sBACxBvC,EAAK1D,KAAKwG,aAAa,aAAc,WACrC,IAAIpK,IAASpB,oBAAkB0E,EAAK+G,gBAAyC,YAAvB/G,EAAK+G,aAI3D,KAHA7C,EAAYmC,iBAAexF,KAAK/G,OAAOmM,eAAe,GAASf,QAASxI,EAAO4J,MAAO,OAC5E3B,UAAU4B,IAAI,uBACxBrC,EAAUG,cAAc,YAAYmC,MAAMC,MAAQ,OACvB,kBAAvBzG,EAAK+G,cAAmC,CACxC,GAAIC,GAAW9C,EAAUE,iBAAiB,YAAY,EACtD6C,gBAAaD,IAAY,UAAW,SAAU,cAC9C9C,EAAUG,cAAc,YAAYM,UAAU4B,IAAI,UAGtD,MADArC,GAAUwC,aAAaV,EAAUW,YAAazC,EAAU0C,YACjD1C,GAEXhB,EAAUpB,UAAU2B,eAAiB,SAAUyD,GAC3C,GAAIhD,GAAYrD,KAAKgG,qBAAqBK,GACtCC,EAAeD,EAAU5G,KAAK+D,cAAc,0BAChD,IAAK/I,oBAAkB6L,GAGlB,CACD,GAAIC,GAAUlD,EAAUG,cAAc,YAClCrE,EAAOkH,EAAU5G,KAAK+G,SAC1BH,GAAU5G,KAAK+G,UAAY,GAC3BD,EAAQC,UAAYrH,EACpBkH,EAAU5G,KAAKgH,YAAYpD,OAP3BiD,GAAaT,aAAaxC,EAAWiD,EAAa/C,iBAAiB,eAAe,KAU1FlB,EAAUpB,UAAU0C,iBAAmB,SAAU+C,GAC7C,IAAK,GAAI7M,GAAI,EAAGA,EAAI6M,EAAWzM,OAAQJ,IAAK,CACxC,GAAIQ,GAAS2F,KAAK/G,OAAOiE,wBAAwBwJ,EAAW7M,IACxDqM,EAA0C,YAAzB7L,EAAO6L,cAA+B,QAAU,SACrE7L,GAAO6L,cAAgBA,CAGvB,KAAK,GAFDlM,GAAOD,OAAOC,KAAKK,GACnB8E,EAAOxE,EAAcqF,KAAK/G,OAAQoB,EAAOO,UACpCe,EAAI,EAAGA,EAAI3B,EAAKC,OAAQ0B,IACzBwD,EAAKzB,eAAe1D,EAAK2B,MACzBwD,EAAKnF,EAAK2B,IAAMtB,EAAOL,EAAK2B,IAGpCqE,MAAK2G,gBAAgBtM,EAAQ6L,GAAe,GACxClG,KAAK/G,OAAO+K,oBACZhE,KAAKkE,oBAIjB7B,EAAUpB,UAAU0F,gBAAkB,SAAUtM,EAAQ6L,EAAeU,GACnE,GAAI3M,GAAS,CAKb,IAJA+F,KAAK6G,oBAAoBxM,EAAQ6L,IAC5BU,GAAevM,EAAOK,YAAcsF,KAAK/G,OAAO+K,oBACjDhE,KAAK8G,sBAAsBzM,EAAOK,YAElCL,EAAOa,cAAgB8E,KAAK/G,OAAO+K,mBAAoB,CACvD,GAAI9I,GAAeb,EAAOa,cACrBT,oBAAkBuF,KAAK/G,OAAO8N,eAC/B/G,KAAK/G,OAAO8N,aAAaC,eAAe/M,OAAS,GAAK+F,KAAK/G,OAAO+K,qBAClE9I,EAAe8E,KAAKiH,wBAAwB/L,IAEhDjB,EAASiB,EAAajB,MACtB,KAAK,GAAIiN,GAAQ,EAAGA,EAAQjN,EAAQiN,IAC5BhM,EAAagM,GAAOjM,gBACpB+E,KAAK2G,gBAAgBzL,EAAagM,GAAQhB,GAAe,GAGzDlG,KAAK6G,oBAAoB3L,EAAagM,GAAQhB,KAK9D7D,EAAUpB,UAAUgG,wBAA0B,SAAU/L,GACpD,GAAIiM,GAAQnH,IAIZ,OAH2B9E,GAAakD,OAAO,SAAUC,GACrD,MAAO8I,GAAMlO,OAAO8N,aAAaC,eAAe/H,QAAQZ,IAAM,KAItEgE,EAAUpB,UAAU6F,sBAAwB,SAAUtM,GAClD,GAAIP,GAAS,EACTiB,KACAb,EAASM,EAAcqF,KAAK/G,OAAQuB,EAAaI,SACjDP,IAAUA,EAAOa,eACjBA,EAAeb,EAAOa,eAErBT,oBAAkBuF,KAAK/G,OAAO8N,eAC/B/G,KAAK/G,OAAO8N,aAAaC,eAAe/M,OAAS,GAAK+F,KAAK/G,OAAO+K,qBAClE9I,EAAe8E,KAAKiH,wBAAwB/L,IAEhDjB,EAASiB,GAAgBA,EAAajB,MACtC,IAAImN,GAAU,EACVC,EAAoB,CACxB,KAAK5M,oBAAkBJ,GAAS,CAC5B,IAAK,GAAIR,GAAI,EAAGA,EAAIqB,EAAajB,OAAQJ,IACC,kBAAlCqB,EAAarB,GAAGqM,cAChBkB,IAEuC,UAAlClM,EAAarB,GAAGqM,eACrBmB,GAIJhN,GAAO6L,cADPkB,EAAU,GAAMC,EAAoB,GAAKA,IAAsBpN,EACxC,gBAEI,IAAtBoN,GAAuC,IAAZD,EACT,UAGA,QAE3BpH,KAAK6G,oBAAoBxM,EAAQA,EAAO6L,eACpC7L,EAAOK,YACPsF,KAAK8G,sBAAsBzM,EAAOK,cAI9C2H,EAAUpB,UAAUiD,gBAAkB,SAAUoD,GAC5C,GACIrN,GAAS,EACTkF,GAAS1E,oBAAkBuF,KAAK/G,OAAO8N,eACvC/G,KAAK/G,OAAO8N,aAAaC,eAAe/M,OAAS,EAAK+F,KAAK/G,OAAO8N,aAAaC,eAC/EhH,KAAK/G,OAAOkF,QAChB,KAAK1D,oBAAkB6M,GACnB,IAAK,GAAIzN,GAAI,EAAGA,EAAIsF,EAAKlF,OAAQJ,IAC7B,GAAIyN,EAAU,CACV,GAA8B,UAA1BnI,EAAKtF,GAAGqM,cACR,QAEJ/G,GAAKtF,GAAGqM,cAAgB,QACxBlG,KAAK6G,oBAAoB1H,EAAKtF,GAAIsF,EAAKtF,GAAGqM,mBAGlClG,MAAKsC,cAAcrD,QAAQE,EAAKtF,KAC3B,IACTsF,EAAKtF,GAAGqM,cAAgB,UACxBlG,KAAK6G,oBAAoB1H,EAAKtF,GAAIsF,EAAKtF,GAAGqM,eACtClG,KAAK/G,OAAO+K,oBACZhE,KAAK8G,sBAAsB3H,EAAKtF,IAMpDI,GAAS+F,KAAKsC,cAAcrI,MAC5B,IAAIkM,GAAWnG,KAAK/G,OAAO+L,iBAAiBzB,iBAAiB,YAAY,EACrEtJ,GAAS,GAAKkF,EAAKlF,OAAS,EACxBA,IAAWkF,EAAKlF,QAChBmM,eAAaD,IAAY,YACzBA,EAASrC,UAAU4B,IAAI,YAGvBU,eAAaD,IAAY,WACzBA,EAASrC,UAAU4B,IAAI,YAI3BU,eAAaD,IAAY,UAAW,YAG5C9D,EAAUpB,UAAU4F,oBAAsB,SAAUU,EAAepD,EAAY/F,GAC3E,GAII+H,GAJA9L,EAAS2F,KAAK/G,OAAOiE,wBAAwBkB,OAAO,SAAUC,GAC9D,MAAOA,GAAEzD,WAAa2M,EAAc3M,WAEpC4M,EAAcxH,KAAK/G,OAAOiE,wBAAwB+B,QAAQ5E,EAAO,GAUrE,IARImN,GAAe,IAEfrB,EADSnG,KAAK/G,OAAOwO,UAAUD,GACjBjE,iBAAiB,YAAY,GACtC9I,oBAAkB0L,IACnBC,eAAaD,IAAY,UAAW,SAAU,eAGtDoB,EAAcrB,cAAgB/B,EACX,UAAfA,GAA0B1J,oBAAkB8M,EAAcG,eACrC,IAAjBF,IAAqE,IAA/CxH,KAAKuC,gBAAgBtD,QAAQuI,IACnDxH,KAAKuC,gBAAgBpI,KAAKqN,IAEqB,IAA/CxH,KAAKsC,cAAcrD,QAAQsI,KAA2C,IAAjBC,IACnD/M,oBAAkBuF,KAAK/G,OAAO8N,eAAiB/G,KAAK/G,OAAO8N,aAAaC,eAAe/M,OAAS,GAClG+F,KAAKsC,cAAcnI,KAAKoN,IAEuB,IAA/CvH,KAAKsC,cAAcrD,QAAQsI,IAA2B9M,oBAAkBuF,KAAK/G,OAAO8N,eACjC,IAAnD/G,KAAK/G,OAAO8N,aAAaC,eAAe/M,QACxC+F,KAAKsC,cAAcnI,KAAKoN,IAEuB,IAA/CvH,KAAKsC,cAAcrD,QAAQsI,IAAyB9M,oBAAkBuF,KAAK/G,OAAO8N,eAClF/G,KAAKsC,cAAcnI,KAAKoN,OAG3B,KAAoB,YAAfpD,GAA2C,kBAAfA,IAAmC1J,oBAAkB8M,EAAcG,cAAe,CACpH,GAAI5L,GAAQkE,KAAKsC,cAAcrD,QAAQsI,EAIvC,KAHe,IAAXzL,GACAkE,KAAKsC,cAAcxE,OAAOhC,EAAO,IAEc,IAA/CkE,KAAKuC,gBAAgBtD,QAAQuI,GAAqB,CAClD,GAAIG,GAAe3H,KAAKuC,gBAAgBtD,QAAQuI,EAChDxH,MAAKuC,gBAAgBzE,OAAO6J,EAAc,IAGlD,GAAIC,GAA+B,kBAAfzD,EAAiC,SAAW,KAAOA,CACnEqD,IAAe,IACV/M,oBAAkB0L,IACnBA,EAASrC,UAAU4B,IAAIkC,KAInCvF,EAAUpB,UAAU4B,kBAAoB,SAAUM,GAC9C,GAEI0E,GACAC,EAHAX,EAAQnH,KACR+H,EAAc5E,EAAK4E,WAGvB,IAAI/H,KAAK/G,OAAO+K,mBACZ,GAAqB,YAAhB+D,GAA6C,WAAhBA,EAA2B,CAEzDD,GADAD,EAAY7H,KAAK/G,OAAOiE,yBACAjD,OACxB+F,KAAKuC,kBACL,KAAS1I,EAAI,EAAGA,EAAIiO,EAAajO,IAC7BmG,KAAK6G,oBAAoBgB,EAAUhO,GAAIgO,EAAUhO,GAAGqM,eAAe,OAGtE,IAAoB,WAAhB6B,GAA4C,QAAhB5E,EAAK1G,OAAkB,CACxD,GAAIuL,KACgB,YAAhBD,EACAC,EAAc7E,EAAKhE,KAGnB6I,EAAY7N,KAAKgJ,EAAKhE,KAE1B,KAAK,GAAItF,GAAI,EAAGA,EAAImO,EAAY/N,OAAQJ,IAAK,CACzC,GAAoB,WAAhBkO,EAA0B,CAC1B,GAAIjM,GAAQkE,KAAK/G,OAAOkF,SAASc,QAAQ+I,EAAYnO,IACjD8N,EAAe3H,KAAKuC,gBAAgBtD,QAAQnD,EAChDkE,MAAKuC,gBAAgBzE,OAAO6J,EAAc,GAC1C3H,KAAK6G,oBAAoBmB,EAAYnO,GAAI,WAExCY,oBAAkBuN,EAAYnO,GAAGa,aAClCsF,KAAK8G,sBAAsBkB,EAAYnO,GAAGa,iBAIxB,QAArByI,EAAK4E,aAAyB/H,KAAK/G,OAAO+K,mBAC/Cb,EAAKhE,KAAK+G,cAAgB,UAEL,cAAhB6B,GAA+C,cAAhBA,IACpC/H,KAAKsC,iBACLtC,KAAKuC,oBACLsF,EAAa7H,KAAK/G,OAAO8N,aAAaC,eAAe/M,OAAS,EAAK+F,KAAK/G,OAAOiE,wBAC3E8C,KAAK/G,OAAOkF,UACN8J,QAAQ,SAAU5N,GACpBA,EAAOY,gBACPkM,EAAML,sBAAsBzM,GAG5B8M,EAAMN,oBAAoBxM,EAAQA,EAAO6L,iBAGjDlG,KAAKkE,oBAIjB7B,EAAUpB,UAAUiH,kBAAoB,WACpC,MAAOlI,MAAKsC,eAEhBD,EAAUpB,UAAUkH,qBAAuB,WACvC,MAAOnI,MAAKuC,iBAETF,KEtXP+F,EAA4B,WAI5B,QAASA,GAAWnP,GAChBoP,OAAKC,OAAOC,cACZvI,KAAK/G,OAASA,EAelB,MAbAmP,GAAWnH,UAAUuH,cAAgB,WACjC,MAAOxI,MAAK/G,OAAO0D,KAAK8L,iBAAiBD,iBAE7CJ,EAAWnH,UAAUiC,QAAU,aAO/BkF,EAAWnH,UAAUwB,cAAgB,WACjC,MAAO,cAEJ2F,KCnBPM,EAAuB,WAIvB,QAASA,GAAMzP,GACX+G,KAAK/G,OAASA,EACdoP,OAAKC,OAAOK,SACZ3I,KAAKwC,mBAqCT,MA/BAkG,GAAMzH,UAAUwB,cAAgB,WAC5B,MAAO,SAKXiG,EAAMzH,UAAUuB,iBAAmB,WAC/BxC,KAAK/G,OAAO0D,KAAK+F,GFoBE,iBEpBuB1C,KAAK4I,cAAe5I,OAElE0I,EAAMzH,UAAU8B,oBAAsB,WAClC/C,KAAK/G,OAAO0D,KAAKsG,IFiBE,iBEjBwBjD,KAAK4I,gBAEpDF,EAAMzH,UAAU2H,cAAgB,SAAUC,GACtC,GAAIlM,GAAOzC,YAAU,YAAa2O,GAC9BC,EAAc5O,YAAU,UAAW2O,EACvClM,GAAK6F,iBF1Bc,gBE0ByBxC,KAAK/G,OAAO0D,KAAKoM,eAC7DpM,EAAK6F,iBF/Ba,eE+ByBxC,KAAK/G,OAAO0D,KAAKqM,cAC5DrM,EAAK6F,iBF1BgB,kBE0ByBxC,KAAK/G,OAAO0D,KAAKsM,iBAC/DC,YAAUJ,GAAc,eAE5BJ,EAAMzH,UAAUkI,MAAQ,WACpBnJ,KAAK/G,OAAO0D,KAAKwM,SAOrBT,EAAMzH,UAAUiC,QAAU,WACtBlD,KAAK+C,uBAEF2F,KCnDPjI,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAM5D2H,EAAgC,SAAUrH,GAE1C,QAASqH,KACL,MAAkB,QAAXrH,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,MAnBAS,GAAU2I,EAAgBrH,GAI1BZ,GACIgB,cACDiH,EAAenI,UAAW,aAAU,IACvCE,GACIgB,YAAS,IACViH,EAAenI,UAAW,iBAAc,IAC3CE,GACIgB,WAAS,aACViH,EAAenI,UAAW,eAAY,IACzCE,GACIgB,cACDiH,EAAenI,UAAW,UAAO,IACpCE,GACIgB,cACDiH,EAAenI,UAAW,oBAAiB,IACvCmI,GACThH,iBC5CE3B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAM5D4H,EAAmC,SAAUtH,GAE7C,QAASsH,KACL,MAAkB,QAAXtH,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAoB/D,MAtBAS,GAAU4I,EAAmBtH,GAI7BZ,GACIgB,WAAS,QACVkH,EAAkBpI,UAAW,WAAQ,IACxCE,GACIgB,WAAS,SACVkH,EAAkBpI,UAAW,wBAAqB,IACrDE,GACIgB,WAAS,WACVkH,EAAkBpI,UAAW,WAAQ,IACxCE,GACIgB,YAAS,IACVkH,EAAkBpI,UAAW,uBAAoB,IACpDE,GACIgB,WAAS,YACVkH,EAAkBpI,UAAW,mBAAgB,IAChDE,GACIgB,YAAS,IACVkH,EAAkBpI,UAAW,mBAAgB,IACzCoI,GACTjH,iBCvCEkH,EAAwB,WAIxB,QAASA,GAAOrQ,GACZ+G,KAAK/G,OAASA,EACd+G,KAAKuJ,eAAiB,KACtBvJ,KAAK/G,OAAO0D,KAAK+F,GAAG,kBAAmB1C,KAAKwJ,qBAAsBxJ,MAgLtE,MA3KAsJ,GAAOrI,UAAUwI,YAAc,SAAUtG,GACrC,GAAKA,EAAKhE,KAAV,CAGA,GAEIrD,GAFAqD,EAAOgE,EAAKhE,KACZjB,EAAaiB,EAAKzE,UAgBtB,IAdKD,oBAAkB0E,EAAKzE,aACrBsF,KAAK/G,OAAOyQ,aAA2D,SAA1C1J,KAAK/G,OAAO0Q,aAAaC,gBACpD5Q,EAAagH,KAAK/G,SAAYmC,EAAU4E,KAAK/G,SAUlD6C,GAASqH,EAAK9D,IAAI4F,aAAa,kBAT/BnJ,EAAQqD,EAAKzE,WAAWoB,OACPkE,KAAK/G,OAAO4B,kBAAoBJ,oBAAkByD,EAAW8B,KAAK/G,OAAO6B,sBACtFoD,EAAW8B,KAAK/G,OAAO6B,sBAAwBkF,KAAK/G,OAAO4Q,qBAC1DzP,EAAgB4F,KAAK/G,OAAQkK,EAAKhE,KAAMa,KAAK/G,OAAO0D,KAAKO,4BAE1DiG,EAAK9D,IAAIsG,MAAMmE,QAAU,SAM7B9Q,EAAagH,KAAK/G,UAAYmC,EAAU4E,KAAK/G,QAAS,CACtD,GAAI8Q,GAAU/J,KAAK/G,OACf+Q,EAAYhK,KAAK/G,OAAOiE,wBAAwBkB,OAAO,SAAU6L,GACjE,MAAOC,YAASH,EAAQlM,UAAWoM,KAASC,WAASH,EAAQnM,gBAAiBuB,IAElF,IAAI6K,EAAU/P,OAAS,EAAG,CACtB,GAAI6P,GAAUE,EAAU,GAAGjP,SAAW,YAAc,MACpDoI,GAAK9D,IAAI4G,aAAa,QAAS,YAAc6D,EAAU,MAG/DZ,YAAU/F,EAAK9D,KAAM,iBAAmBvD,EAAQ,QAAUqH,EAAKhE,KAAKpD,OACnD7B,YAAU,eAAgBiJ,EAAKhE,OAE5C+J,YAAU/F,EAAK9D,KAAM,gBAErB8D,EAAK9D,IAAImE,cAAc,qBACvBL,EAAK9D,IAAI4G,aAAa,gBAAiB,QAElC9C,EAAK9D,IAAImE,cAAc,wBAC5BL,EAAK9D,IAAI4G,aAAa,gBAAiB,SAEvCjG,KAAK/G,OAAO4Q,mBAAqB7J,KAAK/G,OAAO4B,gBACxCJ,oBAAkB0E,EAAKzE,cACxByI,EAAK9D,IAAIsG,MAAMmE,QAAU,SAGjC9J,KAAK/G,OAAOuL,QL9DM,eK8DuBrB,KAK7CmG,EAAOrI,UAAUzB,WAAa,SAAU2D,GACpC,GAAKA,EAAKhE,KAAV,CAGA,GAKIgL,GALAxN,EAAOqD,KAAK/G,OAAO0D,KACnBwC,EAAOgE,EAAKhE,KAEZiL,EADc3P,oBAAkB0E,EAAKkL,aACjBlL,EAAKpD,MAAQoD,EAAKkL,YACtCC,EAAkB,EAElB1K,EAASI,KAAK/G,OAAOsR,iBAAiBpH,EAAKvD,OAAO4K,OAClDC,EAAatL,EAAKuI,YACtB,IAAI/K,EAAK+N,oBAAoBvH,EAAKvD,OAAOkF,OAAS9E,KAAK/G,OAAO0G,gBAAiB,CAQ3E,IAAK,GAPD0G,GAAYjB,gBAAc,OAC1BC,UAAW,2BAEXsF,EAAkBvF,gBAAc,QAChCC,UAAW,iBACXuF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBjE,EAAUI,YAAYkE,EAAgB7E,YAE1C,IAAIgF,GAAgBrQ,oBAAkB0E,EAAK4L,yBACN5L,EAAKlE,gBAApCkE,EAAK4L,uBAIX,IAHID,IAAiBrQ,oBAAkB0E,EAAKjE,gBACxC4P,IAA8C,IAA7B3L,EAAKjE,aAAajB,SAEnC6Q,EAAc,CACd5B,YAAU/F,EAAK1D,MAAO,gBACtB,IAAIuL,GAAa5F,gBAAc,QAC3BC,UAAW,YAEX4F,MAAS,EAETA,GADAjL,KAAK/G,OAAO4B,cACHsE,EAAKpE,WACTN,oBAAkB0E,EAAKa,KAAK/G,OAAO6B,sBAAwBqE,EAAKa,KAAK/G,OAAO6B,uBAC5EkF,KAAK/G,OAAO4Q,qBAGL1K,EAAKpE,WAAaX,EAAgB4F,KAAK/G,OAAQkG,EAAMa,KAAK/G,OAAO0D,KAAKO,yBAEtF,IAAIgO,IAAY,CACXzQ,qBAAkB0E,EAAKzE,aAAiBD,oBAAkB0E,EAAKa,KAAK/G,OAAO6B,uBACzEqE,EAAKa,KAAK/G,OAAO6B,qBACfkF,KAAK/G,OAAOyQ,aAA2D,SAA1C1J,KAAK/G,OAAO0Q,aAAaC,eAC3DsB,GAAa9Q,EAAgB4F,KAAK/G,OAAQkK,EAAKhE,KAAMa,KAAK/G,OAAO0D,KAAKO,0BAE1EgM,YAAU8B,GAAcC,GAAUC,EAAa,mBAAqB,sBACpEZ,GAAmB,GACnBjE,EAAUI,YAAYuE,GACtBL,EAAgBhF,MAAMC,MAAQ,MAC9B0E,GAAmB,EACnBjE,EAAUI,YAAYkE,EAAgB7E,kBAEjCsE,IAAQA,IAAQjL,EAAKpD,SAE1BuO,GAAmB,GACnBjE,EAAUI,YAAYkE,EAAgB7E,aACtCO,EAAUI,YAAYkE,EAAgB7E,aAM1CqE,GAAc/E,gBAAc,QACxBC,UAAW,eAEXrF,KAAK/G,OAAOkS,gBACZhB,EAAYxE,MAAMC,MAAQ,eAAiB0E,EAAkB,OAEjEtK,KAAKoL,eAAejI,EAAMgH,EAAa9D,GACvCA,EAAUI,YAAY0D,GACtBhH,EAAK1D,KAAKgH,YAAYJ,GAE1B,IAAK5L,oBAAkBmF,IAAWA,EAAOiF,eACrC7E,KAAK/G,OAAOoS,OAAO,iBAAkBlI,GACjCnD,KAAK/G,OAAOkS,eAAe,CAC3B,GAAIG,GAAkBnI,EAAK1D,KAAK8D,iBAAiB,YAAY,EAE7D+G,IADYiB,SAASD,EAAgB3F,MAAMC,MAAO,IAElDuE,EAAYxE,MAAMC,MAAQ,eAAiB0E,EAAkB,MAGrE,GAAIG,EAAY,CACZvB,YAAU/F,EAAK1D,MAAO,gBACtB,IAAI+L,GAActR,YAAUiJ,EAAKvD,OAAO4K,MAAOrH,EAAKhE,KACV,OAA1CgE,EAAK1D,KAAK+D,cAAc,eACpBL,EAAK1D,KAAK+D,cAAc,eAAegD,UAAYgF,EAAcrI,EAAK1D,KAAK+G,UAAYgF,EAE3F/Q,oBAAkBuF,KAAK/G,OAAOwS,cAC9BzL,KAAK/G,OAAOuL,QL3JG,gBK2J2BrB,KAGlDmG,EAAOrI,UAAUmK,eAAiB,SAAUjI,EAAMgH,EAAa9D,GAC3D,GAAIqF,GAAwD,MAA1CvI,EAAK1D,KAAK+D,cAAc,eACtCL,EAAK1D,KAAK+D,cAAc,eAAegD,UAAYrD,EAAK1D,KAAK+G,SACjE,IAAsC,gBAA1BrD,GAAKvD,iBAAiCI,KAAKuJ,eACnDoC,iBAAexB,EAAanK,KAAKuJ,gBACjCvJ,KAAKuJ,eAAiB,KACtBpG,EAAK1D,KAAK+G,UAAY,OAErB,IAAIrD,EAAK1D,KAAKqE,UAAUC,SAAS,kBAClC,IAAK,GAAIlK,GAAI,EAAGA,EAAIsJ,EAAK1D,KAAKmM,SAAS3R,OAAQJ,IAC3CsQ,EAAY1D,YAAYtD,EAAK1D,KAAKmM,SAAS/R,QAI/CsQ,GAAY3D,UAAYkF,EACxBvI,EAAK1D,KAAK+G,UAAY,IAG9B8C,EAAOrI,UAAUuI,qBAAuB,SAAUrG,GAC9CnD,KAAKuJ,eAAiBpG,EAAK0I,UAE/BvC,EAAOrI,UAAUiC,QAAU,WACvBlD,KAAK/G,OAAO0D,KAAKsG,IAAI,kBAAmBjD,KAAKwJ,uBAE1CF,KCvLPwC,EAAsB,WACtB,QAASA,GAAKnP,GACV0L,OAAKC,OAAOyD,QACZ/L,KAAK/G,OAAS0D,EACdqD,KAAKgM,WACLhM,KAAKiM,kBACLjM,KAAKkM,aAAe,EACpBlM,KAAK5D,iBAAmB3B,oBAAkBuF,KAAK/G,OAAO2E,iBACtDoC,KAAKwC,mBAyFT,MAnFAsJ,GAAK7K,UAAUwB,cAAgB,WAC3B,MAAO,QAKXqJ,EAAK7K,UAAUuB,iBAAmB,WAC9BxC,KAAK/G,OAAOyJ,GAAG,cAAe1C,KAAKmM,YAAanM,MAChDA,KAAK/G,OAAOyJ,GAAG,aAAc1C,KAAKoM,qBAAsBpM,OAK5D8L,EAAK7K,UAAU8B,oBAAsB,WAC7B/C,KAAK/G,OAAO+J,cAGhBhD,KAAK/G,OAAOgK,IAAI,cAAejD,KAAKmM,aACpCnM,KAAK/G,OAAOgK,IAAI,aAAcjD,KAAKoM,wBAEvCN,EAAK7K,UAAUmL,qBAAuB,SAAUC,GAC5C,GAAIlN,GAAOkN,EAAWtP,aAClBuP,EAASD,EAAWC,MACxBtM,MAAKuM,YAAYpN,EAAMmN,GACvBtM,KAAKkM,aAAe,EACpBG,EAAWtP,aAAeiD,KAAKiM,eAC/BjM,KAAKiM,mBAETH,EAAK7K,UAAUsL,YAAc,SAAUpN,EAAMmN,GACzC,IAAK,GAAI3L,GAAI,EAAGA,EAAIxB,EAAKlF,OAAQ0G,IAW7B,GAVIX,KAAK/G,OAAO0D,KAAK6P,eAAezN,QAAQ9E,OAAS,GAA6C,KAAxC+F,KAAK/G,OAAO0D,KAAK8P,eAAe/P,IACjFjC,oBAAkBE,EAAcqF,KAAK/G,OAAQkG,EAAKwB,GAAG/F,UAAU,MAChEoF,KAAKkM,cACLlM,KAAKiM,eAAejM,KAAKkM,aAAe/M,EAAKwB,KAIjDX,KAAKkM,cACLlM,KAAKiM,eAAejM,KAAKkM,aAAe/M,EAAKwB,IAE7CxB,EAAKwB,GAAG1F,gBAAiB,CACzB,GAAIyR,GAAa,GAAIvT,eAAYgG,EAAKwB,GAAGzF,cAAcyR,aAAaL,EACpEtM,MAAKuM,YAAYG,EAAWJ,KAWxCR,EAAK7K,UAAU2L,WAAa,SAAUrQ,EAAYsQ,EAAWC,GACzD9M,KAAK/G,OAAO0D,KAAKiQ,WAAWrQ,EAAYsQ,EAAWC,IAEvDhB,EAAK7K,UAAU8L,iBAAmB,SAAUvC,GACxCxK,KAAK/G,OAAO0D,KAAKoQ,iBAAiBvC,IAOtCsB,EAAK7K,UAAUkL,YAAc,WACzBnM,KAAK/G,OAAO+T,eAAgBlO,aAAcmO,sBAAoBjN,KAAK/G,OAAO0D,KAAKmC,gBAAiB,IAMpGgN,EAAK7K,UAAUiM,aAAe,WAC1BlN,KAAK/G,OAAO0D,KAAKuQ,eACjBlN,KAAKmM,eAOTL,EAAK7K,UAAUiC,QAAU,WACrBlD,KAAK+C,uBAEF+I,KC9FPqB,EAAkC,WAClC,QAASA,GAAiBxQ,GACtBqD,KAAK/G,OAAS0D,EACdqD,KAAKoN,eACLpN,KAAKgM,WACLhM,KAAKqN,iBACLrN,KAAKkM,aAAe,EACpBlM,KAAKsN,cACLtN,KAAKuN,cAAe,EACpBvN,KAAKwC,mBACLxC,KAAKwN,eACLxN,KAAK5D,iBAAmB3B,oBAAkBuF,KAAK/G,OAAO2E,iBA6Z1D,MAxZAuP,GAAiBlM,UAAUuB,iBAAmB,WAC1CxC,KAAK/G,OAAOyJ,GAAG,oBAAqB1C,KAAKyN,uBAAwBzN,MACjEA,KAAK/G,OAAO0D,KAAK+F,GAAG,gBAAiB1C,KAAK0N,aAAc1N,MACxDA,KAAK/G,OAAOyJ,GAAG,eAAgB1C,KAAK2N,WAAY3N,MAChDA,KAAK/G,OAAOyJ,GPUM,eOVkB1C,KAAK4N,qBAAsB5N,MAC/DA,KAAK/G,OAAOyJ,GAAG,gBAAiB1C,KAAK6N,cAAe7N,OAKxDmN,EAAiBlM,UAAU8B,oBAAsB,WACzC/C,KAAK/G,OAAO+J,cAGhBhD,KAAK/G,OAAOgK,IPAM,eOAmBjD,KAAK4N,sBAC1C5N,KAAK/G,OAAOgK,IAAI,oBAAqBjD,KAAKyN,wBAC1CzN,KAAK/G,OAAOgK,IAAI,eAAgBjD,KAAK2N,YACrC3N,KAAK/G,OAAOgK,IAAI,gBAAiBjD,KAAK6N,eACtC7N,KAAK/G,OAAO0D,KAAKsG,IAAI,gBAAiBjD,KAAK0N,gBAO/CP,EAAiBlM,UAAUiC,QAAU,WACjClD,KAAK+C,uBAGToK,EAAiBlM,UAAU6M,SAAW,WAClC,MAAM9N,MAAK/G,OAAOC,qBAAsBC,gBAW5CgU,EAAiBlM,UAAU8M,kBAAoB,SAAU5O,GACrD,GAAIgI,GAAQnH,IACZA,MAAK/G,OAAOkF,SAAyC,IAA7BpE,OAAOC,KAAKmF,GAAMlF,OAAe+F,KAAK/G,OAAOC,cACrE8G,KAAK/G,OAAOiF,aAEZ,IAAKlF,EAAagH,KAAK/G,UAAYmC,EAAU4E,KAAK/G,SAAYkG,YAAgBhG,kBAAiBgG,YAAgB9B,QAAQ,CACnH,GAAIhC,GAAK2E,KAAK/G,OAAOC,UACrB,IAAI8G,KAAK/G,OAAO2E,kBACZoC,KAAK/G,OAAO+U,MAAQvT,oBAAkBuF,KAAK/G,OAAO+U,OAC9C,GAAIC,SAAUjO,KAAK/G,OAAO+U,MAC1BhO,KAAK/G,OAAO2E,iBACRoC,KAAK/G,OAAO4B,gBACZmF,KAAK/G,OAAO+U,MAAME,MAAMlO,KAAK/G,OAAO2E,gBAAiB,QAAS,MAC9DoC,KAAK/G,OAAO+U,MAAMG,UAAU,YAAanO,KAAK/G,OAAO4E,aAGxDmC,KAAK/G,OAAOmV,iBAA6D,kBAAxCpO,KAAK/G,OAAOC,WAAsB,aAAwB,CAC5F,GAAImV,GAAMrO,KAAK/G,OAAO+U,MAAMM,OAC5BD,GAAIE,YACJF,EAAMA,EAAIG,QAAQxO,KAAK/G,OAAO2E,mBAC1B6Q,iBAAkB,EACtBpT,EAAGqT,aAAaL,GAAKM,KAAK,SAAUtQ,GAChC8I,EAAMiG,YAAcwB,WAASC,SAASxQ,EAAEyQ,OAAQ3H,EAAMlO,OAAO2E,iBAAiB,GAIlE,IAHF1D,YAAU,sBAAuBiN,EAAMlO,QAAQmF,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE0Q,YAAYC,aACtB/U,SAECgV,WAAS,+BAA+B,EAAM9H,EAAMlO,QAC/CwB,oBAAkB0M,EAAM+H,mBACzBD,WAAS,UAAU,EAAO9H,EAAM+H,iBAChChF,WAAS,oBAAqB/C,EAAMlO,QAAQkW,mBAAmBhI,EAAM+H,iBACrE/H,EAAM+H,gBAAkB,MAE5B/H,EAAMlO,OAAO0D,KAAKyS,sBAMjC,IAAIjQ,YAAgB9B,OAAO,CAC5B2C,KAAKqN,iBACLrN,KAAKgM,UACL,KAASnS,EAAI,EAAGA,EAAIE,OAAOC,KAAKmF,GAAMlF,OAAQJ,IAAK,CAC/C,GAAIwV,GAAWlQ,EAAKtF,EACpBmG,MAAKqN,cAAclT,KAAKmD,YAAW+R,IAC9B5U,oBAAkB4U,EAASrP,KAAK/G,OAAO4E,aACxCmC,KAAKgM,QAAQ7R,KAAKkV,EAASrP,KAAK/G,OAAO4E,YAG/C,GAAImC,KAAK5D,gBAAiB,CAItB,IAAK,GAHDkT,MACAC,EAAc,GAAIpW,eAAY6G,KAAKqN,eAAeV,cAAa,GAAIsB,UAClEuB,MAAMxP,KAAK/G,OAAO2E,kBACd/D,EAAI,EAAGA,EAAI0V,EAAYtV,OAAQJ,IAAK,CACzC,GAAI4V,GAAYF,EAAY1V,GACxBiC,EAAQkE,KAAKgM,QAAQ/M,QAAQwQ,EAAU/S,IAC3C,KAAKjC,oBAAkBgV,EAAU/S,MACzBZ,GAAS,EADjB,CAEQ,GAAI+L,GAAa4H,EAAgB,KACjCzP,MAAKqN,cAAcvR,GAAOkE,KAAK/G,OAAO8E,cAAgB8J,MAI9DyH,GAASnV,KAAK6H,MAAMsN,EAAUG,EAAUC,OAE5C1P,KAAKqN,cAAgBrN,KAAK2P,oBAAoBL,GAE7CvV,OAAOC,KAAKgG,KAAKqN,eAAepT,OAIjC+F,KAAK4P,cAAc5P,KAAKqN,eAHxBrN,KAAK/G,OAAOkF,SAAY6B,KAAK/G,OAAkB,WAKnD+G,KAAKkM,aAAe,IAiB5BiB,EAAiBlM,UAAU0O,oBAAsB,SAAUL,GAEvD,IADA,GAAIR,MACG9O,KAAKqN,cAAcpT,OAAS,GAAKqV,EAASrV,OAAS,GAAG,CACzD,GAAI6B,GAAQwT,EAASrQ,QAAQe,KAAKqN,cAAc,KACjC,IAAXvR,EACAkE,KAAKqN,cAAcwC,SAGnBf,EAAO3U,KAAK6F,KAAKqN,cAAcwC,SAC/BP,EAASxR,OAAOhC,EAAO,IAG/B,MAAOgT,IAMX3B,EAAiBlM,UAAUwM,uBAAyB,SAAUtK,GAC1D,GAAIxJ,GAAUwJ,EAAK2L,MAEnB,IAAK9O,KAAK/G,OAAOmV,iBAAoBpO,KAAKoN,YAAYnT,QAAoD,kBAAxC+F,KAAK/G,OAAOC,WAAsB,YAKhG,GAA8C,kBAAxC8G,KAAK/G,OAAOC,WAAsB,YACpC,IAAK,GAAI+Q,GAAM,EAAGA,EAAMtQ,EAAQM,OAAQgQ,KAC/BtQ,EAAQsQ,GAAKjK,KAAK/G,OAAOmV,mBAAuF,IAAnEpO,KAAKoN,YAAYnO,QAAQtF,EAAQsQ,GAAKjK,KAAK/G,OAAO4E,cAC5FpD,oBAAkBd,EAAQsQ,GAAKnO,SACnCnC,EAAQsQ,GAAKlO,MAAQ,EACrBpC,EAAQsQ,GAAKnO,MAAQgU,KAAKC,KAAqB,IAAhBD,KAAKE,UACpCrW,EAAQsQ,GAAKhP,iBAAkB,OAKvC+E,MAAK+N,kBAAkBpU,OAf3BqG,MAAKkP,gBAAkB/L,EACvB8L,WAAS,UAAU,EAAM9L,EAiB7BA,GAAK2L,OAAiD,kBAAxC9O,KAAK/G,OAAOC,WAAsB,YAAwB8G,KAAK/G,OAAOkF,SAAWxE,EAC/FqG,KAAK/G,OAAOoS,OAAO,gBAAiBlI,IAMxCgK,EAAiBlM,UAAU2M,qBAAuB,SAAUqC,GACxD,GAAI9I,GAAQnH,KACRmD,GAAS9D,IAAK4Q,EAAWC,UAAW/Q,KAAM8Q,EAAW5V,OACzD,IAAI4V,EAAWE,KAAKlW,OAAS,EAAG,CAC5BgW,EAAW5V,OAAOU,UAAW,CAC7B,KAAK,GAAIlB,GAAI,EAAGA,EAAIoW,EAAWE,KAAKlW,OAAQJ,IAAK,CAC7CoW,EAAWE,KAAKtW,GAAG8L,MAAMmE,QAAU,WACnC,IAAIsG,GAAcH,EAAWE,KAAKtW,GAAG2J,cAAc,uBAC9C/I,qBAAkB2V,IACnBpQ,KAAK/G,OAAO0D,KAAK0T,gBAAgBpF,OAAOmF,GAGhDpQ,KAAK/G,OAAOuL,QPxLF,WOwL2BrB,OAEpC,CACD,GAAI9H,GAAK2E,KAAK/G,OAAOC,WACjBmV,EAAMrO,KAAK/G,OAAO0D,KAAK2T,gBAAgBC,gBACvCC,EAAcnC,EAAIE,QAAQnQ,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEoS,IAA4B,YAATpS,EAAEoS,IAClFpC,GAAIE,QAAUiC,EACdnC,EAAII,iBAAkB,EACtBJ,EAAIH,MAAMlO,KAAK/G,OAAO2E,gBAAiB,QAASqS,EAAW5V,OAAO2F,KAAK/G,OAAO4E,YAC9E6S,cAAY1Q,KAAK/G,OAAO0X,SACxBtV,EAAGqT,aAAaL,GAAKM,KAAK,SAAUtQ,GAChC,GAAIzE,GAAQuN,EAAMlO,OAAO0D,KAAKiU,gBAC1BC,EAAMjX,EAAMqF,QAAQgR,EAAW5V,QAC/ByW,EAAY5W,YAAU,mBAAoBmE,GAC1CyQ,EAASzQ,EAAEyQ,MACfmB,GAAW5V,OAAOa,aAAe4T,CACjC,KAAK,GAAIrN,GAAI,EAAGA,EAAIqN,EAAO7U,OAAQwH,IAC/BqN,EAAOrN,GAAG1F,MAAQkU,EAAW5V,OAAO0B,MAAQ,EAC5C+S,EAAOrN,GAAG3F,MAAQgU,KAAKC,KAAqB,IAAhBD,KAAKE,UACjClB,EAAOrN,GAAG/G,WAAauV,EAAW5V,aAC3ByU,GAAOrN,GAAG/G,WAAWQ,cACvB4T,EAAOrN,GAAG0F,EAAMlO,OAAOmV,mBAAsF,IAAlEjH,EAAMiG,YAAYnO,QAAQ6P,EAAOrN,GAAG0F,EAAMlO,OAAO4E,aACxFiT,IAAcA,EAAUrP,KAC7BqN,EAAOrN,GAAGxG,iBAAkB,EAC5B6T,EAAOrN,GAAG1G,UAAW,EACrB+T,EAAOrN,GAAG7G,SAAWmW,SAAO5J,EAAMlO,OAAO0X,QAAQK,GAAK,UACtD/B,WAAS,sBAAwBH,EAAOrN,GAAG7G,SAAUkU,EAAOrN,GAAI0F,EAAMlO,SAE1EW,EAAMkE,OAAO+S,EAAMpP,EAAI,EAAG,EAAGqN,EAAOrN,GAExCwN,YAAS,SAAUrV,EAAOyE,GAC1B4Q,WAAS,SAAU,sBAAuB5Q,GAC1C8I,EAAMlO,OAAOuL,QP1OD,iBO0OgCnG,GAC5C+Q,cAAYjI,EAAMlO,OAAO0X,SACzBtS,EAAE6I,MAAQC,EAAMlO,OAAO0D,KAAKgN,aAAasH,kBACzC/G,WAAS,oBAAqB/C,EAAMlO,QAAQkW,mBAAmB9Q,GAC/D8I,EAAMlO,OAAOuL,QP5NP,WO4NgCrB,OAIlDgK,EAAiBlM,UAAUyM,aAAe,WACtC1N,KAAKuN,cAAe,GAExBJ,EAAiBlM,UAAU2O,cAAgB,SAAUzQ,EAAM+R,GACvD,IAAK,GAAIrX,GAAI,EAAGC,EAAMC,OAAOC,KAAKmF,GAAMlF,OAAQJ,EAAIC,EAAKD,IAAK,CAC1D,GAAIsX,GAAchS,EAAKtF,GACnBkC,EAAQ,CAoBZ,IAnBAiE,KAAKkM,cACLiF,EAAYrV,MAAQkE,KAAKkM,YACpBzR,oBAAkB0W,EAAYnR,KAAK/G,OAAO8E,iBAC3CoT,EAAYjW,aAAeiW,EAAYnR,KAAK/G,OAAO8E,cACnDoT,EAAYlW,iBAAkB,EAC1B+E,KAAK/G,OAAO4Q,kBACZsH,EAAYpW,UAAW,EAGvBoW,EAAYpW,WAAYN,oBAAkB0W,EAAYnR,KAAK/G,OAAO6B,sBAC5DqW,EAAYnR,KAAK/G,OAAO6B,qBAGtCqW,EAAYrV,OAAQqV,EAAYlW,gBAAkB+E,KAAKkM,aACnDlM,KAAK5D,iBAAmB3B,oBAAkB0W,EAAYnR,KAAK/G,OAAO2E,mBAClEoC,KAAK/G,OAAOiF,WAAW/D,KAAKgX,GAEhCA,EAAYvW,SAAWmW,SAAO/Q,KAAK/G,OAAO0X,QAAQK,GAAK,UACvD/B,WAAS,sBAAwBkC,EAAYvW,SAAUuW,EAAanR,KAAK/G,SACpEwB,oBAAkByW,GAAgB,CACnC,GAAIhT,GAAaZ,YAAW4T,SACrBhT,GAAWhD,mBACXgD,GAAW8B,KAAK/G,OAAO8E,cAC9BoT,EAAYzW,WAAawD,EACzBiT,EAAYnS,eAAiBd,EAAWtD,SACxCmB,EAAQmV,EAAcnV,MAAQ,EAElCoV,EAAYpV,MAAQA,EACpBoV,EAAYjL,cAAgB,WACxBzL,oBAAkB0W,EAAYnR,KAAK/G,OAAO2E,mBAAqBuT,EAAYzW,aAC3EsF,KAAK/G,OAAOkF,SAAShE,KAAKgX,GAEzBnR,KAAK5D,iBAAyC,IAAtB+U,EAAYpV,OACrCiE,KAAK/G,OAAOiF,WAAW/D,KAAKgX,GAE3B1W,oBAAkB0W,EAAYnR,KAAK/G,OAAO8E,eAAiBoT,EAAYnR,KAAK/G,OAAO8E,cAAc9D,SAClG+F,KAAK4P,cAAcuB,EAAYnR,KAAK/G,OAAO8E,cAAeoT,KAQtEhE,EAAiBlM,UAAU4M,cAAgB,SAAU1K,GACjD,GAGIiO,GAHAC,EAAWnX,YAAU,WAAYiJ,GACjCmO,EAAapX,YAAU,aAAciJ,GACrCoO,EAAarX,YAAU,aAAciJ,GAErCqO,EAAatX,YAAU,aAAciJ,GACrC4E,EAAc7N,YAAU,cAAeiJ,GACvCsO,EAAavX,YAAU,OAAQiJ,GAC/B1G,EAASvC,YAAU,SAAUiJ,KAC3B1I,oBAAkB+W,IAAezX,OAAOC,KAAKwX,GAAYvX,QAA2B,SAAhB8N,KACtEA,EAAcA,GAA4ByJ,EAAWzJ,YAAY2J,WACjED,EAAaA,GAA0BvX,YAAU,OAAQsX,GAE1C,SADf/U,EAASA,GAAkBvC,YAAU,SAAUsX,MAE3CxR,KAAK/G,OAAO0D,KAAKiU,gBAAkBzN,EAAK2L,QAExC9O,KAAK/G,OAAO0Y,cACS,WAAhB5J,GAA4C,SAAhBA,GAC7B/H,KAAK/G,OAAOoS,OP/QR,cO+QoCxP,MAAO4V,EAAYhV,OAAQA,GAAUsL,KAUzF,IAAI6J,IALAR,EADAC,IAAa5W,oBAAkB6W,GACrBA,EAGAtR,KAAK/G,OAAO0D,KAAKzD,qBAEEC,eAAciY,EAAQlY,WAAW4D,KAAOsU,EACrElK,EAAQ0K,EAAQ3X,MACpB,IAAK+F,KAAK/G,OAAO0D,KAAK0D,gBAAkBL,KAAK/G,OAAO0D,KAAK6P,eAAezN,QAAQ9E,QAC3E+F,KAAK/G,OAAO0D,KAAK8P,eAAe/P,IAAIzC,OAAS,EAAI,CAClD,GAAIoU,GAAM,GAAIJ,SACV4D,EAAY3X,YAAU,QAASiJ,EAC/B1I,qBAAkBoX,KAClBA,EAAY,GAAI5D,SAChB4D,EAAY3H,WAAS,yBAA0BlK,KAAK/G,QAAQ6Y,YAAYD,GACxEA,EAAY3H,WAAS,yBAA0BlK,KAAK/G,QAAQ8Y,YAAYF,GAE5E,IAAIG,GAAYH,EAAUtD,QAAQnQ,OAAO,SAAU6T,GAAK,MAAgB,YAATA,EAAExB,KAC7DyB,EAAYL,EAAUtD,QAAQnQ,OAAO,SAAU6T,GAAK,MAAgB,aAATA,EAAExB,IACjEpC,GAAIE,QAAUyD,EAAU7W,OAAO+W,EAC/B,IAAIC,GAAe,GAAIhZ,eAAYyY,GAASjF,aAAa0B,EAKzD,IAJArO,KAAK/G,OAAOoS,OAAO,oBAAsBlM,KAAMgT,IAC/CP,EAAU5R,KAAKwN,YAAYsB,OAC3B9O,KAAKwN,YAAYsB,OAAS,KAEtB9O,KAAK/G,OAAO0D,KAAKyV,WAAWnY,OAAS,EAAG,CACpC+T,EAAQ9T,YAAU,QAASiJ,EAI/B,IAHI1I,oBAAkBoX,KAClBA,EAAY3H,WAAS,yBAA0BlK,KAAK/G,QAAQoZ,eAAe,GAAIpE,YAE9ExT,oBAAkBuT,GAAQ,CACvBsE,EAAetE,EAAMO,QAAQnQ,OAAO,SAAU6T,GAAK,MAAgB,iBAATA,EAAExB,IAChEmB,GAAU5R,KAAK/G,OAAOsZ,cAAcC,sBAAsBF,EAAcV,GAAS,KAI7F,GAAI5R,KAAK/G,OAAO0D,KAAKyV,WAAWnY,QAA2D,IAAjD+F,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ9E,QACtB,IAAnD+F,KAAK/G,OAAO0D,KAAK6P,eAAezN,QAAQ9E,SAAiB+F,KAAK/G,OAAO0D,KAAK8P,eAAe/P,IAAIzC,OAAQ,CACpG4X,EAAY3X,YAAU,QAASiJ,EAC/B1I,qBAAkBoX,KAClBA,EAAY3H,WAAS,yBAA0BlK,KAAK/G,QAAQoZ,eAAe,GAAIpE,UAE/EqE,GAAeT,EAAUtD,QAAQnQ,OAAO,SAAU6T,GAAK,MAAgB,iBAATA,EAAExB,IACpEmB,GAAU5R,KAAK/G,OAAOsZ,cAAcC,sBAAsBF,EAActS,KAAK/G,OAAOkF,UAAU,GAElG,GAAI6B,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ9E,OAAS,GAAK+F,KAAKuN,aAAc,CACvEvN,KAAKuN,cAAe,CACpB,IAAIrP,OAAa,EACjBA,GAEa8B,KAAK/G,OAAOiF,UACzB,IACI8P,GAAQ9T,YAAU,QAASiJ,EAC/BnD,MAAK/G,OAAOwZ,WAAa,GAAI3G,GAAK9L,KAAK/G,OAEvC,KAAK,GADDqT,GAAS,GAAI2B,SACRyE,EAAM1S,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ9E,OAAS,EAAGyY,GAAO,EAAGA,IAAO,CAC9E,GAAI9N,GAAM5E,KAAK/G,OAAOsR,iBAAiBvK,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ2T,GAAKlI,OAC9EmI,EAAU/N,EAAIgO,eAAiB5S,KAAK8N,WACpClJ,EAAIgO,aAAaC,KAAKjO,GACtB5E,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ2T,GAAK7F,SAC/CP,GAAOwG,OAAO9S,KAAK/G,OAAO0D,KAAKmC,aAAaC,QAAQ2T,GAAKlI,MAAOmI,GAEpE,GAEII,IAAahW,aAFE,GAAI5D,eAAY+E,GAAYyO,aAAaL,GAEf6F,aAAcP,EAAStF,OAAQA,EAM5E,IALAtM,KAAK/G,OAAOoS,OAAO,aAAc0H,GACjCnB,EAAUmB,EAAShW,aACnBiD,KAAKwN,YAAYsB,OAAS,KAC1B9O,KAAKsN,WAAasE,EAClB5R,KAAK/G,OAAOoS,OAAO,kBACfrL,KAAK/G,OAAO0D,KAAKyV,WAAWnY,OAAS,IAAMQ,oBAAkBuT,GAAQ,CACrE,GAEIsE,GADUpY,YAAU,QAASiJ,GACNoL,QAAQnQ,OAAO,SAAU6T,GAAK,MAAgB,iBAATA,EAAExB,IAClEmB,GAAU5R,KAAK/G,OAAOsZ,cAAcC,sBAAsBF,EAActS,KAAKsN,YAHhE,IAMrBpG,EAAQ0K,EAAQ3X,MAChB,IAAI+Y,GAAOhT,KAAKiT,OAAOrB,EAAS1K,EAAOmK,EAAUE,EAAYpO,EAC7DyO,GAAUoB,EAAKlE,OACf5H,EAAQ8L,EAAK9L,MACb/D,EAAK2L,OAAS8C,EACdzO,EAAK+D,MAAQA,EACblH,KAAK/G,OAAOoS,OAAO,gBAAiBlI,IAExCgK,EAAiBlM,UAAUgS,OAAS,SAAUrB,EAAS1K,EAAOmK,EAAUE,EAAYpO,GAYhF,OAXInD,KAAK/G,OAAOyQ,aAAiB2H,GAA2B,gBAAfE,GAKpCvR,KAAK/G,OAAOia,sBAA0B7B,GAA2B,gBAAfE,IACvDvR,KAAK/G,OAAOoS,OPzXG,iBOyX4ByD,OAAQ8C,EAAS1K,MAAOA,EAAOsK,WAAYtH,WAAS,aAAc/G,KAC7GyO,EAAU5R,KAAKwN,YAAYsB,OAC3B5H,EAAQlH,KAAKwN,YAAYtG,QAPzBlH,KAAK/G,OAAOoS,OPpXG,iBOoX4ByD,OAAQ8C,EAAS1K,MAAOA,IACnE0K,EAAU5R,KAAKwN,YAAYsB,OAC3B5H,EAAQlH,KAAKwN,YAAYtG,QAOf4H,OAAQ8C,EAAS1K,MAAOA,IAM1CiG,EAAiBlM,UAAU0M,WAAa,SAAUwF,GAC9CnT,KAAKwN,YAAc2F,GAEhBhG,MC9aX,SAAWiG,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,cAC/CA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,UACrDA,qBAAqBA,uBC3CxB,IAAI5S,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAM5D6R,EAA8B,SAAUvR,GAExC,QAASuR,KACL,MAAkB,QAAXvR,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU6S,EAAcvR,GAIxBZ,GACIgB,WAAS,KACVmR,EAAarS,UAAW,eAAY,IACvCE,GACIgB,WAAS,IACVmR,EAAarS,UAAW,gBAAa,IACxCE,GACIgB,WAAS,IACVmR,EAAarS,UAAW,kBAAe,IAC1CE,GACIgB,cACDmR,EAAarS,UAAW,wBAAqB,IAChDE,GACIgB,YAAS,IACVmR,EAAarS,UAAW,wBAAqB,IAChDE,GACIgB,YAAS,IACVmR,EAAarS,UAAW,gBAAa,IACxCE,GACIgB,WAAS,OACVmR,EAAarS,UAAW,eAAY,IACvCE,GACIgB,WAAS,QACVmR,EAAarS,UAAW,mBAAgB,IACpCqS,GACTlR,iBCrDE3B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAQ5D8R,EAAiC,SAAUxR,GAE3C,QAASwR,KACL,GAAIpM,GAAmB,OAAXpF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAGhE,OAFAmH,GAAMqM,KAAO,GAAIC,wBACjBtM,EAAMuM,cACCvM,EAmEX,MAxEA1G,GAAU8S,EAAiBxR,GAU3BwR,EAAgBtS,UAAU0S,aAAe,SAAUC,GAC3C5T,KAAK6T,SAAW7T,KAAK6T,OAAOC,UAAY9T,KAAK6T,OAAOA,UACpD7T,KAAK+T,SAAW/T,KAAKgU,kBAAkBhU,KAAK6T,UAMpDN,EAAgBtS,UAAU+S,kBAAoB,SAAUH,GACpD,MAAIA,GAAOtO,KACAvF,KAAKwT,KAAKS,cAAcJ,GAGxB7T,KAAKwT,KAAKU,gBAAgBL,IAMzCN,EAAgBtS,UAAUkT,aAAe,WACrC,MAAOnU,MAAK+T,UAKhBR,EAAgBtS,UAAUmT,YAAc,SAAUC,OAC/B,KAAXA,IAAqBA,UACGC,KAAxBtU,KAAKuU,iBACLvU,KAAK0T,WAAWc,eAAaC,WAAUA,WAASC,WAAcjE,GAAIkE,UAAQ3U,KAAKuU,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgBtS,UAAU4T,YAAc,SAAUtP,GAC9C,MAAOvF,MAAK0T,WAAWc,eAAaC,WAAUlP,KAKlDgO,EAAgBtS,UAAU6T,oBAAsB,SAAUC,GACtD/U,KAAKgN,cAAc+H,GAAM,IAE7B5T,GACIgB,cACDoR,EAAgBtS,UAAW,WAAQ,IACtCE,GACIgB,cACDoR,EAAgBtS,UAAW,qBAAkB,IAChDE,GACIgB,cACDoR,EAAgBtS,UAAW,YAAS,IACvCE,GACIgB,cACDoR,EAAgBtS,UAAW,aAAU,IACxCE,GACIgB,cACDoR,EAAgBtS,UAAW,iBAAc,IAC5CE,GACIgB,cACDoR,EAAgBtS,UAAW,sBAAmB,IAC1CsS,GACTnR,iBAEE4S,EAA8B,SAAUjT,GAExC,QAASiT,KACL,MAAkB,QAAXjT,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAUuU,EAAcjT,GAIxBZ,GACIc,gBAAesR,IAChByB,EAAa/T,UAAW,cAAW,IACtCE,GACIgB,YAAS,IACV6S,EAAa/T,UAAW,uBAAoB,IACxC+T,GACT5S,iBCjHE3B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAM5DwT,EAA8B,SAAUlT,GAExC,QAASkT,KACL,MAAkB,QAAXlT,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA6B/D,MA/BAS,GAAUwU,EAAclT,GAIxBZ,GACIgB,YAAS,IACV8S,EAAahU,UAAW,kBAAe,IAC1CE,GACIgB,YAAS,IACV8S,EAAahU,UAAW,mBAAgB,IAC3CE,GACIgB,YAAS,IACV8S,EAAahU,UAAW,oBAAiB,IAC5CE,GACIgB,WAAS,SACV8S,EAAahU,UAAW,WAAQ,IACnCE,GACIgB,WAAS,QACV8S,EAAahU,UAAW,qBAAkB,IAC7CE,GACIgB,YAAS,IACV8S,EAAahU,UAAW,0BAAuB,IAClDE,GACIgB,YAAS,IACV8S,EAAahU,UAAW,wBAAqB,IAChDE,GACIgB,YAAS,IACV8S,EAAahU,UAAW,8BAA2B,IACtDE,GACIgB,WAAS,KACV8S,EAAahU,UAAW,eAAY,IAChCgU,GACT7S,iBCxDE3B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAM5DyT,EAAgC,SAAUnT,GAE1C,QAASmT,KACL,MAAkB,QAAXnT,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAUyU,EAAgBnT,GAI1BZ,GACIgB,cACD+S,EAAejU,UAAW,YAAS,IACtCE,GACIgB,cACD+S,EAAejU,UAAW,gBAAa,IACnCiU,GACT9S,iBAKE+S,EAA8B,SAAUpT,GAExC,QAASoT,KACL,MAAkB,QAAXpT,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAU0U,EAAcpT,GAIxBZ,GACIc,gBAAeiT,IAChBC,EAAalU,UAAW,cAAW,IACtCE,GACIgB,YAAS,IACVgT,EAAalU,UAAW,kBAAe,IACnCkU,GACT/S,iBCpDE3B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgB3G,OAAO8G,iBAChBC,uBAA2BzD,QAAS,SAAUsD,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAElD,eAAeY,KAAIqC,EAAErC,GAAKsC,EAAEtC,MACpDqC,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa7G,OAAOmH,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQ3E,EAAK4E,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUvH,OAAQwH,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOvH,OAAO2H,yBAAyBL,EAAQ3E,GAAO4E,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3E,EAAK4E,OACpH,KAAK,GAAIzH,GAAIuH,EAAWnH,OAAS,EAAGJ,GAAK,EAAGA,KAAS8G,EAAIS,EAAWvH,MAAI4H,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3E,EAAK+E,GAAKd,EAAEU,EAAQ3E,KAAS+E,EAChJ,OAAOF,GAAI,GAAKE,GAAK1H,OAAO8H,eAAeR,EAAQ3E,EAAK+E,GAAIA,GAqC5D2T,EAA0B,SAAUrT,GAEpC,QAASqT,GAASrV,EAAS4Q,GACvB,GAAIxJ,GAAQpF,EAAOsT,KAAKrV,KAAMD,EAAS4Q,IAAY3Q,IAMnD,OALAmH,GAAMqG,eACNrG,EAAMmO,sBACNnO,EAAMoO,4BACNC,EAAWlN,OAAOmN,GAClBtO,EAAMxK,KAAO,GAAI0L,QACVlB,EARX1G,EAAU2U,EAAUrT,GAUpByT,EAAaJ,EASbA,EAASnU,UAAUyU,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,MAAO9V,MAAK+V,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGV,EAASnU,UAAUgV,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,MAAO9V,MAAK+V,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGV,EAASnU,UAAUiV,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,MAAO9V,MAAKqW,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFV,EAASnU,UAAUwB,cAAgB,WAC/B,MAAO,YAMX2S,EAASnU,UAAUqV,UAAY,WAC3BtW,KAAKuW,iBACLvW,KAAKwW,iBACLxW,KAAKyW,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,gBAEb9W,KAAK5D,iBAAmB3B,oBAAkBuF,KAAKjC,gBAC/CiC,KAAKjC,aAAe,aAU5BqX,EAASnU,UAAU8V,aAAe,SAAUxa,EAAYsQ,EAAWC,GAC/D9M,KAAKyS,WAAW7F,WAAWrQ,EAAYsQ,EAAWC,IAMtDsI,EAASnU,UAAUiM,aAAe,WAC1BlN,KAAKyS,YACLzS,KAAKyS,WAAWvF,gBASxBkI,EAASnU,UAAU8L,iBAAmB,SAAUvC,GAC5CxK,KAAKyS,WAAW1F,iBAAiBvC,IASrC4K,EAASnU,UAAU+V,OAAS,SAAUC,GAClCjX,KAAKrD,KAAKqa,OAAOC,IAYrB7B,EAASnU,UAAUiW,eAAiB,SAAUC,GAC1CnX,KAAKoX,aAAaF,eAAeC,GACjCnX,KAAKqX,qBAQTjC,EAASnU,UAAUqW,eAAiB,SAAUC,EAAWC,GACrDxX,KAAKrD,KAAK2a,eAAeC,EAAWC,IAExCpC,EAASnU,UAAUsV,eAAiB,WAEhC,GACIkB,GADAC,EAASC,OAAKD,MAElBD,MACAxI,WAASjP,KAAK0X,UAAYD,EAC1B,IAAIG,EACJA,MACAA,EAAa1d,YAAU8F,KAAK0X,OAAQA,EACpC,IAAIG,EACJA,MACAA,EAAiB3d,YAAU8F,KAAKyC,gBAAiBmV,GACjD3I,WAAS,OAAQ4I,EAAgB3d,YAAU8F,KAAK0X,OAAQD,IACxDE,OAAKG,KAAKL,IAQdrC,EAASnU,UAAUkI,MAAQ,WACvBnJ,KAAK+X,YAAY5O,SAErBiM,EAASnU,UAAU+W,yBAA2B,SAAU3Z,GACpD,GAAI2B,KAAKiY,cACL,OAAQ5Z,EAAE5B,QACN,IAAK,gBACDuD,KAAKkY,WACL,MACJ,KAAK,cACDlY,KAAKmY,aACL,MACJ,KAAK,mBACD,GAEIC,GAFiB/Z,EAAEgD,OACaqC,QAAQ,cACXA,QAAQ,KACzC1D,MAAKqY,sBAAsBD,EAAY5U,cAAc,qBACrD,MACJ,KAAK,qBACD,GAEI8U,GAFeja,EAAEgD,OACWqC,QAAQ,cACXA,QAAQ,KACrC1D,MAAKqY,sBAAsBC,EAAU9U,cAAc,uBACnD,MACJ,KAAK,YACD,GAAInC,GAAShD,EAAEgD,OAAOkX,cAClBC,EAAiBxY,KAAKyY,mBAAmBpX,EAC7C,IAAuB,OAAnBmX,EAAyB,CACzB,GAAI/U,GAAW+U,EAAe/U,QAC9BzD,MAAK0Y,UAAUjV,EACf,IAAIkV,GAAYta,EAAEgD,OAAOsX,UACrBtZ,EAAMmZ,EAAe5M,SAAS+M,EAClCzP,aAAU7J,GAAM,aAChB6J,YAAU7J,GAAM,eAGhBW,MAAK4Y,gBAET,MACJ,KAAK,UACD,GAAIC,GAAYxa,EAAEgD,OAAOkX,cACrBO,EAAoB9Y,KAAK+Y,uBAAuBF,EACpD,IAA0B,OAAtBC,EAA4B,CAC5B,GAAIE,GAASF,EAAkBrV,QAC/BzD,MAAK0Y,UAAUM,EACf,IAAIC,GAAS5a,EAAEgD,OAAOsX,UAClBxI,EAAO2I,EAAkBlN,SAASqN,EACtC/P,aAAUiH,GAAO,aACjBjH,YAAUiH,GAAO,eAGjBnQ,MAAK4Y,mBAMzBxD,EAASnU,UAAUwX,mBAAqB,SAAUK,GAC9C,GAAI1U,GAAa0U,EAAkBI,WAKnC,OAJmB,QAAf9U,IAA0E,IAAlDA,EAAWiB,UAAUpG,QAAQ,iBACxB,SAA7BmF,EAAWuB,MAAMmE,UACjB1F,EAAapE,KAAKyY,mBAAmBrU,IAElCA,GAGXgR,EAASnU,UAAU8X,uBAAyB,SAAUD,GAClD,GAAI1U,GAAa0U,EAAkBK,eAKnC,OAJmB,QAAf/U,IAA0E,IAAlDA,EAAWiB,UAAUpG,QAAQ,iBACxB,SAA7BmF,EAAWuB,MAAMmE,UACjB1F,EAAapE,KAAK+Y,uBAAuB3U,IAEtCA,GAEXgR,EAASnU,UAAUuV,eAAiB,WAChCxW,KAAKyW,iBACLzW,KAAK7B,YACL6B,KAAK9B,cACL8B,KAAKoZ,eACLpZ,KAAKqZ,aAAc,EACnBrZ,KAAKsZ,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEb5Z,KAAK2R,cAAiB3R,KAAK9G,qBAAsBC,iBAAgB6G,KAAK9G,WAAWA,WAAW2gB,UACnFpf,oBAAkBuF,KAAK9G,WAAWoC,QAAW0E,KAAK9G,WAAWE,kBAAmB0gB,qBACzF9Z,KAAK5D,iBAAmB3B,oBAAkBuF,KAAKpC,kBAMnDwX,EAASnU,UAAU8Y,WAAa,WAC5BC,eAAatU,IAAI1F,KAAK2Q,QAAS,QAAS3Q,KAAKia,kBAAmBja,MAChEga,eAAatU,IAAI1F,KAAK2Q,QAAS,WAAY3Q,KAAKia,kBAAmBja,MACnEA,KAAKka,eAAiB,GAAIC,kBAAena,KAAK2Q,SAC1CyJ,UAAWpa,KAAKgY,yBAAyBnF,KAAK7S,MAC9CsZ,WAAYtZ,KAAKsZ,WACjBe,UAAW,YAEXra,KAAKiY,gBACLjY,KAAK2Q,QAAQ2J,UAAsC,IAA3Bta,KAAK2Q,QAAQ2J,SAAkB,EAAIta,KAAK2Q,QAAQ2J,WAQhFlF,EAASnU,UAAUsZ,gBAAkB,WACjC,GAAIC,KACJ,OAAIxa,MAAKgD,YACEwX,GAEXA,EAAQrgB,MACJsgB,OAAQ,SACRtX,MAAOnD,KAAMA,KAAKwM,kBAEjB/R,oBAAkBuF,KAAK0a,UACxBF,EAAQrgB,MACJsgB,OAAQ,UACRtX,MAAOnD,QAGXA,KAAK2a,kBACLH,EAAQrgB,MACJsgB,OAAQ,cACRtX,MAAOnD,QAGXA,KAAK0J,aACL8Q,EAAQrgB,MACJsgB,OAAQ,QACRtX,MAAOnD,KAAMA,KAAK2J,gBAGtB3J,KAAKG,iBACLqa,EAAQrgB,MACJsgB,OAAQ,UACRtX,MAAOnD,QAGXA,KAAKM,cACLka,EAAQrgB,MACJsgB,OAAQ,OACRtX,MAAOnD,QAGXA,KAAKoS,WAAWnY,OAAS,GACzBugB,EAAQrgB,MACJsgB,OAAQ,UACRtX,MAAOnD,QAGfwa,EAAQrgB,MACJsgB,OAAQ,SACRtX,MAAOnD,QAEPA,KAAK4a,kBACLJ,EAAQrgB,MACJsgB,OAAQ,cACRtX,MAAOnD,QAGXA,KAAK6a,gBACLL,EAAQrgB,MACJsgB,OAAQ,YACRtX,MAAOnD,QAGXA,KAAK8a,gBACLN,EAAQrgB,MACJsgB,OAAQ,YACRtX,MAAOnD,QAGXA,KAAKI,gBACLoa,EAAQrgB,MACJsgB,OAAQ,aACRtX,MAAOnD,SAGXA,KAAKzC,aAAawd,aAAe/a,KAAKzC,aAAayd,eAAiBhb,KAAKzC,aAAa0C,eACtFua,EAAQrgB,MACJsgB,OAAQ,OACRtX,MAAOnD,QAGXA,KAAKib,gBAAgBjb,KAAKjB,UAC1Byb,EAAQrgB,MACJsgB,OAAQ,gBACRtX,MAAOnD,QAGXA,KAAKkb,gBACLV,EAAQrgB,MACJsgB,OAAQ,YACRtX,MAAOnD,QAGXA,KAAKkT,sBACLsH,EAAQrgB,MACJsgB,OAAQ,gBACRtX,MAAOnD,QAGRwa,IAEXpF,EAASnU,UAAUga,gBAAkB,SAAUlc,GAC3C,GAAIoI,GAAQnH,IACZ,OAAOjB,GAAQoc,KAAK,SAAUvW,GAC1B,MAAIA,GAAI7F,QACGoI,EAAM8T,gBAAgBrW,EAAI7F,YAE3B6F,EAAIwW,WAAYxW,EAAIyW,qBAOtCjG,EAASnU,UAAUqa,aAAe,WAC9BtB,eAAauB,OAAOvb,KAAK2Q,QAAS,QAAS3Q,KAAKia,oBAMpD7E,EAASnU,UAAUua,OAAS,WACxBC,iBAAgBpa,OAAQrB,KAAK2Q,SAAW3Q,KAAKoF,eAC7CpF,KAAKT,aAAe,GAAI+J,GAAOtJ,MAC/BA,KAAK0b,WAAa,GAAIvO,GAAiBnN,MACvCA,KAAK+X,YAAc,GAAIrP,GAAM1I,MAC7BA,KAAKyI,iBAAmB,GAAIL,GAAWpI,MAIvCA,KAAKwE,QbpcK,QaqcVxE,KAAK2b,sBACL3b,KAAKnF,eAAgB,EACrBmF,KAAK4b,gBAAgB5b,KAAK9G,YAC1B8G,KAAK6b,WACL7b,KAAK8b,aACL,IAAIC,GAAgB3W,gBAAc,OAAS4L,GAAIhR,KAAK2Q,QAAQK,GAAK,gBACjE9H,aAAUlJ,KAAK2Q,SAAU,cACpBlW,oBAAkBuF,KAAKgc,SAAoC,gBAAjBhc,eAA2D,IAA9BA,KAAKgc,OAAO/c,QAAQ,OAC5Fe,KAAK2Q,QAAQhL,MAAMqW,OAAShc,KAAKgc,QAEhCvhB,oBAAkBuF,KAAK4F,QAAkC,gBAAhB5F,cAAyD,IAA7BA,KAAK4F,MAAM3G,QAAQ,OACzFe,KAAK2Q,QAAQhL,MAAMC,MAAQ5F,KAAK4F,OAEpC5F,KAAK2Q,QAAQlK,YAAYsV,GACzB/b,KAAKrD,KAAKsf,SAASF,GACnB/b,KAAK+Z,cAET3E,EAASnU,UAAU2a,gBAAkB,SAAUzc,GAC3C,GAAIgI,GAAQnH,IACRb,aAAgB9B,QAAS8B,EAAKlF,OAAS,GAAKkF,EAAK,GAAGzB,eAAe,UACnEsC,KAAK7B,SAAWgB,EAChBa,KAAK7B,SAASC,OAAO,SAAUC,GAC3B4Q,WAAS,sBAAwB5Q,EAAEzD,SAAUyD,EAAG8I,GAChC,IAAZ9I,EAAEtC,OACFoL,EAAMjJ,WAAW/D,KAAKkE,MAK9B2B,KAAK0b,WAAW3N,kBAAkB5O,IAY1CiW,EAASnU,UAAUib,mBAAqB,WACpClc,KACKmc,mBACLnc,KAAKrD,KAAKyf,UAAYpc,KAAKoc,UAC3Bpc,KAAKrD,KAAKsb,cAAgBjY,KAAKiY,cAC/BjY,KAAKrD,KAAK0f,kBAAoBrc,KAAKqc,kBACnCrc,KAAKrD,KAAKoC,QAAUiB,KAAKsc,eAAetc,KAAKjB,SAC7CiB,KAAKrD,KAAKie,iBAAmB5a,KAAK4a,iBAClC5a,KAAKrD,KAAKme,eAAiB9a,KAAK8a,eAChC9a,KAAKrD,KAAKqR,MAAQhO,KAAKgO,MACvBhO,KAAKrD,KAAK4f,gBAAkBvc,KAAKuc,gBACjCvc,KAAKrD,KAAK+M,YAAc1J,KAAK0J,YAC7B1J,KAAKrD,KAAKgN,aAAesD,sBAAoBjN,KAAK2J,cAClD3J,KAAKrD,KAAK6f,cAAgBxc,KAAKwc,cAC/Bxc,KAAKrD,KAAKyD,eAAiBJ,KAAKI,eAChCJ,KAAKrD,KAAK2D,aAAeN,KAAKM,aAC9BN,KAAKrD,KAAK0D,eAAiBL,KAAKK,eAChCL,KAAKrD,KAAKuW,qBAAuBlT,KAAKkT,qBACtClT,KAAKrD,KAAKiJ,MAAQ5F,KAAK4F,MACvB5F,KAAKrD,KAAKqf,OAAShc,KAAKgc,OACxBhc,KAAKrD,KAAK8f,aAAezc,KAAKyc,aAC9Bzc,KAAKrD,KAAKwD,gBAAkBH,KAAKG,gBACjCH,KAAKrD,KAAKwO,cAAgBnL,KAAKmL,cAC/BnL,KAAKrD,KAAK4D,cAAgBP,KAAKO,cAC/BP,KAAKrD,KAAK+f,YAAc1c,KAAK0c,YAC7B1c,KAAKrD,KAAKggB,UAAY3c,KAAK2c,UAC3B3c,KAAKrD,KAAKigB,UAAY5c,KAAK4c,UAC3B5c,KAAKrD,KAAKue,eAAiBlb,KAAKkb,eAChClb,KAAKrD,KAAK+d,QAAUzN,sBAAoBjN,KAAK6c,kBAC7C7c,KAAKrD,KAAKmgB,gBAAkB9c,KAAK8c,gBACjC9c,KAAKrD,KAAK6P,eAAiBS,sBAAoBjN,KAAKwM,gBACpDxM,KAAKrD,KAAKogB,kBAAoB9P,sBAAoBjN,KAAK+c,mBACvD/c,KAAKrD,KAAKmC,aAAemO,sBAAoBjN,KAAKlB,cAClDkB,KAAKrD,KAAK8P,eAAiBQ,sBAAoBjN,KAAKyM,gBACpDzM,KAAKrD,KAAKyV,WAAanF,sBAAoBjN,KAAKoS,YAChDpS,KAAKrD,KAAKqgB,iBAAmB/P,sBAAoBjN,KAAKgd,kBACtDhd,KAAKrD,KAAKsgB,UAAYhQ,sBAAoBjN,KAAKid,WAC/Cjd,KAAKrD,KAAK+a,OAASzK,sBAAoBjN,KAAK0X,QAC5C1X,KAAKrD,KAAKugB,iBAAmBld,KAAKkd,iBAClCld,KAAKrD,KAAKge,iBAAmB1N,sBAAoBjN,KAAKmd,kBACtDnd,KAAKrD,KAAKygB,gBAAkBnQ,sBAAoBjN,KAAKod,iBACrDpd,KAAKrD,KAAKY,aAAeyC,KAAKqd,sBAC9Brd,KAAKrD,KAAK8O,YAAcwB,sBAAoBjN,KAAKyL,aACjDzL,KAAKrD,KAAKke,eAAiB5N,sBAAoBjN,KAAK6a,eAEpD7a,MAAKrD,KAAqB,uBAAIqD,KAAqB,sBAEnDA,MAAKrD,KAAkB,eAAI,GAE/ByY,EAASnU,UAAUqc,cAAgB,SAAUna,GACzCnD,KAAKwE,QAAQtK,YAAU,OAAQiJ,GAAOA,IAE1CiS,EAASnU,UAAUsc,eAAiB,WAChC,GAAIpW,GAAQnH,KACRwd,EAAWxd,IACfA,MAAKrD,KAAK8gB,aAAezd,KAAKsd,cAAczK,KAAK7S,MACjDA,KAAKrD,KAAK+gB,YAAc,SAAUva,GAC9BgE,EAAM+V,iBAAmB/V,EAAMxK,KAAKugB,iBACpC/V,EAAM3C,QbxhBO,cawhBqBrB,IAEtCnD,KAAKrD,KAAKghB,cAAgB,SAAUxa,GAChCgE,EAAM+V,iBAAmB/V,EAAMxK,KAAKugB,iBACpC/V,EAAM3C,QbxhBS,gBawhBqBrB,IAExCnD,KAAKrD,KAAKihB,WAAa,SAAUza,GAC7BgE,EAAMkQ,oBACNlQ,EAAM3C,QbphBM,aaohBqBrB,IAErCnD,KAAKrD,KAAKkhB,mBAAqB,SAAU1a,GACrCgE,EAAMkE,OAAO,gBAAiBlI,GAC9BA,EAAOgE,EAAMqG,aAEjBxN,KAAKrD,KAAKmhB,iBAAmB,SAAU3a,GACnCgE,EAAMkE,OAAO,cAAelI,GAC5BA,EAAOgE,EAAMqG,aAEjBxN,KAAKrD,KAAKohB,eAAiB,SAAU5a,GACjCgE,EAAM3C,QbziBU,iBayiBqBrB,IAEzCnD,KAAKrD,KAAKqhB,kBAAoBhe,KAAKsd,cAAczK,KAAK7S,MACtDA,KAAKrD,KAAKshB,oBAAsBje,KAAKsd,cAAczK,KAAK7S,MACxDA,KAAKrD,KAAKuhB,yBAA2Ble,KAAKsd,cAAczK,KAAK7S,MAC7DA,KAAKrD,KAAKwhB,uBAAyBne,KAAKsd,cAAczK,KAAK7S,MAC3DA,KAAKrD,KAAKyhB,kBAAoBpe,KAAKsd,cAAczK,KAAK7S,MACtDA,KAAKrD,KAAK0hB,gBAAkBre,KAAKsd,cAAczK,KAAK7S,MACpDA,KAAKrD,KAAK2hB,kBAAoBte,KAAKsd,cAAczK,KAAK7S,MACtDA,KAAKrD,KAAK4hB,eAAiBve,KAAKsd,cAAczK,KAAK7S,MACnDA,KAAKrD,KAAK6hB,eAAiBxe,KAAKsd,cAAczK,KAAK7S,MACnDA,KAAKrD,KAAK8hB,gBAAkBze,KAAKsd,cAAczK,KAAK7S,MACpDA,KAAKrD,KAAK+hB,eAAiB1e,KAAKsd,cAAczK,KAAK7S,MACnDA,KAAKrD,KAAKgiB,gBAAkB3e,KAAKsd,cAAczK,KAAK7S,MACpDA,KAAKrD,KAAKiiB,aAAe5e,KAAKsd,cAAczK,KAAK7S,MACjDA,KAAKrD,KAAKkiB,eAAiB7e,KAAKsd,cAAczK,KAAK7S,MACnDA,KAAKrD,KAAKmiB,YAAc9e,KAAKsd,cAAczK,KAAK7S,MAChDA,KAAKrD,KAAKoiB,SAAW/e,KAAKsd,cAAczK,KAAK7S,MAC7CA,KAAKrD,KAAKqiB,WAAahf,KAAKsd,cAAczK,KAAK7S,MAC/CA,KAAKrD,KAAKsiB,gBAAkBjf,KAAKsd,cAAczK,KAAK7S,MACpDA,KAAKrD,KAAKuiB,WAAalf,KAAKsd,cAAczK,KAAK7S,MAC/CA,KAAKrD,KAAKwiB,YAAcnf,KAAKsd,cAAczK,KAAK7S,MAChDA,KAAKrD,KAAKyiB,cAAgBpf,KAAKsd,cAAczK,KAAK7S,MAClDA,KAAKrD,KAAK0iB,SAAWrf,KAAKsd,cAAczK,KAAK7S,MAC7CA,KAAKrD,KAAK2iB,cAAgBtf,KAAKsd,cAAczK,KAAK7S,MAClDA,KAAKrD,KAAK4iB,UAAY,SAAUpc,GAM5B,GALAgE,EAAMqY,kBAAkBrc,GACxBgE,EAAMkQ,oBACNlQ,EAAMsY,aAAatY,EAAMM,WACzBN,EAAMkE,OAAO,eAAgBlI,GAC7BgE,EAAM3C,QbrlBK,YaqlBqBrB,GAC5BnK,EAAamO,KAAW/L,EAAU+L,KAAWA,EAAMiH,gBAAiB,CACpE,GAAIsR,GAAMxlB,YAAU,sBAAuBiN,GAAO/I,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE0Q,YAAYC,aACtB/U,MACHgV,YAAS,gCAAiCyQ,EAAM,GAAIvY,GAExDA,EAAMtM,eAAgB,GAE1BmF,KAAKrD,KAAKsM,gBAAkB,SAAU9F,GAClC,GACI4E,GAAc7N,YAAU,SAAUiJ,EACtC,IAAInK,EAAawkB,KAAcpiB,EAAUoiB,IAA6B,SAAhBzV,EAClDyV,EAASnS,OAAO,oBAAqBlI,GACrCA,EAAQqa,EAAqB,gBAE5B,IAAiC,IAA7BA,EAASrf,SAASlE,QAAgBmB,EAAUoiB,IAAaA,EAAStkB,qBAAsBC,eAAa,CAC1G,GAAIkC,GAAKmiB,EAAStkB,UAClBskB,GAAS9B,WAAW3N,kBAAkB1S,EAAGnC,WAAW4D,MACpDqG,EAAK2L,OAAS0O,EAAS7gB,KAAKzD,WAAqB,WAAE4D,KAAO0gB,EAASrf,SAQvE,GANKnF,EAAawkB,IACdA,EAASnS,OAAO,gBAAiBlI,GAGrC7F,SAAO6F,EAAMqa,EAAShQ,cAEjBxN,KAAK2f,WAAY,CAClB,GAAIC,GAAoB,GAAIC,WAI5B,OAHArC,GAAShZ,Qb9mBI,kBa8mB4BrB,EAAM,SAAU2c,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf5f,KAAKggB,qBACLhgB,KAAKigB,yBACLjgB,KAAKkgB,sBAET9K,EAASnU,UAAUif,mBAAqB,WACpC,GAAI/Y,GAAQnH,IACZA,MAAKrD,KAAKwjB,aAAe,SAAUhd,GAC/B,GAAIid,GAAkB,GAAIP,WAO1B,OANA1Y,GAAM3C,Qb9mBQ,ea8mBqBrB,EAAM,SAAUkd,GAC1CA,EAAYC,QACbnZ,EAAMkE,ObhnBA,eagnB4BlI,GAEtCid,EAAgBL,QAAQM,KAErBD,GAEXpgB,KAAKrD,KAAK4jB,cAAgB,SAAUpd,GAChC,GAAIid,GAAkB,GAAIP,WAI1B,OAHA1Y,GAAM3C,QAAQtK,YAAU,OAAQiJ,GAAOA,EAAM,SAAUqd,GACnDJ,EAAgBL,QAAQS,KAErBJ,GAEXpgB,KAAKrD,KAAK8jB,UAAY,SAAUtd,GAC5B,GAAIid,GAAkB,GAAIP,WAI1B,OAHA1Y,GAAM3C,Qb/lBK,Ya+lBqBrB,EAAM,SAAUud,GAC5CN,EAAgBL,QAAQW,KAErBN,IAGfhL,EAASnU,UAAUgf,uBAAyB,WACxC,GAAI9Y,GAAQnH,IACZA,MAAKrD,KAAKgkB,SAAW,SAAUxd,GAC3B,GAAIgE,EAAMxK,KAAKikB,oBAAqB,CAChC,GAAIC,OAAe,EACnBA,GAAe1Z,EAAMxK,KAAKmkB,kBAAkBC,YAAYpQ,QAAQqQ,uBAAuB,cAAc,IAChGvmB,oBAAkBomB,IAAiBA,EAAa7P,KAAO7J,EAAMwJ,QAAQK,GAAK,6BAC3E7N,EAAKmd,QAAS,GAGtB,GAAIF,GAAkB,GAAIP,WAU1B,OATA1Y,GAAM3C,Qb1mBI,Wa0mBqBrB,EAAM,SAAU8d,GACvCC,eACAD,EAAaxhB,KAAO0hB,aAAWF,EAAaxhB,OAE3CwhB,EAAaX,QACdnZ,EAAMkE,Ob/mBJ,Wa+mB4B4V,GAElCb,EAAgBL,QAAQkB,KAErBb,GAMXpgB,KAAKrD,KAAK0iB,SAAW,SAAUlc,GAC3B,GACIie,GAAU,GAAIvB,WAGlB,OAFA1c,GAAS,QAAIie,EACbja,EAAMkE,ObznBI,WaynBoBlI,GACvBie,GAkBXphB,KAAKrD,KAAK0kB,YAAc,SAAUle,GACE,SAA5BgE,EAAM5J,aAAaI,MACnBwJ,EAAM3C,Qb1oBG,ca0oByBrB,GAEtCgE,EAAMkE,Ob5oBO,ca4oBoBlI,KAGzCiS,EAASnU,UAAUue,kBAAoB,SAAUrc,GAC7C,GAAIgE,GAAQnH,IACRkhB,cACAI,WAAW,WACPna,EAAMoa,sBAAsBpe,IAC7B,KAGHnD,KAAKuhB,sBAAsBpe,IAGnCiS,EAASnU,UAAUkb,iBAAmB,WAelC,GAPAnc,KAAKrD,KAAKzD,WAAe8G,KAAK9G,qBAAsBC,eAChC,GAAIA,eAAY6G,KAAK9G,WAAWA,WAAY8G,KAAK9G,WAAWsoB,aAAcxhB,KAAK9G,WAAWE,SAA1G4G,KAAK7B,SACL+iB,cAAclhB,KAAK9G,qBAAsBC,iBACzC6G,KAAKrD,KAAKzD,WAAsB,YAAI8G,KAAK9G,WAAsB,YAC/D8G,KAAKrD,KAAKzD,WAAyB,eAAI8G,KAAK9G,WAAyB,eACrE8G,KAAKrD,KAAKzD,WAAc,IAAI8G,KAAK9G,WAAc,KAE/C8G,KAAK9G,qBAAsBC,iBAAgB6G,KAAK9G,WAAWA,WAAW2gB,SAAW7Z,KAAK9G,WAAWoC,OAAQ,CACzG0E,KAAKrD,KAAKzD,WAAqB,WAAE4D,KAAOvB,EAAYyE,KAAK9G,WAAqB,WAAE4D,MAChFkD,KAAKrD,KAAKzD,WAAgB,MAAI8G,KAAK9G,WAAWoC,KAC9C,IAAImmB,GAAOzhB,KAAKrD,KAAKzD,UAChBuB,qBAAkBuF,KAAKrD,KAAKzD,WAAgB,QAC7C8G,KAAKrD,KAAKzD,WAAgB,MAAEyV,KAAK,SAAUtQ,GACvCojB,EAAe,WAAE5H,SAAU,EAC3B4H,EAAoB,iBAAI,EACxBA,EAAe,WAAE3kB,KAAOuB,EAAEyQ,OAC1B2S,EAAY,QAAI,GAAIC,mBAKpCtM,EAASnU,UAAU+e,mBAAqB,WACpC,GAAI7Y,GAAQnH,KACRwd,EAAWxd,IACfA,MAAKrD,KAAK2hB,kBAAoB,SAAUnb,GACpCgE,EAAM3C,QbrsBa,oBaqsBqBrB,GACxCgE,EAAMkE,ObtsBa,oBassBoBlI,IAE3CnD,KAAKrD,KAAKglB,gBAAkB,SAAUxe,GAClCgE,EAAMkE,OAAO,kBAAmBlI,GAChCgE,EAAM3C,QblqBW,kBakqBqBrB,IAE1CnD,KAAKrD,KAAKilB,YAAc,SAAUze,GAEV,YADFjJ,YAAU,cAAeiJ,IAEvCgE,EAAMkE,OAAO,qBAEZrS,EAAamO,IAAW1M,oBAAkB0M,EAAMJ,eACA,IAA7CI,EAAMxK,KAAK6P,eAAezN,QAAQ9E,QAAyD,IAAzCkN,EAAMxK,KAAK8P,eAAe/P,IAAIzC,SACpFkN,EAAMkE,OAAO,gBAAkBlN,SAAUgJ,EAAMxK,KAAKzD,aACpDiO,EAAMxK,KAAKzD,WAAaiO,EAAMqG,YAAYsB,OAE9C,IAAIsR,GAAkB,GAAIP,WAC1B,IAAIqB,cAAmC,WAArB/d,EAAK4E,YAA0B,CAE7C5E,EAAS,KAAIA,EAAS,KAAE,GAe5B,MAbAgE,GAAM3C,Qb3wBO,ca2wBqBrB,EAAM,SAAUqO,GAI9C,GAHKA,EAAW8O,QACZnZ,EAAMkE,ObjuBH,YaiuB4BmG,GAE/B0P,cAAyC,WAA3B1P,EAAWzJ,YAA0B,CAEnDyJ,EAAe,KAAIrK,EAAM0a,qBAEzBX,cAAyC,cAA3B1P,EAAWzJ,cACzByJ,EAAWnS,IAAM8hB,aAAW3P,EAAWnS,MAE3C+gB,EAAgBL,QAAQvO,KAErB4O,GAEXpgB,KAAKrD,KAAKmlB,eAAiB,SAAU3e,GACjCgE,EAAMkE,OAAO,iBAAkBlI,GAC/BgE,EAAMkQ,oBACNlQ,EAAM4a,sBACmB,YAArB5e,EAAK4E,aACLZ,EAAMkE,OAAO,qBAEQ,QAArBlI,EAAK4E,aAAgE,QAAtCZ,EAAM5J,aAAaC,gBAAkE,WAAtC2J,EAAM5J,aAAaC,gBACjG2J,EAAMkE,ObpvBA,WaovBwBlI,GAET,cAArBA,EAAK4E,aACLZ,EAAMkE,ObnuBC,YamuBwBlI,GAEnCgE,EAAMkE,OAAO,oBAAqBlI,GAClCgE,EAAM3C,QbtyBU,iBasyBqBrB,IAEzCnD,KAAKrD,KAAKqM,aAAe,SAAU7F,GAC3B1I,oBAAkBuF,KAAK2f,YACvB1Q,WAAS,cAAc,EAAO9L,GAG9B8L,WAAS,aAAcjP,KAAK2f,WAAYxc,GAE5Cqa,EAASje,aAAakK,YAAYtG,IAEtCnD,KAAKrD,KAAKoM,cAAgB,SAAU5F,GAC5B1I,oBAAkBuF,KAAK2f,YACvB1Q,WAAS,cAAc,EAAO9L,GAG9B8L,WAAS,aAAcjP,KAAK2f,WAAYxc,GAE5Cqa,EAASje,aAAaC,WAAW2D,IAErCnD,KAAKrD,KAAKqlB,iBAAmB,SAAU7e,GACnCgE,EAAMkE,ObvxBY,mBauxBoBlI,GACtCgE,EAAM3C,QbxxBY,mBawxBqBrB,IAE3CnD,KAAKrD,KAAKslB,gBAAkB,SAAU9e,GAClCgE,EAAMkE,Ob7xBW,kBa6xBoBlI,GACrCgE,EAAM3C,Qb9xBW,kBa8xBqBrB,IAE1CnD,KAAKrD,KAAKoM,cAAgB,SAAU5F,GAChCgE,EAAM5H,aAAaC,WAAW2D,KAOtCiS,EAASnU,UAAU4a,SAAW,WAC1B7b,KAAKkc,qBACLlc,KAAKud,iBACLtO,WAAS,qBAAsBjP,KAAKkiB,mBAAoBliB,KAAKrD,KAE7DsS,YAAS,mBAAoBjP,KAAQ,iBAAGA,KAAKrD,OAMjDyY,EAASnU,UAAU0a,oBAAsB,WACrC,IAAK3b,KAAKjB,QAAQ9E,SAAY+F,KAAK0b,WAAW5N,YAAc/T,OAAOC,KAAKgG,KAAK9G,YAAYe,OAAS,CAC9F,GAAII,OAAS,EAIbA,GAAS2F,KAAK9G,WAAW,EAGzB,KAAK,GADDc,GAAOD,OAAOC,KAAKK,GACdR,EAAI,EAAGA,EAAIG,EAAKC,OAAQJ,KACuC,KAA/DmG,KAAKjC,aAAciC,KAAKpC,iBAAiBqB,QAAQjF,EAAKH,KACvDmG,KAAKjB,QAAQ5E,KAAKH,EAAKH,MAKvCub,EAASnU,UAAUoc,oBAAsB,WACrC,GAAInd,KAWJ,QATAA,EAAK6a,YAAc/a,KAAKzC,aAAawd,YACrC7a,EAAKD,aAAeD,KAAKzC,aAAa0C,aACtCC,EAAK8a,cAAgBhb,KAAKzC,aAAayd,cACvC9a,EAAK1C,eAAsD,WAArCwC,KAAKzC,aAAaC,eAA8B,SAAW,MACjF0C,EAAKiiB,oBAAsBniB,KAAKzC,aAAa4kB,oBAC7CjiB,EAAKkiB,kBAAoBpiB,KAAKzC,aAAa6kB,kBAC3CliB,EAAK2L,SAAW7L,KAAKzC,aAAasO,SAClC3L,EAAKmiB,wBAA0BriB,KAAKzC,aAAa8kB,wBACjDniB,EAAS,KAAIF,KAAKzC,aAAiB,KAC3ByC,KAAKzC,aAAaI,MACtB,IAAK,SACDuC,EAAKvC,KAAOqC,KAAKzC,aAAaI,IAC9B,MACJ,KAAK,MACDuC,EAAKvC,KAAO,QACZ,MACJ,KAAK,OACDuC,EAAKvC,KAAO,SACZuC,EAAKkiB,mBAAoB,EAGjC,MAAOliB,IAMXkV,EAASnU,UAAUkc,eAAiB,WAChC,GAAInd,KAAK2a,iBAAkB,CAEvB,IAAK,GADDjL,MACK7V,EAAI,EAAGA,EAAImG,KAAK2a,iBAAiB1gB,OAAQJ,IAC9C,OACQmG,KAAK2a,iBAAiB9gB,IAC1B,IAAK,SACL,IAAKwZ,oBAAiBuD,OAClBlH,EAAMvV,MAAOmoB,KAAM,SAAUjhB,OAAQ,aAAc2P,GAAIhR,KAAK2Q,QAAQK,GAAK,4BACrEtB,QAAU4S,KAAM,QAAStR,GAAI,UAAasR,KAAM,QAAStR,GAAI,WACjE,MACJ,SACItB,EAAMvV,KAAK6F,KAAK2a,iBAAiB9gB,IAG7C,MAAO6V,GAGP,MAAO,OAOf0F,EAASnU,UAAU4b,eAAiB,WAChC,GAAI7c,KAAK0a,QAAS,CACd1a,KAAKuiB,KAAO,GAAI5K,QAAK,WAAY3X,KAAKyW,cAAezW,KAAK0X,OAE1D,KAAK,GADDhI,MACK7V,EAAI,EAAGA,EAAImG,KAAK0a,QAAQzgB,OAAQJ,IACrC,OACQmG,KAAK0a,QAAQ7gB,IACjB,IAAK,SACL,IAAKuZ,eAAYoP,OACb9S,EAAMvV,KAAK,SACX,MACJ,KAAK,QACL,IAAKiZ,eAAY1K,MACbgH,EAAMvV,KAAK,QACX,MACJ,KAAK,YACL,IAAKiZ,eAAYyD,UACb,GAAI4L,GAAcziB,KAAKuiB,KAAKG,YAAY,YACxChT,GAAMvV,MAAOmoB,KAAMG,EAAaA,YAAaA,EACzCE,WAAY,WAAY3R,GAAIhR,KAAK2Q,QAAQK,GAAK,0BAClD,MACJ,KAAK,cACL,IAAKoC,eAAY0D,YACb,GAAI8L,GAAU5iB,KAAKuiB,KAAKG,YAAY,cACpChT,GAAMvV,MAAOmoB,KAAMM,EACfH,YAAaG,EAASD,WAAY,aAAc3R,GAAIhR,KAAK2Q,QAAQK,GAAK,4BAE1E,MACJ,SACItB,EAAMvV,KAAK6F,KAAK0a,QAAQ7gB,IAGpC,MAAO6V,GAGP,MAAO,OAOf0F,EAASnU,UAAUqb,eAAiB,SAAUvd,GAC1C,GAAIa,GAASb,CACbiB,MAAKoZ,cAIL,KAAK,GAHDyJ,GACAC,EACAC,KACKlpB,EAAI,EAAGA,EAAI+F,EAAO3F,OAAQJ,IAAK,CAGpC,GAFAipB,KACAD,KAC+B,gBAApB7iB,MAAKjB,QAAQlF,GACpBipB,EAAWtY,MAAQqY,EAAerY,MAAQxK,KAAKjB,QAAQlF,OAGvD,KAAK,GAAImpB,GAAK,EAAGC,EAAKlpB,OAAOC,KAAK4F,EAAO/F,IAAKmpB,EAAKC,EAAGhpB,OAAQ+oB,IAAM,CAChE,GAAIjO,GAAOkO,EAAGD,EACdF,GAAW/N,GAAQ8N,EAAe9N,GAAQnV,EAAO/F,GAAGkb,GAGxDnV,EAAO/F,GAAGkF,QACViB,KAAKsc,eAAevd,EAAQlF,GAAGkF,SAG/BiB,KAAKoZ,YAAYjf,KAAK,GAAI2F,GAAO+iB,IAErCE,EAAqB5oB,KAAK2oB,GAE9B,MAAOC,IAQX3N,EAASnU,UAAUiiB,kBAAoB,SAAUC,EAASC,GAGtD,IAAK,GADDC,IAAiB,EACZL,EAAK,EAAGM,EAFAvpB,OAAOC,KAAKmpB,GAEeH,EAAKM,EAAarpB,OAAQ+oB,IAAM,CACxE,GAAIjO,GAAOuO,EAAaN,EACxB,QAAQjO,GACJ,IAAK,UACD/U,KAAKrD,KAAKoC,QAAUiB,KAAKsc,eAAetc,KAAKjB,QAC7C,MACJ,KAAK,kBACDiB,KAAKrD,KAAK4mB,gBACV,MACJ,KAAK,cACDvjB,KAAKrD,KAAK+M,YAAc1J,KAAK0J,WAC7B,MACJ,KAAK,eACD1J,KAAKrD,KAAKgN,aAAesD,sBAAoBjN,KAAK2J,cAClD0Z,GAAiB,CACjB,MACJ,KAAK,uBACDrjB,KAAKrD,KAAKuW,qBAAuBlT,KAAKkT,oBACtC,MACJ,KAAK,UACDlT,KAAKrD,KAAK+d,QAAU1a,KAAK6c,gBACzB,MACJ,KAAK,iBACD7c,KAAKrD,KAAKue,eAAiBlb,KAAKkb,cAChC,MACJ,KAAK,oBACDlb,KAAKrD,KAAKogB,kBAAoB9P,sBAAoBjN,KAAK+c,kBACvD,MACJ,KAAK,eACD/c,KAAKrD,KAAK2D,aAAeN,KAAKM,YAC9B,MACJ,KAAK,oBACDN,KAAKrD,KAAK6mB,kBAAoBxjB,KAAKwjB,iBACnC,MACJ,KAAK,eACDxjB,KAAKrD,KAAKmC,aAAemO,sBAAoBjN,KAAKlB,aAClD,MACJ,KAAK,iBACDkB,KAAKrD,KAAK8P,eAAiBQ,sBAAoBjN,KAAKyM,eACpD,MACJ,KAAK,iBACDzM,KAAKrD,KAAK0D,eAAiBL,KAAKK,cAChC,MACJ,KAAK,iBACDL,KAAKrD,KAAK6P,eAAiBS,sBAAoBjN,KAAKwM,eACpD,MACJ,KAAK,iBACDxM,KAAKrD,KAAKyD,eAAiBJ,KAAKI,cAChC,MACJ,KAAK,aACDJ,KAAKrD,KAAKyV,WAAanF,sBAAoBjN,KAAKoS,WAChD,MACJ,KAAK,aACDpS,KAAK2R,cAAiB3R,KAAK9G,qBAAsBC,kBAAkBsB,oBAAkBuF,KAAK9G,WAAWoC,QAC9F0E,KAAK9G,WAAWE,kBAAmB0gB,qBAC1C9Z,KAAK4b,gBAAgB5b,KAAK9G,YACtB8G,KAAK2R,YACL3R,KAAKrD,KAAKzD,WAAa8G,KAAK7B,SAG5B6B,KAAKmc,kBAET,MACJ,KAAK,QACDnc,KAAKrD,KAAKqR,MAAQhO,KAAKgO,KACvB,MACJ,KAAK,oBACGmV,EAAQpO,GACR/U,KAAKmY,cAGLnY,KAAKkY,WAET,MACJ,KAAK,qBACDlY,KAAKyjB,SACL,MACJ,KAAK,YACDzjB,KAAKrD,KAAKigB,UAAY5c,KAAK4c,SAC3B,MACJ,KAAK,cACD5c,KAAKrD,KAAK8O,YAAcwB,sBAAoBjN,KAAKyL,YACjD,MACJ,KAAK,YACDzL,KAAKrD,KAAKggB,UAAY3c,KAAK2c,SAC3B,MACJ,KAAK,SACIliB,oBAAkBuF,KAAKgc,SAAoC,gBAAjBhc,eAA2D,IAA9BA,KAAKgc,OAAO/c,QAAQ,OAC5Fe,KAAK2Q,QAAQhL,MAAMqW,OAAShc,KAAKgc,QAErChc,KAAKrD,KAAKqf,OAAShc,KAAKgc,MACxB,MACJ,KAAK,QACIvhB,oBAAkBuF,KAAK4F,QAAkC,gBAAhB5F,cAAyD,IAA7BA,KAAK4F,MAAM3G,QAAQ,OACzFe,KAAK2Q,QAAQhL,MAAMC,MAAQ5F,KAAK4F,OAEpC5F,KAAKrD,KAAKiJ,MAAQ5F,KAAK4F,KACvB,MACJ,KAAK,SACD5F,KAAKrD,KAAK+a,OAAS1X,KAAK0X,MACxB,MACJ,KAAK,mBACD1X,KAAKrD,KAAKugB,iBAAmBld,KAAKkd,gBAClC,MACJ,KAAK,eACDld,KAAKrD,KAAK8f,aAAezc,KAAKyc,YAC9B,MACJ,KAAK,cACDzc,KAAKrD,KAAK+f,YAAc1c,KAAK0c,WAC7B,MACJ,KAAK,mBACD1c,KAAKrD,KAAKie,iBAAmB5a,KAAK4a,gBAClC,MACJ,KAAK,iBACD5a,KAAKrD,KAAKme,eAAiB9a,KAAK8a,cAChC,MACJ,KAAK,YACD9a,KAAKrD,KAAKyf,UAAYpc,KAAKoc,SAC3B,MACJ,KAAK,kBACDpc,KAAKrD,KAAKwD,gBAAkBH,KAAKG,eACjC,MACJ,KAAK,gBACDH,KAAKrD,KAAK4D,cAAgBP,KAAKO,aAC/B,MACJ,KAAK,mBACDP,KAAKrD,KAAKqgB,iBAAmB/P,sBAAoBjN,KAAKgd,iBACtD,MACJ,KAAK,gBACDhd,KAAKrD,KAAKwO,cAAgB8B,sBAAoBjN,KAAKmL,eACnDnL,KAAKyjB,SACL,MACJ,KAAK,mBACDzjB,KAAKrD,KAAKge,iBAAmB3a,KAAKmd,gBAClC,MACJ,KAAK,iBACDnd,KAAKrD,KAAKke,eAAiB5N,sBAAoBjN,KAAK6a,eACpD,MACJ,KAAK,kBACD7a,KAAKrD,KAAKygB,gBAAkBnQ,sBAAoBjN,KAAKod,gBACrD,MACJ,KAAK,eACGpd,KAAKrD,KAAK+mB,QAA0C,WAAhC1jB,KAAKrD,KAAKY,aAAaI,MAAqBwlB,EAAQpO,GAAMpX,OACtD,SAAvBwlB,EAAQpO,GAAMpX,MAA0C,QAAvBwlB,EAAQpO,GAAMpX,OAChDqC,KAAKrD,KAAKgnB,YAEd3jB,KAAKrD,KAAKY,aAAeyC,KAAKqd,sBAGlCgG,GACArjB,KAAKyjB,YASjBrO,EAASnU,UAAUiC,QAAU,WACzBlD,KAAK4jB,iBACL5jB,KAAKsb,eACLvZ,EAAOd,UAAUiC,QAAQmS,KAAKrV,MAC9BA,KAAKrD,KAAKuG,UACVlD,KAAK0b,WAAWxY,SAKhB,KAAK,GAJDsX,IAAW,aAAc,aAAc,eAAgB,eAAgB,cACvE,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,aACd3gB,EAAI,EAAGA,EAAI2gB,EAAQvgB,OAAQJ,IAC5BmG,KAAKwa,EAAQ3gB,MACbmG,KAAKwa,EAAQ3gB,IAAM,KAG3BmG,MAAK2Q,QAAQnK,UAAY,GACzBxG,KAAKrD,KAAO,MAQhByY,EAASnU,UAAU4iB,SAAW,WAC1B9hB,EAAOd,UAAU4iB,SAASxO,KAAKrV,MAC/BA,KAAKrD,KAAKknB,YAOdzO,EAASnU,UAAU6iB,eAAiB,WAChC,GAAI3c,GAAQnH,KACR+jB,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACAra,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG6C,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FC,gBAAiB,SAAU,WAAY,cACvC3N,gBAAkBC,WAAame,qBAE/B+G,GAAkB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,aASnC,OARAF,GAAU9b,QAAQ,SAAUpM,GAExB,IAAK,GADDqoB,GAAgB/c,EAAMtL,GACjBmnB,EAAK,EAAGC,EAAKe,EAAgBnoB,GAAQmnB,EAAKC,EAAGhpB,OAAQ+oB,UAEnDkB,GADGjB,EAAGD,MAIrBhjB,KAAKmkB,eAAeF,EAAgBjkB,KAAKjB,SAClCiB,KAAKokB,aAAaL,IAE7B3O,EAASnU,UAAUkjB,eAAiB,SAAUF,EAAgBllB,GAC1D,GAAIoI,GAAQnH,IACZjB,GAAQkJ,QAAQ,SAAUrI,GAClBA,EAAOb,SACPoI,EAAMkd,eAAeJ,EAAgBrkB,GACrCuH,EAAMgd,eAAeF,EAAgBrkB,EAAOb,UAG5CoI,EAAMkd,eAAeJ,EAAgBrkB,MAIjDwV,EAASnU,UAAUojB,eAAiB,SAAUJ,EAAgBrkB,GAC1DqkB,EAAehc,QAAQ,SAAUqc,SACtB1kB,GAAO0kB,GACd1kB,EAAOxB,aAGfgX,EAASnU,UAAUgZ,kBAAoB,SAAU5b,GAC7C,GAAK5D,oBAAkB4D,EAAEkmB,SAAzB,CAGA,GAAIljB,GAAShD,EAAEgD,QACXA,EAAOyC,UAAUC,SAAS,qBAC1B1C,EAAOyC,UAAUC,SAAS,wBAC1B/D,KAAKqY,sBAAsBhX,GAE/BrB,KAAKqL,OAAO,qBAAuBhK,OAAQA,MAM/C+T,EAASnU,UAAUwG,QAAU,WACzB,MAAOzH,MAAKrD,KAAK8K,WAMrB2N,EAASnU,UAAUujB,SAAW,WAC1B,MAAOxkB,MAAKrD,KAAK6nB,YASrBpP,EAASnU,UAAUwjB,UAAY,SAAUtlB,EAAMrD,EAAO4oB,GAClD1kB,KAAK2kB,WAAWF,UAAUtlB,EAAMrD,EAAO4oB,IAK3CtP,EAASnU,UAAU0iB,UAAY,WAC3B3jB,KAAKrD,KAAKgoB,WAAWhB,aAQzBvO,EAASnU,UAAU2jB,aAAe,SAAUC,EAAW1lB,GACnDa,KAAKrD,KAAKgoB,WAAWC,aAAaC,EAAW1lB,IAMjDiW,EAASnU,UAAU6jB,UAAY,WAC3B9kB,KAAKrD,KAAKgoB,WAAWG,aAOzB1P,EAASnU,UAAU8jB,SAAW,SAAUthB,EAAU+G,GAC9CxK,KAAK2kB,WAAWI,SAASthB,EAAU+G,IAKvC4K,EAASnU,UAAU+jB,QAAU,WACzBhlB,KAAKrD,KAAKgoB,WAAWK,WAMzB5P,EAASnU,UAAUgkB,UAAY,SAAUC,GACrCllB,KAAKrD,KAAKgoB,WAAWM,UAAUC,IAMnC9P,EAASnU,UAAUrE,wBAA0B,WACzC,MAAOoD,MAAKrD,KAAKC,2BASrBwY,EAASnU,UAAUkkB,aAAe,SAAUzoB,EAAK8N,EAAO3O,GACpDmE,KAAKrD,KAAKwoB,aAAazoB,EAAK8N,EAAO3O,IAQvCuZ,EAASnU,UAAU7B,WAAa,SAAU1C,EAAK4H,GAC3CtE,KAAKrD,KAAKyC,WAAW1C,EAAK4H,IAO9B8Q,EAASnU,UAAUmkB,SAAW,SAAUC,GACpCrlB,KAAKrD,KAAK2oB,YAAYF,SAASC,IAOnCjQ,EAASnU,UAAUskB,sBAAwB,SAAUC,GAC7CxlB,KAAKslB,aACLtlB,KAAKrD,KAAK2oB,YAAYC,sBAAsBC,IASpDpQ,EAASnU,UAAUwkB,iBAAmB,SAAUhiB,EAAUkB,GACtD,MAAO3E,MAAKrD,KAAK8oB,iBAAiBhiB,EAAUkB,IAOhDyQ,EAASnU,UAAUsJ,iBAAmB,SAAUC,GAC5C,MAAOkb,wBAAqB1lB,KAAKoZ,YAAa,SAAUuM,EAAM7pB,GAC1D,GAAI6pB,EAAKnb,QAAUA,EACf,MAAOmb,KAGZ,IAOPvQ,EAASnU,UAAU2kB,eAAiB,SAAU9gB,GAC1C,MAAO4gB,wBAAqB1lB,KAAKoZ,YAAa,SAAUuM,EAAM7pB,GAC1D,GAAI6pB,EAAK7gB,MAAQA,EACb,MAAO6gB,KAGZ,IAMPvQ,EAASnU,UAAU4kB,oBAAsB,WACrC,MAAO7lB,MAAKrD,KAAKkpB,uBAMrBzQ,EAASnU,UAAU6kB,iBAAmB,WAClC,MAAO9lB,MAAKrD,KAAKmpB,oBAMrB1Q,EAASnU,UAAU8kB,sBAAwB,WACvC,MAAO/lB,MAAKrD,KAAKopB,yBAQrB3Q,EAASnU,UAAU+kB,YAAc,SAAUhsB,EAAMisB,GAC7C,MAAOjmB,MAAKrD,KAAKqpB,YAAYhsB,EAAMisB,IAQvC7Q,EAASnU,UAAUilB,YAAc,SAAUlsB,EAAMmsB,GAC7C,MAAOnmB,MAAKrD,KAAKupB,YAAYlsB,EAAMmsB,IAOvC/Q,EAASnU,UAAUmlB,uBAAyB,SAAU5b,GAClD,MAAOxK,MAAKrD,KAAKypB,uBAAuB5b,IAO5C4K,EAASnU,UAAUolB,uBAAyB,SAAUvqB,GAClD,MAAOkE,MAAKrD,KAAK0pB,uBAAuBvqB,IAO5CsZ,EAASnU,UAAUqlB,qBAAuB,SAAUxhB,GAChD,MAAO9E,MAAKrD,KAAK2pB,qBAAqBxhB,IAO1CsQ,EAASnU,UAAUslB,sBAAwB,SAAU/b,GACjD,MAAOxK,MAAKrD,KAAK4pB,sBAAsB/b,IAO3C4K,EAASnU,UAAUyJ,oBAAsB,SAAU5F,GAC/C,MAAO9E,MAAKrD,KAAK+N,oBAAoB5F,IAMzCsQ,EAASnU,UAAUpB,WAAa,SAAU2mB,GAEtC,MADAxmB,MAAKqX,kBAAkBrX,KAAKrD,KAAKkD,WAAW2mB,IACrCxmB,KAAKoZ,aAEhBhE,EAASnU,UAAUoW,kBAAoB,SAAUzX,GAC7C,GACIkjB,GADA2D,EAAchsB,oBAAkBmF,GAAUI,KAAKrD,KAAKkD,aAAeD,CAEvEI,MAAKoZ,cACL,KAAK,GAAIvf,GAAI,EAAGA,EAAI4sB,EAAYxsB,OAAQJ,IAAK,CACzCipB,IACA,KAAK,GAAIE,GAAK,EAAGC,EAAKlpB,OAAOC,KAAKysB,EAAY5sB,IAAKmpB,EAAKC,EAAGhpB,OAAQ+oB,IAAM,CACrE,GAAIjO,GAAOkO,EAAGD,EACdF,GAAW/N,GAAQ0R,EAAY5sB,GAAGkb,GAEtC/U,KAAKoZ,YAAYjf,KAAK,GAAI2F,GAAOgjB,IAMrC,MAHA9iB,MAAU,WAAK,WACfA,KAAKgN,eAAgBjO,QAASiB,KAAKoZ,cAAe,GAClDpZ,KAAU,cAAIsU,GACPtU,KAAKoZ,aAMhBhE,EAASnU,UAAUylB,WAAa,WAC5B,MAAO1mB,MAAKrD,KAAK+pB,cAErBtR,EAASnU,UAAU8gB,oBAAsB,WACrC/hB,KAAKgN,eAAgBR,eAAgBtS,YAAU,aAAc8F,KAAKrD,KAAK6P,kBAAmB,GAC1FxM,KAAKgN,eAAgBrD,aAAczP,YAAU,aAAc8F,KAAKrD,KAAKgN,gBAAiB,GACtF3J,KAAKgN,eAAgBP,eAAgBvS,YAAU,aAAc8F,KAAKrD,KAAK8P,kBAAmB,GAC1FzM,KAAKgN,eAAgBlO,aAAc5E,YAAU,aAAc8F,KAAKrD,KAAKmC,gBAAiB,IAM1FsW,EAASnU,UAAU0lB,gBAAkB,WACjC,MAAO3mB,MAAKrD,KAAKgqB,mBAMrBvR,EAASnU,UAAU2lB,YAAc,WAG7B,IAAK,GAFDC,MACA1W,EAAOnQ,KAAKrD,KAAKiqB,cACZ/sB,EAAI,EAAGC,EAAMqW,EAAKlW,OAAQJ,EAAIC,EAAKD,IACnCsW,EAAKtW,GAAGiK,UAAUC,SAAS,iBAC5B8iB,EAAM1sB,KAAKgW,EAAKtW,GAGxB,OAAOgtB,IAOXzR,EAASnU,UAAU/D,sBAAwB,WACvC,MAAO8C,MAAKrD,KAAKiU,iBAMrBwE,EAASnU,UAAU6lB,iBAAmB,WAClC,MAAO9mB,MAAKrD,KAAKmqB,oBAMrB1R,EAASnU,UAAU+D,eAAiB,WAChC,MAAOhF,MAAKrD,KAAKqI,kBAOrBoQ,EAASnU,UAAU3B,cAAgB,SAAUxD,GACzC,MAAOkE,MAAKrD,KAAK2C,cAAcxD,IAOnCsZ,EAASnU,UAAU8lB,WAAa,SAAU1lB,GACtC,MAAOrB,MAAKrD,KAAKoqB,WAAW1lB,IAOhC+T,EAASnU,UAAU+lB,oBAAsB,SAAUxc,GAC/C,MAAOxK,MAAKrD,KAAKqqB,oBAAoBxc,IAMzC4K,EAASnU,UAAUgmB,kBAAoB,WAEnC,IAAK,GADDC,MACKlE,EAAK,EAAGC,EAAKjjB,KAAKoZ,YAAa4J,EAAKC,EAAGhpB,OAAQ+oB,IAAM,CAC1D,GAAIpe,GAAMqe,EAAGD,EACTpe,GAAIuiB,SACJD,EAAK/sB,KAAKyK,GAGlB,MAAOsiB,IAKX9R,EAASnU,UAAUyP,YAAc,WAC7BA,cAAY1Q,KAAK2Q,UAKrByE,EAASnU,UAAUmO,YAAc,WAC7BA,cAAYpP,KAAK2Q,UAKrByE,EAASnU,UAAUwiB,QAAU,WACzBzjB,KAAKrD,KAAK8mB,WAOdrO,EAASnU,UAAUsD,kBAAoB,WACnC,MAAOvE,MAAKonB,gBAAgBlf,qBAMhCkN,EAASnU,UAAUkH,qBAAuB,WACtC,MAAOnI,MAAKonB,gBAAgBjf,wBAKhCiN,EAASnU,UAAU0C,iBAAmB,SAAU0jB,GAC5CrnB,KAAKonB,gBAAgBzjB,iBAAiB0jB,IAK1CjS,EAASnU,UAAUsiB,eAAiB,WAChCvjB,KAAKrD,KAAKoC,QAAUiB,KAAKsc,eAAetc,KAAKjB,SAC7CiB,KAAKrD,KAAK4mB,kBAKdnO,EAASnU,UAAUqmB,cAAgB,WAC/BtnB,KAAKrD,KAAK2qB,iBAOdlS,EAASnU,UAAUoX,sBAAwB,SAAUhX,GACjD,GAAIrB,KAAKyL,YAAa,CAClB,GAAI8b,GAAUlmB,EAAOqC,QAAQ,kBAAkB6U,cAC3Cle,EAAS2F,KAAK9C,wBAAwBqqB,EAAQ9jB,SAC9CpC,GAAOyC,UAAUC,SAAS,oBAC1B/D,KAAKwnB,YAAYD,EAASltB,GAG1B2F,KAAKynB,UAAUF,EAASltB,OAG3B,CAEGA,GADAktB,EAAUvnB,KAAKrD,KAAKoqB,WAAW1lB,IACdiD,OACjBjD,GAAOyC,UAAUC,SAAS,oBAC1B/D,KAAKwnB,YAAYD,EAAQloB,IAAKhF,GAG9B2F,KAAKynB,UAAUF,EAAQloB,IAAKhF,KAQxC+a,EAASnU,UAAUwmB,UAAY,SAAUpoB,EAAKhF,GAC1C,GAAI8M,GAAQnH,KAERmD,GAAShE,KADb9E,EAAS2F,KAAK0nB,yBAAyBroB,EAAKhF,GACjBgF,IAAKA,EAAKihB,QAAQ,EAC7CtgB,MAAKwE,Qb1nDU,Ya0nDgBrB,EAAM,SAAUwkB,GAC3C,IAAKA,EAAcrH,SACfnZ,EAAMygB,eAAe,SAAUvoB,EAAKhF,IAC9BrB,EAAamO,IAAW/L,EAAU+L,IAAS,CAC7C,GAAI0gB,IAAiB1oB,KAAM9E,EAAQgF,IAAKA,EACxC8H,GAAM3C,QbjoDJ,WaioD6BqjB,OAK/CzS,EAASnU,UAAUymB,yBAA2B,SAAUroB,EAAKhF,GASzD,MARI2F,MAAK0J,aAAkD,QAAnC1J,KAAK2J,aAAaC,cAA0B5J,KAAKqZ,aAAe5e,oBAAkBJ,GACtGA,EAAS2F,KAAK7B,SAASC,OAAO,SAAUC,GACpC,MAAOA,GAAEpD,kBAGRR,oBAAkBJ,KACvBA,EAAS2F,KAAKrD,KAAKO,wBAAwBmC,EAAIoE,WAE5CpJ,GAMX+a,EAASnU,UAAUumB,YAAc,SAAUnoB,EAAKhF,GAC5C,GAAI8M,GAAQnH,KAERmD,GAAShE,KADb9E,EAAS2F,KAAK0nB,yBAAyBroB,EAAKhF,GACjBgF,IAAKA,EAAKihB,QAAQ,EAC7CtgB,MAAKwE,QbnpDW,aampDgBrB,EAAM,SAAU2kB,GAC5C,IAAKA,EAAexH,OAAQ,CACxBnZ,EAAMygB,eAAe,WAAYvoB,EAAKhF,EACtC,IAAIwtB,IAAiB1oB,KAAM9E,EAAQgF,IAAKA,EACxC8H,GAAM3C,QbzpDC,YaypDyBqjB,OAQ5CzS,EAASnU,UAAU8mB,cAAgB,SAAUhsB,GACzC,GAAKiE,KAAK0J,aAAkD,QAAnC1J,KAAK2J,aAAaC,cAA2B5J,KAAKkT,qBAAsB,CACzFjJ,EAAMjK,KAAKrD,KAAKzD,WAAWkF,OAAO,SAAUC,GAI5C,MAHIA,GAAEpD,iBAAmBoD,EAAEtC,QAAUA,IACjCsC,EAAEtD,UAAW,GAEVsD,EAAEpD,iBAAmBoD,EAAEtC,QAAUA,GAE5CiE,MAAKynB,UAAU,KAAMxd,OAMrB,KAAK,GAHDA,GAAMjK,KAAKgoB,iBAAiBjsB,GAC5BsD,EAAMnF,YAAU,OAAQ+P,GACxB5P,EAASH,YAAU,UAAW+P,GACzBpQ,EAAI,EAAGA,EAAIQ,EAAOJ,OAAQJ,IAC/BmG,KAAKynB,UAAUpoB,EAAIxF,GAAIQ,EAAOR,KAI1Cub,EAASnU,UAAU+mB,iBAAmB,SAAUjsB,GAC5C,GAAIoU,GAAOnQ,KAAKyH,UAAUrJ,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAEgH,UAAUpG,QAAQ,QAAUlD,KAC9BsC,EAAEmF,cAAc,wBAA0BnF,EAAEmF,cAAc,uBAItE,QADY7J,QADEqG,KAAK9C,wBAAwBkB,OAAO,SAAUC,GAAK,MAAOA,GAAEtC,QAAUA,GAASsC,EAAEpD,kBACjEkV,KAAMA,IAOxCiF,EAASnU,UAAUgnB,gBAAkB,SAAUlsB,GAC3C,GAAKiE,KAAK0J,aAAkD,QAAnC1J,KAAK2J,aAAaC,cAA2B5J,KAAKkT,qBAAsB,CAC7F,GAAI7Y,GAAS2F,KAAKrD,KAAKzD,WAAWkF,OAAO,SAAUC,GAI/C,MAHIA,GAAEpD,iBAAmBoD,EAAEtC,QAAUA,IACjCsC,EAAEtD,UAAW,GAEVsD,EAAEpD,iBAAmBoD,EAAEtC,QAAUA,GAE5CiE,MAAKwnB,YAAY,KAAMntB,OAMvB,KAAK,GAHD4P,GAAMjK,KAAKgoB,iBAAiBjsB,GAC5BoU,EAAOjW,YAAU,OAAQ+P,GACzBtQ,EAAUO,YAAU,UAAW+P,GAC1BpQ,EAAI,EAAGA,EAAIF,EAAQM,OAAQJ,IAChCmG,KAAKwnB,YAAYrX,EAAKtW,GAAIF,EAAQE,KAQ9Cub,EAASnU,UAAUiX,UAAY,WAC3BlY,KAAKkoB,kBAAkB,WAM3B9S,EAASnU,UAAUkX,YAAc,WAC7BnY,KAAKkoB,kBAAkB,aAE3B9S,EAASnU,UAAUinB,kBAAoB,SAAUzrB,GAC7C,GAAI0T,GAAOnQ,KAAKyH,UAAUrJ,OAAO,SAAUC,GACvC,MAAOA,GAAEmF,cAAc,eAA4B,WAAX/G,EAAsB,WAAa,YAG/E,IADAuD,KAAKqZ,aAAc,EACdrZ,KAAK0J,aAAkD,QAAnC1J,KAAK2J,aAAaC,cACpC5J,KAAKkT,qBACRlT,KAAK7B,SAASC,OAAO,SAAUC,GACvBA,EAAEpD,kBACFoD,EAAEtD,SAAsB,aAAX0B,KAGV,aAAXA,EAAwBuD,KAAKwnB,YAAYrX,EAAK,IAAMnQ,KAAKynB,UAAUtX,EAAK,QAGxE,KAAK,GAAItW,GAAI,EAAGA,EAAIsW,EAAKlW,OAAQJ,IAClB,aAAX4C,EAAwBuD,KAAKwnB,YAAYrX,EAAKtW,IAAMmG,KAAKynB,UAAUtX,EAAKtW,GAGhFmG,MAAKqZ,aAAc,GAEvBjE,EAASnU,UAAU2mB,eAAiB,SAAUnrB,EAAQ4C,EAAKhF,EAAQ8tB,GAC/D,GAAIC,GAAWpoB,KAAKyH,SACpB,IAAIzH,KAAKyL,YAAa,CACd0E,EAAOnQ,KAAK2mB,kBAAkBxW,IAClCiY,MAAcC,MAAMhT,KAAKlF,GAa7B,GAVI1V,oBAAkB4E,GAElBA,EAAM+oB,EADKpoB,KAAK9C,wBAAwB+B,QAAQ5E,KAIpCgF,EAAI4F,aAAa,iBAE5BxK,oBAAkB4E,IACnBA,EAAI4G,aAAa,gBAA4B,WAAXxJ,EAAsB,OAAS,UAE/DuD,KAAK0J,aAAkD,QAAnC1J,KAAK2J,aAAaC,cAA2B5J,KAAKkT,wBAA0Bla,EAAagH,MAC/GA,KAAKqL,ObnwDqB,4BamwDqB5O,OAAQA,EAAQ4C,IAAKA,EAAKhF,OAAQA,QAEhF,CACD,GAAIiuB,OAAgB,EACpB,IAAe,WAAX7rB,EAAqB,CACrB6rB,EAAgB,YACXH,IACD9tB,EAAOU,UAAW,EAElBwtB,GAAYlpB,EAAI2hB,uBAAuB,sBAAsB,EACjE,IAAIvmB,oBAAkB8tB,GAClB,MAEJrf,aAAUqf,GAAY,oBACtBniB,eAAamiB,GAAY,0BAExB,CACDD,EAAgB,OACXH,IACD9tB,EAAOU,UAAW,EAEtB,IAAIwtB,GAAYlpB,EAAI2hB,uBAAuB,oBAAoB,EAC/D,IAAIvmB,oBAAkB8tB,GAClB,MAEJrf,aAAUqf,GAAY,sBACtBniB,eAAamiB,GAAY,oBAE7B,GAAIplB,IAAShE,KAAM9E,EAAQgF,IAAKA,EAChC,IAAIrG,EAAagH,QAAU5E,EAAU4E,MAAO,CACxC,GAAImQ,GAAOiY,EAAShqB,OAAO,SAAUqD,GACjC,MAAOA,GAAEqC,UAAUC,SAAS,iBAAmB1J,EAAOyB,MAAQ,SAAWzB,EAAO0B,MAAQ,MAExFysB,EAAaJ,EAAShqB,OAAO,SAAUqD,GACvC,MAAOA,GAAEqC,UAAUC,SAAS,uBAAyB1J,EAAOyB,MAAQ,SAAWzB,EAAO0B,MAAQ,KAEnF,YAAXU,EACAuD,KAAKqL,Ob1yDC,gBa0yD6BhR,OAAQA,EAAQ8V,KAAMA,EAAMD,UAAW7Q,KAG1EW,KAAKyoB,oBAAoBtY,GACzBnQ,KAAKwE,QblzDF,YakzD4BrB,QAGlC,CAWD,IAAK,GAVDjI,GAAe8E,KAAK9C,wBAAwBkB,OAAO,SAAUC,GAC7D,MAAOA,GAAEW,iBAAmB3E,EAAOO,WAGnCuV,GADQjV,EAAa,GAAGR,WAAWoB,MAC5BssB,EAAShqB,OAAO,SAAUqD,GACjC,MAAOA,GAAEqC,UAAUC,SAAS,iBAAmB1J,EAAOyB,MAAQ,SAAWzB,EAAO0B,MAAQ,OAExFysB,EAAaJ,EAAShqB,OAAO,SAAUsqB,GACvC,MAAOA,GAAY5kB,UAAUC,SAAS,uBAAyB1J,EAAOyB,MAAQ,SAAWzB,EAAO0B,MAAQ,MAEnGlC,EAAI,EAAGA,EAAIsW,EAAKlW,OAAQJ,IAC7BsW,EAAKtW,GAAG8L,MAAMmE,QAAUwe,EACxBtoB,KAAKqL,OAAO,kBAAoBhM,IAAK8Q,EAAKtW,KACrCY,oBAAkBS,EAAarB,GAAGqB,eAA6B,WAAXuB,IACrDhC,oBAAkBS,EAAarB,GAAGkB,YAAaG,EAAarB,GAAGkB,UAC/DiF,KAAK4nB,eAAenrB,EAAQ0T,EAAKtW,GAAIqB,EAAarB,IAAI,EAG9DmG,MAAKqL,OAAO,qBAAuBmd,WAAYA,EAAY/rB,OAAQ6rB,IAEvEtoB,KAAKyf,aAAa2I,KAG1BhT,EAASnU,UAAUwe,aAAe,SAAUtP,GACxC,GAAInQ,KAAKyc,eAAiBzc,KAAKyL,YAE3B,IAAK,GADDkd,GAAkB,EACb9uB,EAAI,EAAGsW,GAAQtW,EAAIsW,EAAKlW,OAAQJ,IAAK,CAC1C,GAAI+uB,GAAUzY,EAAKtW,EACW,UAA1B+uB,EAAQjjB,MAAMmE,UACV8e,EAAQ9kB,UAAUC,SAAS,aAC3BqC,eAAawiB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQ9kB,UAAUC,SAAS,iBAAoB6kB,EAAQ9kB,UAAUC,SAAS,gBACxGmF,YAAU0f,GAAU,YAEnBA,EAAQ9kB,UAAUC,SAAS,iBAAoB6kB,EAAQ9kB,UAAUC,SAAS,gBAC3E4kB,OAMpBvT,EAASnU,UAAUsgB,sBAAwB,SAAUpe,GACjD,GAAInD,KAAKyL,YAAa,CAClB,GAAI0E,GAAOnQ,KAAK2mB,kBAAkBxW,IAClCA,MAAUkY,MAAMhT,KAAKlF,EACrB,KAAK,GAAItW,GAAI,EAAGA,EAAIsW,EAAKlW,OAAQJ,IAAK,CAClC,GAAIgvB,GAAQ7oB,KAAKrD,KAAKgqB,kBAAkBxW,KAAKtW,GAAG6F,MAAMM,KAAKL,iBACvDN,EAAM8Q,EAAKtW,GAEXivB,GAAQ3pB,KADEa,KAAKrD,KAAKosB,gBAAgBlvB,GAAGsF,KAChBE,IAAKA,EAAKI,KAAMopB,EAAOjpB,OAAQI,KAAKH,aAAaG,KAAKL,iBACjFK,MAAKT,aAAaC,WAAWspB,MAIzC1T,EAASnU,UAAUwnB,oBAAsB,SAAUtY,GAE/C,IAAK,GADD6Y,GACKnvB,EAAI,EAAGA,EAAIsW,EAAKlW,OAAQJ,IAAK,EAE9BmvB,EADAhpB,KAAKyL,YACGzL,KAAKrD,KAAKO,wBAAwBiT,EAAKtW,GAAG4J,UAG1CzD,KAAKrD,KAAKssB,oBAAoB9Y,EAAKtW,GAAGoL,aAAa,aAAa9F,MAEtEpE,UAAW,EACjBoV,EAAKtW,GAAG8L,MAAMmE,QAAU,MACxB,IAAIof,GAAe/Y,EAAKtW,GAAG2J,cAAc,qBAIzC,IAHK/I,oBAAkByuB,IACnBlpB,KAAKrD,KAAK0T,gBAAgB8Y,SAASD,GAEnC/Y,EAAKtW,GAAG2J,cAAc,6CAA8C,CACpE,GAAI4lB,GAAgBjZ,EAAKtW,GAAG2J,cAAc,4CAC1C4C,gBAAagjB,GAAgB,oBAC7BlgB,YAAUkgB,GAAgB,qBAG1B,KAAK,GAFDC,MACAC,EAAQtpB,KAAKyH,UACR8hB,EAAM,EAAGA,EAAMD,EAAMrvB,OAAQsvB,IAC9BD,EAAMC,GAAKzlB,UAAUC,SAAS,iBAAmBilB,EAAMltB,MAAQ,SAAWktB,EAAMjtB,MAAQ,KACxFstB,EAAKlvB,KAAKmvB,EAAMC,GAGxBvpB,MAAKyoB,oBAAoBY,MAOrCjU,EAASnU,UAAU6a,YAAc,WAC7B9b,KAAK0C,GAAG,gBAAiB1C,KAAKwpB,kBAAmBxpB,OAErDoV,EAASnU,UAAUuoB,kBAAoB,SAAUC,GAC7CzpB,KAAKwN,YAAcic,GAKvBrU,EAASnU,UAAU2iB,eAAiB,WAC5B5jB,KAAKgD,aAGThD,KAAKiD,IAAI,gBAAiBjD,KAAKwpB,oBAgBnCpU,EAASnU,UAAUyoB,eAAiB,SAAU7E,EAAW8E,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIjqB,KAAKrD,KAAK+sB,eAAe7E,EAAW8E,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H7U,EAASnU,UAAUipB,eAAiB,WAChClqB,KAAKrD,KAAKutB,kBASd9U,EAASnU,UAAUkpB,0BAA4B,SAAU3f,EAAO4f,GAC5DpqB,KAAKrD,KAAKwtB,0BAA0B3f,EAAO4f,IAQ/ChV,EAASnU,UAAUyX,UAAY,SAAU5c,EAAOuuB,GAC5CrqB,KAAKrD,KAAK+b,UAAU5c,EAAOuuB,IAO/BjV,EAASnU,UAAUqpB,WAAa,SAAU5jB,GACtC1G,KAAKrD,KAAK2tB,WAAW5jB,IAMzB0O,EAASnU,UAAU2X,eAAiB,WAChC5Y,KAAKrD,KAAKic,kBAQdxD,EAASnU,UAAUspB,WAAa,SAAU5R,EAAW0R,GACjDrqB,KAAKrD,KAAK4tB,WAAW5R,EAAW0R,IAMpCjV,EAASnU,UAAUupB,gBAAkB,WACjC,MAAOxqB,MAAKrD,KAAK6tB,mBAMrBpV,EAASnU,UAAUwpB,sBAAwB,WACvC,MAAOzqB,MAAKrD,KAAK8tB,yBAMrBrV,EAASnU,UAAUypB,0BAA4B,WAC3C,MAAO1qB,MAAKrD,KAAK+tB,6BAOrBtV,EAASnU,UAAU4gB,mBAAqB,WACpC,MAAO7hB,MAAKrD,KAAKklB,sBAMrBzM,EAASnU,UAAUqP,cAAgB,WAC/B,OAASqa,WAAY3qB,KAAKrD,KAAK2T,gBAAiBsa,WAAY5qB,KAAK0b,YAErE,IAAIlG,EAgTJ,OA/SArU,IACIgB,gBACDiT,EAASnU,UAAW,cAAW,IAClCE,GACIgB,WAAS,OACViT,EAASnU,UAAW,mBAAgB,IACvCE,GACIgB,WAAS,OACViT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,IACViT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,OACViT,EAASnU,UAAW,gBAAa,IACpCE,GACIgB,WAAS,OACViT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,YAAS,IACViT,EAASnU,UAAW,wBAAqB,IAC5CE,GACIgB,WAAS,OACViT,EAASnU,UAAW,yBAAsB,IAC7CE,GACIgB,gBACDiT,EAASnU,UAAW,iBAAc,IACrCE,GACIgB,cACDiT,EAASnU,UAAW,YAAS,IAChCE,GACIgB,cACDiT,EAASnU,UAAW,iBAAc,IACrCE,GACIgB,WAAS,aACViT,EAASnU,UAAW,gBAAa,IACpCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,kBAAe,IACtCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,oBAAiB,IACxCE,GACI0pB,aAAYC,qBACb1V,EAASnU,UAAW,uBAAoB,IAC3CE,GACIgB,YAAS,IACViT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,YAAS,IACViT,EAASnU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,yBAAsB,IAC7CE,GACI0pB,aAAYvX,IACb8B,EAASnU,UAAW,mBAAgB,IACvCE,GACIgB,cACDiT,EAASnU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,qBAAkB,IACzCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,wBAAqB,IAC5CE,GACI0pB,aAAY1V,IACbC,EAASnU,UAAW,mBAAgB,IACvCE,GACIc,gBAAe+S,IAChBI,EAASnU,UAAW,iBAAc,IACrCE,GACI0pB,aAAY5V,IACbG,EAASnU,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,qBAAkB,IACzCE,GACIgB,cACDiT,EAASnU,UAAW,qBAAkB,IACzCE,GACI0pB,aAAY/oB,IACbsT,EAASnU,UAAW,qBAAkB,IACzCE,GACI0pB,aAAYzhB,IACbgM,EAASnU,UAAW,qBAAkB,IACzCE,GACIgB,cACDiT,EAASnU,UAAW,cAAW,IAClCE,GACIgB,cACDiT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,YACViT,EAASnU,UAAW,gBAAa,IACpCE,GACIgB,cACDiT,EAASnU,UAAW,uBAAoB,IAC3CE,GACIgB,cACDiT,EAASnU,UAAW,sBAAmB,IAC1CE,GACIgB,cACDiT,EAASnU,UAAW,kBAAe,IACtCE,GACIgB,WAAS,OACViT,EAASnU,UAAW,gBAAa,IACpCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,kBAAe,IACtCE,GACIgB,WAAS,SACViT,EAASnU,UAAW,aAAU,IACjCE,GACIgB,WAAS,SACViT,EAASnU,UAAW,YAAS,IAChCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,2BAAwB,IAC/CE,GACIgB,WAAS,QACViT,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,cAAW,IAClCE,GACI4pB,WACD3V,EAASnU,UAAW,WAAQ,IAC/BE,GACI4pB,WACD3V,EAASnU,UAAW,gBAAa,IACpCE,GACI4pB,WACD3V,EAASnU,UAAW,eAAY,IACnCE,GACI4pB,WACD3V,EAASnU,UAAW,iBAAc,IACrCE,GACI4pB,WACD3V,EAASnU,UAAW,gBAAa,IACpCE,GACI4pB,WACD3V,EAASnU,UAAW,eAAY,IACnCE,GACI4pB,WACD3V,EAASnU,UAAW,kBAAe,IACtCE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,gBAAa,IACpCE,GACI4pB,WACD3V,EAASnU,UAAW,eAAY,IACnCE,GACI4pB,WACD3V,EAASnU,UAAW,oBAAiB,IACxCE,GACI4pB,WACD3V,EAASnU,UAAW,gBAAa,IACpCE,GACI4pB,WACD3V,EAASnU,UAAW,wBAAqB,IAC5CE,GACI4pB,WACD3V,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,wBAAqB,IAC5CE,GACI4pB,WACD3V,EAASnU,UAAW,mBAAgB,IACvCE,GACI4pB,WACD3V,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACViT,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,mBAAgB,IACvCE,GACI4pB,WACD3V,EAASnU,UAAW,kBAAe,IACtCE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,oBAAiB,IACxCE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,oBAAiB,IACxCE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,mBAAgB,IACvCE,GACI4pB,WACD3V,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,kBAAe,IACtCE,GACI4pB,WACD3V,EAASnU,UAAW,eAAY,IACnCE,GACI4pB,WACD3V,EAASnU,UAAW,iBAAc,IACrCE,GACI4pB,WACD3V,EAASnU,UAAW,sBAAmB,IAC1CE,GACI4pB,WACD3V,EAASnU,UAAW,iBAAc,IACrCE,GACI4pB,WACD3V,EAASnU,UAAW,iBAAc,IACrCE,GACI4pB,WACD3V,EAASnU,UAAW,qBAAkB,IACzCE,GACI4pB,WACD3V,EAASnU,UAAW,oBAAiB,IACxCE,GACI4pB,WACD3V,EAASnU,UAAW,kBAAe,IACtCE,GACI4pB,WACD3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"}