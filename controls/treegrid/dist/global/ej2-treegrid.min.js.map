{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser"],"mappings":"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,UAAW,mBAAgB,IACvCE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVoW,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,mBAAgB,IACvCE,IACIsxB,WACDpa,EAASpX,UAAW,kBAAe,IACtCE,IACIsxB,WACDpa,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,oBAAiB,IACxCE,IACIsxB,WACDpa,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,oBAAiB,IACxCE,IACIsxB,WACDpa,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,mBAAgB,IACvCE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,kBAAe,IACtCE,IACIsxB,WACDpa,EAASpX,UAAW,eAAY,IACnCE,IACIsxB,WACDpa,EAASpX,UAAW,iBAAc,IACrCE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,iBAAc,IACrCE,IACIsxB,WACDpa,EAASpX,UAAW,iBAAc,IACrCE,IACIsxB,WACDpa,EAASpX,UAAW,qBAAkB,IACzCE,IACIsxB,WACDpa,EAASpX,UAAW,oBAAiB,IACxCE,IACIsxB,WACDpa,EAASpX,UAAW,kBAAe,IACtCE,IACIsxB,WACDpa,EAASpX,UAAW,mBAAgB,IACvCE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,sBAAmB,IAC1CE,IACIsxB,WACDpa,EAASpX,UAAW,uBAAoB,IAC3CE,IACIsxB,WACDpa,EAASpX,UAAW,iBAAc,IACrCE,IACIsxB,WACDpa,EAASpX,UAAW,kBAAe,IACtC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"}