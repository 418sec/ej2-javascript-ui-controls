{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        if ((isPrinting === true || args[isPdfExport]) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.parent.grid.selectedRowIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","hasOwnProperty","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"uEAIO,SAASA,GAAaC,GACzB,GAAIA,EAAOC,qBAAsBC,eAAa,CAC1C,GAAIC,GAAUH,EAAOC,WAAWE,OAChC,OAAQA,aAAmBC,iBACtBD,YAAmBE,kBAAmBF,YAAmBG,qBACzDH,YAAmBI,iBAAiBJ,YAAmBK,cAEhE,OAAO,EAEX,QAAgBC,GAAgBT,GAC5B,SAAIA,EAAOC,YAAc,UAAYD,GAAOC,YAKhD,QAAgBS,GAAiBV,GAC7B,IAAK,GAAIW,GAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,CAGf,QAAO,EAEX,QAAgBC,GAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,QAAgBG,GAAkBC,GAC9B,GAAIC,EACJA,KAEA,KAAK,GAAId,GAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAC3BkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,GAG3B,OAAOc,GAKX,QAAgBM,GAAgB/B,EAAQgC,EAAQC,GAC5C,GAEIC,GAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,SAE5C,OAAoB,OAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,aAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,UACxDJ,GAAelC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,QAAgBC,GAAoBlB,GAChC,GAAIC,KACJ,IAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,QAEJ,KAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,GADDA,GAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,KAIlE,OAAOc,GAEX,QAAgBqB,GAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,GAAI+C,GAAK/C,EAAOC,UAChB,QAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,QAAgBC,GAAYC,GAIxB,IAAK,GAFDC,GACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,IACA,KAAK,GAAIE,GAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,GAEjCD,GAAOtB,KAAKqB,GAEhB,MAAOC,GAEX,QAAgBE,GAAaC,GAQzB,aAPOA,GAAMZ,sBACNY,GAAMX,mBACNW,GAAMC,YACND,GAAMnB,iBACNmB,GAAME,YACNF,GAAMG,eACNH,GAAMjB,SACNiB,EAEX,QAAgBlB,GAAcrC,EAAQuD,EAAOI,GACzC,GAAIA,EAAe,CAEf,MAAO3D,GAAe,yBAAEuD,GAIxB,MAAOvD,GAAS,mBAAEuD,GAG1B,QAAgBK,GAASC,GACrB,GAAIC,GAAQC,OAAOC,iBAAiBH,EACpC,OAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCvJ1C,QAASC,GAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,GAGI/D,GACA0C,EAEAsB,EANApB,EAAQa,EAAQb,MAChBqB,EAASR,EAAQQ,OAMjBzD,EAAMkD,EAAQpD,KAAK4D,0BAA0B,GAC7CC,EAAWT,EAAQpE,qBAAsBC,eACzCmE,EAAQpE,WAAWA,WAAW8E,KAAOV,EAAQpE,WAC7C+E,KACAC,EAAe1B,EACf2B,GAAS,CAIb,IAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQpD,KAAKoE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE9D,OAAU,CACxC,GAAI0E,GAASC,EAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,EAChGnB,GAAQgC,EAAOhC,MACf2B,EAASK,EAAOL,OAQpB,GANI3B,YAAiBkC,OACjBT,EAAe/B,EAAYM,GAG3ByB,EAAalD,KAAK4D,YAAWnC,KAE5B2B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,GAAIC,GAAI,EAAGA,EAAIZ,EAAanE,OAAQ+E,IAAK,CACJ,gBAA1BZ,GAAaY,GAAGzE,KACxB6D,EAAaY,GAAKZ,EAAaY,GAAGzE,GAEtC,IAAIS,GAAOoD,EAAaY,GAAGlC,SAAW/B,OAAOC,KAAKoD,EAAaY,GAAGlC,UAC9D/B,OAAOC,KAAKoD,EAAaY,GAC7BjF,GAAImE,EAASjE,MAqFb,MAAOF,KAAOA,GAAK,GAEC,UAtFN,WACV,GAAImE,EAASnE,GAAGQ,KAAS6D,EAAaY,GAAGzE,GAAM,CAC3C,GAAe,WAAXyD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKvB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIyB,EAASnE,GAAGkF,eAAejE,EAAKyB,MAAuC,SAA9BgB,EAAQc,aAAaC,OACzDpE,oBAAkB2D,IAAyD,IAAxCA,EAA2B,eAAE9D,QAClEe,EAAKyB,KAAOoB,GAAa,CAC5B,GAAIqB,GAAazD,EAAcgC,EAASW,EAAaY,GAAGtD,SAExD,IADAwC,EAASnE,GAAGiB,EAAKyB,IAAM2B,EAAaY,GAAGhE,EAAKyB,IACxCyC,GAAcA,EAAWpC,SACzB,GAAIqC,aAAY,CAEZD,EAAWpC,SAAS9B,EAAKyB,IACnByC,EAAWlE,EAAKyB,IAAMgB,EAAQpD,KAAK+E,gBAAgBrF,GAAGiB,EAAKyB,IACvDgB,EAAQpD,KAAK+E,gBAAgBrF,GAAW,SAAEiB,EAAKyB,IAAMyB,EAASnE,GAAGiB,EAAKyB,QAGhFyC,GAAWpC,SAAS9B,EAAKyB,IAAMyC,EAAWlE,EAAKyB,IAAMyB,EAASnE,GAAGiB,EAAKyB,SAMrF,IAAe,QAAXuB,GAA+B,cAAXA,EAAwB,CACjD,GAAIpB,OAAQ,EACgC,WAAxCa,EAAQc,aAAaQ,eACjBrB,GACAW,EAAavB,SAASW,EAAQ4B,iBAAmBnB,EAASnE,GAAG0D,EAAQ6B,WACrEpB,EAASqB,OAAOxF,EAAI,EAAG,EAAGsE,EAAavB,YAGlCoB,EAASnE,GAAGkF,eAAexB,EAAQ+B,gBACpCtB,EAASnE,GAAG0D,EAAQ+B,kBAExBtB,EAASnE,GAAG0D,EAAQ+B,cAActE,KAAKmD,EAAavB,UACpD2C,EAAgBlF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAASqB,OAAOxF,EAAI,EAAG,EAAGsE,EAAavB,UACvC2C,EAAgBlF,EAAK2D,EAASnE,EAAI,GAAIiE,EAAQP,EAASC,EAAiBW,IAElEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAASqB,OAAOxF,EAAG,EAAGsE,EAAavB,UACnC2C,EAAgBlF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,KALpEzB,EAAQ,EACRsB,EAASqB,OAAO3C,EAAO,EAAGyB,EAAavB,WAO/C,MAAO,QAxEP,GAAI4C,GAAgBxB,EAASnE,EAE7B,IADAmE,EAASqB,OAAOxF,EAAG,GACf2D,EAAiB,CACjB,IAAKtD,oBAAkBsF,EAAcjC,EAAQ4B,kBAKzC,IAAK,GAJDM,GAAalC,EAAQmC,SAASC,OAAO,SAAUC,GAC/C,MAAOA,GAAErC,EAAQ6B,aAAeI,EAAcjC,EAAQ4B,mBACvD,GACCrD,EAAe2D,EAAaA,EAAWlC,EAAQ+B,iBAC1CO,EAAI/D,EAAa/B,OAAS,EAAG8F,GAAK,EAAGA,IAC1C,GAAI/D,EAAa+D,GAAGtC,EAAQ6B,aAAeI,EAAcjC,EAAQ6B,WAAY,CACzEtD,EAAauD,OAAOQ,EAAG,GAClB/D,EAAa/B,SACd0F,EAAW5D,iBAAkB,EAC7B0D,EAAgBlF,EAAKoF,EAAY3B,EAAQP,EAASC,GAEtD,OAIZ,MAAO,aAwDTtD,qBAAkB8D,EAASnE,GAAG0D,EAAQ+B,gBACxCQ,EAAmB9B,EAASnE,GAAG0D,EAAQ+B,cAAepB,EAAaY,GAAIhB,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC5H4B,EAAgBlF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,UAY3E,QAAgBkB,GAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,GAAInB,GACA2B,GAAS,EACT2B,EAAqBxC,EAAQpD,KAAK6F,uBAGtC,QAFAvD,EAAQmC,YAAWtB,EAAQb,OAC3BA,EAAQD,EAAaC,GACbc,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASiC,QAAQxD,GACjB2B,GAAS,CACT,MACJ,KAAK,SACDJ,EAAShD,KAAKyB,GACd2B,GAAS,CACT,MACJ,KAAK,QAOG3B,EAAQD,EANPtC,oBAAkB0D,GAKnBnB,EAAQmC,YAAWmB,EAAmBtC,EAAc,IAJpDhB,EAAQmC,YAAWhB,GAOvB,MACJ,KAAK,QACL,IAAK,QACD,GAAK1D,oBAAkB0D,GAIlB,CACD,GAAIsC,GAAc3C,EAAQpD,KAAK4D,0BAA0B,GACrDoC,EAAcJ,EAAmBtC,EAOrChB,GAAQD,EALJC,GADCvC,oBAAkBiG,IAAgBA,EAAYD,KAAiB5C,EAAQb,MAAMyD,KAAmC,IAAnBxC,EACtFkB,YAAWuB,GAGXvB,YAAWtB,EAAQb,OAI/Bc,GAAQgB,WAA2B,mBAAE3B,SAAWH,MAbhDA,GAAQD,EADRC,EAAQmC,YAAWhB,KAgBA,IAAnBF,IACAM,EAASiC,QAAQxD,GACjB2B,GAAS,GAGrB,OAAS3B,MAAOA,EAAO2B,OAAQA,GAEnC,QAAgB0B,GAAmBhE,EAAcoC,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,GAAIyC,IAAa,EACb7D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS6D,EAAa7D,IACrCmD,GAAmB1B,EAAaS,GAAGgB,EAAQ4B,mBAAqBjB,EAAaX,EAAQ6B,WAAa,CACnG,GAAe,SAAXtB,EAAmB,CAGnB,IAAK,GAFDhD,GAAOD,OAAOC,KAAKoD,GACnBc,EAAazD,EAAcgC,EAASW,EAAa1C,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIiC,EAAaS,GAAGwC,eAAejE,EAAKjB,MAAsC,SAA9B0D,EAAQc,aAAaC,MAAmBxD,EAAKjB,KAAO8D,KAChGqB,EAAWlE,EAAKjB,IAAMmF,EAAWpC,SAAS9B,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMqE,EAAapD,EAAKjB,IAC3D,WAAnC0D,EAAQpD,KAAKkE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQpD,KAAKoE,WAAqB,WAAE8B,aAAenC,EAAaxB,MAChEa,EAAQpD,KAAKoE,WAAqB,WAAE+B,sBAAsBpC,GAItE,MAEC,GAAe,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQ4B,iBAAmBrD,EAAaS,GAAGgB,EAAQ6B,WAChEtD,EAAauD,OAAO9C,EAAI,EAAG,EAAG4B,GAC9BoB,EAAgBlF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,KAGnErC,EAAaS,GAAGwC,eAAexB,EAAQ+B,gBACxCxD,EAAaS,GAAGgB,EAAQ+B,kBAE5BxD,EAAaS,GAAGgB,EAAQ+B,cAActE,KAAKmD,EAAavB,UACxD2C,EAAgBlF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B/C,EAAauD,OAAO9C,EAAG,EAAG4B,EAAavB,UACvC2C,EAAgBlF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1B/C,EAAauD,OAAO9C,EAAI,EAAG,EAAG4B,EAAavB,UAC3C2C,EAAgBlF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,QAG3E,CACgBrC,EAAaS,GAAGjB,UACjCQ,GAAauD,OAAO9C,EAAG,GAClBT,EAAa/B,SACdqG,GAAa,QAIflG,qBAAkB4B,EAAaS,GAAGgB,EAAQ+B,gBAC5CQ,EAAmBhE,EAAaS,GAAGgB,EAAQ+B,cAAepB,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC7H4B,EAAgBlF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAInE,OAAO4C,GAEX,QAAgBb,GAAgBlF,EAAKa,EAAQ4C,EAAQP,EAASC,EAAiB+C,GAC3E,GAA6C,UAAxChD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B5D,oBAAkBqG,EAAMjF,YAI7E,CACD,GACIkF,GADAC,EAAiBlD,EAAQpD,KAAK6F,uBAalC,IAXAS,EAAeC,IAAI,SAAUd,EAAG/F,GAAK,GAAI+F,EAAEvF,KAASa,EAAOb,GAEvD,YADAmG,EAAU3G,KAGTK,oBAAkBsG,KACnBtF,EAASuF,EAAeD,IAExBjD,EAAQoD,sBAAwBzG,oBAAkBgB,KAAYhB,oBAAkBqG,KAChFrF,EAAS0F,WAAS,sBAAwBL,EAAMM,eAAgBtD,IAEpErC,EAAOW,iBAAkB,EACV,QAAXiC,GAA+B,cAAXA,EAAwB,CAC5C5C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrB0B,EAAQuD,aAAahH,QAAQC,QAAUG,oBAAkBqG,KACzDA,EAAQE,EAAed,OAAO,SAAUC,GACpC,MAAIA,GAAEiB,iBAAmB3F,EAAOM,SACrBoE,EAGA,OAInB,IAAI9D,GAAeyE,EAAQA,YAAiB5B,OAAQ4B,EAAM,GAAKA,EAAQE,EAAeD,EAAU,EACpD,WAAxCjD,EAAQc,aAAaQ,iBAChB3D,EAAO6D,eAAe,gBAIlB7E,oBAAkBqG,IAAUrF,EAAOb,KAASkG,EAAMlG,IACnDa,EAAOY,aAAad,KAAKuF,GAJ7BrF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAaiF,QAAQjF,IAAwBZ,EAAOb,KAASkG,EAAMlG,IAC1Ea,EAAOY,aAAamE,QAAQnE,GAE5B0B,IACKtC,EAAO6D,eAAexB,EAAQ+B,gBAC/BpE,EAAOqC,EAAQ+B,mBAEyC,IAAxDpE,EAAOqC,EAAQ+B,cAAcyB,QAAQjF,IAAwBZ,EAAOb,KAASkG,EAAMlG,IACnFa,EAAOqC,EAAQ+B,cAAcW,QAAQnE,KAQrD,IAAK,GAHDoE,GAAc3C,EAAQpD,KAAK4D,0BAA0B,GACrDiD,EAAOzD,EAAQpD,KAAKhB,qBAAsBC,eAC1CmE,EAAQpD,KAAKhB,WAAWA,WAAW8E,KAAOV,EAAQpD,KAAKhB,WAClDU,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAC7B,GAAImH,EAAKnH,GAAGqG,KAAiBhF,EAAOgF,GAAc,CAC9Cc,EAAKnH,GAAKqB,CACV,OAGRqC,EAAQpD,KAAK8G,WAAW5G,EAAKa,EAC7B,IAAIgG,GAAM3D,EAAQ4D,cAAcX,EACE,WAA9BjD,EAAQc,aAAaC,OACrB4C,EAAM3D,EAAQ6D,UAAU7D,EAAQpD,KAAKkH,wBAAwBnG,EAAOb,KAExE,IAAIiH,OAAa,EAIjB,KAHI/D,EAAQgE,YAAchE,EAAQiE,sBAC9BF,EAAa/D,EAAQkE,qBAAqBjB,KAEzCjD,EAAQoD,uBAAyBzG,oBAAkBgH,KAAShH,oBAAkBoH,GAAa,CAC5F,GAAII,GAAUnE,EAAQoE,eAClBpE,GAAQqE,qBAAuBrE,EAAQsE,sBACvCH,GAAoB,GAExBnE,EAAQuE,aAAaC,YACjBf,KAAM9F,EAAQ8G,KAAMd,EAAIe,MAAMP,GAAWR,EAAIe,MAAMP,GAC7CJ,EAAWW,MAAMP,EAAUnE,EAAQiE,oBACzCU,OAAQ3E,EAAQpD,KAAKgI,aAAa5E,EAAQoE,iBAC1CS,YAAatE,SAhFJvC,GAAcgC,EAASgD,EAAMjF,WAAWE,UAC9CM,aAAad,KAAKuF,GCrPrC,GAAI8B,GAAwB,WACxB,QAASA,GAAOC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAKhI,gBAAiB,EAMtBgI,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAK5C,UACLoD,QAAMR,KAAMD,GAEhB,MAAOD,MCjEPW,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,MAxCAS,GAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,eAAY,IACpCE,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACxCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,gBACDH,EAAUb,UAAW,wBAAqB,IAC7CE,GACIc,gBACDH,EAAUb,UAAW,qBAAkB,IAC1CE,GACIc,cACDH,EAAUb,UAAW,WAAQ,IAChCE,GACIc,cACDH,EAAUb,UAAW,kBAAe,IACvCE,GACIc,cACDH,EAAUb,UAAW,UAAO,IAC/BE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,cAAW,IACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,cACDE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,0BAAuB,IACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,yBAAsB,IACnDE,GACIc,cACDE,EAAelB,UAAW,gBAAa,IAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,mBAAgB,IAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,oBAAiB,IACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,MAPAS,GAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,eAAY,IACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QASnFuB,EAAU,oDACVC,EAAe,2CAIfC,EAAwB,SAAUT,GAElC,QAASS,GAAO7L,GAIZ,MAFA8L,QAAKC,OAAOC,UACJZ,EAAOa,KAAK5C,KAAMrJ,IAAWqJ,KAsEzC,MA1EAS,GAAU+B,EAAQT,GAWlBS,EAAOvB,UAAU4B,cAAgB,WAC7B,MAAO,UAEXL,EAAOvB,UAAU6B,IAAM,SAAUC,EAAOC,GAC9BD,YAAiB3G,SACnB2G,GAASA,GAGb,KAAK,GADDE,GAAOF,EACFzL,EAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAClC,GAAI4L,GAAOC,cAAYF,EAAK3L,IACxB8L,EAAMF,EAAKG,MAAML,EAAMhD,KAAKrJ,OAChC,IAAIyM,EAAIE,QAAS,CACb,GAAIC,GAAUL,EAAKM,gBAAgBR,EAAMhD,KAAKrJ,OAAQyM,EAAIrD,SAEtD5F,GADJoJ,EAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,KACtFjF,QAAQ,SACxBkF,EAAUH,EAAQI,UAAUxJ,EAChB,oBAAZ8I,EAAK3L,GACLiM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAK3L,IAA+C,0BAAZ2L,EAAK3L,GAClDiM,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAK3L,KACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjC,+BAAZW,EAAK3L,GACAK,oBAAkBqI,KAAK4D,cAAiBjM,oBAAkBqI,KAAK4D,YAAYC,kBAC5EC,QAAQZ,EAAKa,SAASR,GAI1BO,QAAQZ,EAAKa,SAASR,MAKtCf,EAAOvB,UAAU+C,QAAU,SAAUjB,EAAOC,EAAMiB,GAC9CjE,KAAK4D,YAAcK,EACblB,YAAiB3G,SACnB2G,GAASA,GAEb,IAAIE,GAAOF,CACPkB,GAAS5E,qBACTW,KAAK8C,IAAI,yBAA0BE,EAEvC,KAAK,GAAI1L,GAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAClC,GAAI4L,GAAOgB,EAAgBjB,EAAK3L,IAC5B8L,EAAMF,EAAKG,MAAML,EAAMiB,EAC3B,IAAIb,EAAIE,QAAS,CACb,GAAIC,GAAUL,EAAKM,gBAAgBR,EAAMiB,EAAUb,EAAIrD,QACvD+D,SAAQZ,EAAKa,SAASR,MAI3Bf,GACTG,UAESuB,GACPC,wBACIlB,KAAM,yBACNc,QAAS,QACTV,MAAO,SAAUL,EAAMrM,GACnB,GAAIyN,IAAQd,SAAS,EAOrB,QANK3L,oBAAkBhB,EAAOkG,YAAclF,oBAAkBhB,EAAOoG,eAC9DpF,oBAAkBhB,EAAOiG,mBAC1BjF,oBAAkBhB,EAAOkG,YAAclF,oBAAkBhB,EAAOiG,kBACjEjF,oBAAkBhB,EAAOkG,aAAelF,oBAAkBhB,EAAOiG,oBAClEwH,GAAQd,SAAS,IAEdc,GAEXZ,gBAAiB,SAAUR,EAAMrM,EAAQ0N,GACrC,MAAOC,iRAIF/B,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCC3H5B9B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAUnFwD,EAA+B,SAAUxC,GAEzC,QAASwC,GAAc5N,GACnB,GAAI6N,GAAQzC,EAAOa,KAAK5C,KAAMrJ,EAAOiB,OAASoI,IAI9C,OAHAwE,GAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiBhO,EAChB6N,EAsJX,MA5JA/D,GAAU8D,EAAexC,GAQzBwC,EAActD,UAAU2D,YAAc,SAAUC,GAC5C,GAII3G,GAAiB8B,KAAK2E,eAAelH,uBACzC,IAAyC,KAArC/C,OAAOoK,eAAeC,WAAmB,CACzC/E,KAAKgF,kBAAkB9K,MAAQ8F,KAAgB,YAAI,EACnD,IAAIiF,GAAOjF,KAAK2E,eAAe/M,KAAKiH,SACpC,IAAmD,SAA/CmB,KAAK2E,eAAeO,kBAAkBnJ,KAAiB,CAIvD,IAAK,GAHDoJ,GAAkBnF,KAAK2E,eAAeS,wBAAwBC,KAAK,SAAUC,EAAG1E,GAChF,MAAO0E,GAAI1E,IAENtJ,EAAI,EAAGA,EAAI6N,EAAgB3N,OAAQF,IAIxC,GAHIA,EAAI,IACJ0I,KAAKyE,iBAAmB,OAEvBQ,EAAKE,EAAgB7N,IAAIiO,UAAUC,SAAS,gBAAiB,CAC9D,GAAI9F,MAAW+F,MAAM7C,KAAKqC,EAAKE,EAAgB7N,IAAIoO,iBAAiB,eAChEC,EAAW3F,KAAK2E,eAAeiB,qBAAqBtO,GAAW,UACV,IAArD0I,KAAK0E,yBAAyBlG,QAAQmH,KACQ,WAA1C3F,KAAK2E,eAAekB,mBAA4E,SAA1C7F,KAAK2E,eAAekB,mBAC1E7F,KAAK8F,kBAAkB5H,EAAgBiH,EAAgB7N,GAAI2N,EAAMJ,EAAYvN,GAEjF0I,KAAgB,YAAEN,GAAO,EAAO,KAAMmF,GACtC7E,KAAKyE,iBAAmBzE,KAAgB,YACxCA,KAAK0E,yBAAyBjM,KAAKkN,GACnC3F,KAAgB,YAAI,GAC0B,UAA1CA,KAAK2E,eAAekB,mBAA2E,SAA1C7F,KAAK2E,eAAekB,mBACzE7F,KAAK+F,iBAAiB7H,EAAgBiH,EAAgB7N,GAAI2N,EAAMJ,IAKhF,GAAIA,EAAY,CAEZ,IAAK,GADDmB,MACK1O,EAAI,EAAGA,EAAI0I,KAAK2E,eAAesB,oBAAoBzO,OAAQF,IAChE0O,EAAgB1O,GAAK0I,KAAK2E,eAAesB,oBAAoB3O,GAAG4O,UAEpElG,MAAgB,YAAEgG,GAAiB,EAAO,KAAMnB,GAChD7E,KAAKyE,gBAAkBzE,KAAgB,YAAI,KAAOA,KAAKyE,gBAE3D,GAAIzB,IACAvE,KAAMuB,KAAKyE,gBACX0B,QAAQ,EAGZ,IADAnG,KAAK2E,eAAeyB,QCpBZ,aDoBuCpD,GAC3CA,EAAKmD,OACL,MAEJnG,MAAKgF,kBAAkB9K,MAAQ8F,KAAgB,YAAIgD,EAAKvE,KACnD4H,UAAQC,UAAUC,MAAM,qBAIzBvG,KAAKgF,kBAAkBwB,kBAAkB,EAAGxG,KAAKgF,kBAAkB9K,MAAM1C,QAHzEwI,KAAKgF,kBAAkByB,SAK3BzG,KAAa,UAAI,EACjBA,KAAK0E,4BACL1E,KAAKyE,gBAAkB,OAGvB1C,GAAOd,UAAU2D,YAAYhC,KAAK5C,KAAM6E,KAIpDN,EAActD,UAAU6E,kBAAoB,SAAU5H,EAAgB/C,EAAe8J,EAAMJ,EAAY1K,GAMnG,IAAKxC,oBAAkBuG,EAAe/C,GAAyB,YAE3D,IAAK,GADDuL,GAAYxI,EAAe/C,GAAyB,WAAO,MACtD7D,EAAI,EAAGA,EAAIoP,EAAY,EAAGpP,IAC/B,IAAK,GAAI0C,GAAI,EAAGA,EAAIkE,EAAe1G,OAAQwC,IACvC,IAAKrC,oBAAkBuG,EAAe/C,GAAyB,aAC3D+C,EAAelE,GAAW,WAAMkE,EAAe/C,GAAyB,WAAU,SAAG,CACrFA,EAAgBnB,CAChB,IAAI0F,MAAW+F,MAAM7C,KAAKqC,EAAK9J,GAAeuK,iBAAiB,eAC3DC,EAAWzH,EAAelE,GAAW,QACzC,KAAyD,IAArDgG,KAAK0E,yBAAyBlG,QAAQmH,GAAkB,CACxD3F,KAAgB,YAAEN,GAAO,EAAO,KAAMmF,GAElC7E,KAAKyE,gBADLtK,EAAQ,EACe6F,KAAKyE,gBAAkBzE,KAAgB,YAAI,KAG3CA,KAAgB,YAAI,KAAOA,KAAKyE,gBAE3DzE,KAAK0E,yBAAyBjM,KAAKkN,GACnC3F,KAAgB,YAAI,EACpB,UAOxBuE,EAActD,UAAU0F,KAAO,SAAU9B,GACrC9C,EAAOd,UAAU0F,KAAK/D,KAAK5C,KAAM6E,IAErCN,EAActD,UAAU2F,MAAQ,SAAUnI,EAAMoI,EAAUC,GACtD/E,EAAOd,UAAU2F,MAAMhE,KAAK5C,KAAMvB,EAAMoI,EAAUC,IAMtDvC,EAActD,UAAU4B,cAAgB,WACpC,MAAO,aAQX0B,EAActD,UAAU8F,QAAU,WAC9BhF,EAAOd,UAAU8F,QAAQnE,KAAK5C,OAElCuE,EAActD,UAAU8E,iBAAmB,SAAU7H,EAAgB/C,EAAe8J,EAAMJ,GAMtF,GAAI3G,EAAe/C,GAA8B,gBAE7C,IAAK,GADD6L,GAAY9I,EAAe/C,GAA2B,aACjD7D,EAAI,EAAGA,EAAI0P,EAAUxP,OAAQF,IAClC,IAAK,GAAI0C,GAAI,EAAGA,EAAIkE,EAAe1G,OAAQwC,IACvC,IAAKrC,oBAAkBqP,EAAU1P,GAAW,WAAM4G,EAAelE,GAAW,WAAMgN,EAAU1P,GAAW,SAAG,CACtG,IAAMK,oBAAkBsN,EAAKjL,MAASiL,EAAKjL,GAAGuL,UAAUC,SAAS,gBAAiB,CAC9E,GAAI9F,MAAW+F,MAAM7C,KAAKqC,EAAKjL,GAAG0L,iBAAiB,eAC/CC,EAAWzH,EAAelE,GAAW,UACgB,IAArDgG,KAAK0E,yBAAyBlG,QAAQmH,KACtC3F,KAAgB,YAAEN,GAAO,EAAO,KAAMmF,GACtC7E,KAAKyE,iBAAoB,KAAOzE,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAK0E,yBAAyBjM,KAAKkN,GACnC3F,KAAK+F,iBAAiB7H,EAAgBlE,EAAGiL,EAAMJ,IAGvD,QAMbN,GACT0C,aEzKEC,EAA2B,WAI3B,QAASA,GAAUvQ,GACfqJ,KAAKrJ,OAASA,EACdqJ,KAAKmH,iBACLnH,KAAKmF,mBACLnF,KAAKoH,mBA2aT,MAraAF,GAAUjG,UAAU4B,cAAgB,WAChC,MAAO,aAEXqE,EAAUjG,UAAUmG,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKsH,eAAgBtH,MACpDA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKuH,eAAgBvH,MACtDA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAKwH,kBAAmBxH,MAC5DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,mBAAoBrH,KAAKsH,eAAgBtH,MAC7DA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAKyH,kBAAmBzH,OAEhEkH,EAAUjG,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKsH,gBACrCtH,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKuH,gBACvCvH,KAAKrJ,OAAOiB,KAAKgQ,IAAI,mBAAoB5H,KAAKsH,gBAC9CtH,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAKyH,mBAC1CzH,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAKwH,qBAO9CN,EAAUjG,UAAU8F,QAAU,WAC1B/G,KAAK0H,uBAETR,EAAUjG,UAAUwG,kBAAoB,SAAUzE,GAC9C,GAEI6E,GAFAxG,EAAS7I,YAAU,SAAUwK,GAC7B8E,EAAYC,eAAa1G,EAAQ,qBAErC,IAAIyG,GAAaA,EAAUpC,iBAAiB,sBAAsBlO,OAAS,EAAG,CAC1EqQ,EAAWC,EAAUE,cAAc,yBACnC,IAAInB,OAAW,IACfA,MACSpO,KAAK4I,EAAO4G,QAAQ,MAAMpB,UACnC7G,KAAKkI,iBAAiBrB,GACtB7G,KAAKmI,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYnE,EAAO4G,QAAQ,WAE9G,IAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoBlO,OAAS,GAAKwI,KAAKrJ,OAAO0R,mBAAoB,CAC/G,GAAIC,IAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,SAC/DxF,MAAKuI,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnChI,KAAKmI,sBAAsBN,EAAUS,EAAejH,EAAO4G,QAAQ,SAG3Ef,EAAUjG,UAAUkH,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,GAAIhK,GAAOuB,KAAKrJ,OAAO8G,wBAAwBgL,EAAW5B,UACtD7D,GAAS0F,QAASF,EAAYnH,OAAQwG,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BxF,KAAKrJ,OAAOiS,oBAAsBnK,EAC5CuB,MAAKrJ,OAAOyP,QDrDQ,iBCqDuBpD,IAE/CkE,EAAUjG,UAAU4H,uBAAyB,WAIzC,IAAK,GAHDC,GACAC,EACAxR,EAAWyI,KAAKrJ,OAAe,QAC1BqS,EAAM,EAAGA,EAAMzR,EAAQC,OAAQwR,IAChCzR,EAAQyR,GAAKvR,eACbqR,EAAa9I,KAAKrJ,OAAOY,QAAQyR,GAAKC,IAI9C,KAAK,GADDC,GAAmBlJ,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,oBAAoBlO,OAClFwC,EAAI,EAAGA,EAAIkP,EAAkBlP,IACjBgG,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,oBAAoB1L,GACtEoP,aAAa,kBAAoBN,IAC5CC,EAAc/O,EAGtB,OAAO+O,IAEX7B,EAAUjG,UAAUqG,eAAiB,WAEjC,GADAtH,KAAK+I,YAAc/I,KAAK6I,yBACpB7I,KAAK+I,aAAe,GAAoF,IAA/E/I,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,oBAAoBlO,OAAc,CAC3G,GAAI6R,GAAgBrJ,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,oBAAoB1F,KAAK+I,aACzFjB,MAAY,GAEZwB,EAAYtJ,KAAKrJ,OAAO4S,cAAc,SAAWC,UAAW,kBAAmBC,OAASxG,KAAQ,eACpG6E,EAAY4B,iBAAe1J,KAAKrJ,OAAO4S,eAAe,GAASb,SAFnD,EAEmEiB,MAAO,OAC5EpE,UAAUqE,IAAI,uBACxB9B,EAAUE,cAAc,YAAYvN,MAAMoP,MAAQ,OAClD/B,EAAUgC,aAAaR,EAAUS,YAAajC,EAAUkC,YACnDrS,oBAAkB0R,IACnBA,EAAcS,aAAahC,EAAWuB,EAAcW,YAEpDhK,KAAKrJ,OAAO0R,oBACZrI,KAAKuI,sBAGR,IAAIvI,KAAK+I,aAAe,GAAK/I,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,oBAAoBlO,OAAS,EAAG,CAC9G,GACI8Q,IADAR,EAAY9H,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,UACvExF,MAAKrJ,OAAO0R,oBAAsBC,GAClCtI,KAAKuI,gBAAgBD,KAIjCpB,EAAUjG,UAAUgJ,qBAAuB,SAAUjH,GACjD,GAAI8E,GACAwB,EAAYtJ,KAAKrJ,OAAO4S,cAAc,SAAWC,UAAW,oBAAqBC,OAASxG,KAAQ,cAClGxE,EAAOuE,EAAKvE,IAChBuE,GAAKvD,KAAK8F,UAAUqE,IAAI,sBACxB5G,EAAKvD,KAAKyK,aAAa,aAAc,WACrC,IAAIhQ,IAASvC,oBAAkB8G,EAAK0L,gBAAyC,YAAvB1L,EAAK0L,aAI3D,KAHArC,EAAY4B,iBAAe1J,KAAKrJ,OAAO4S,eAAe,GAASb,QAASxO,EAAOyP,MAAO,OAC5EpE,UAAUqE,IAAI,uBACxB9B,EAAUE,cAAc,YAAYvN,MAAMoP,MAAQ,OACvB,kBAAvBpL,EAAK0L,cAAmC,CACxC,GAAIC,GAAWtC,EAAUpC,iBAAiB,YAAY,EACtD2E,gBAAaD,IAAY,UAAW,SAAU,cAC9CtC,EAAUE,cAAc,YAAYzC,UAAUqE,IAAI,UAGtD,MADA9B,GAAUgC,aAAaR,EAAUS,YAAajC,EAAUkC,YACjDlC,GAEXZ,EAAUjG,UAAUsG,eAAiB,SAAU+C,GAC3C,GAAIxC,GAAY9H,KAAKiK,qBAAqBK,GACtCC,EAAeD,EAAU7K,KAAKuI,cAAc,0BAChD,IAAKrQ,oBAAkB4S,GAKlB,CACD,GAAIC,GAAUxK,KAAKrJ,OAAO4S,cAAc,QAAUC,UAAW,mBACzD/K,EAAO6L,EAAU7K,KAAKgL,SAC1BH,GAAU7K,KAAKgL,UAAY,GAC3BD,EAAQC,UAAYhM,CACpB,IAAIiM,GAAS1K,KAAKrJ,OAAO4S,cAAc,OAASC,UAAW,4BAC3DkB,GAAOC,YAAY7C,GACnB4C,EAAOC,YAAYH,GACnBF,EAAU7K,KAAKkL,YAAYD,OAZtBJ,GAAU7K,KAAKuI,cAAc,yBAC9BuC,EAAaT,aAAahC,EAAWyC,EAAa7E,iBAAiB,eAAe,KAc9FwB,EAAUjG,UAAUiH,iBAAmB,SAAU0C,GAE7C,IAAK,GAAItT,GAAI,EAAGA,EAAIsT,EAAWpT,OAAQF,IAAK,CACxC,GAAIqB,GAASqH,KAAKrJ,OAAO8G,wBAAwBmN,EAAWtT,IACxDuT,EAAa7R,EAAcgH,KAAKrJ,OAAQgC,EAAOM,UAG/CkR,EAA0C,aAF9CxR,EAAU+D,cAAsD,kBAAxCsD,KAAKrJ,OAAOC,WAAsB,YACtD+B,EAASkS,GACeV,cAA+B,QAAU,SACrExR,GAAOwR,cAAgBA,CAEvB,KAAK,GADD5R,GAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB6Q,EAAWrO,eAAejE,EAAKyB,MAC/B6Q,EAAWtS,EAAKyB,IAAMrB,EAAOJ,EAAKyB,IAG1CgG,MAAK8K,gBAAgBnS,EAAQwR,GAAe,GACxCnK,KAAKrJ,OAAO0R,oBACZrI,KAAKuI,oBAIjBrB,EAAUjG,UAAU6J,gBAAkB,SAAUnS,EAAQwR,EAAeY,GACnE,GAAIvT,GAAS,CAKb,IAJAwI,KAAKgL,oBAAoBrS,EAAQwR,IAC5BY,GAAepS,EAAOI,YAAciH,KAAKrJ,OAAO0R,oBACjDrI,KAAKiL,sBAAsBtS,EAAOI,YAElCJ,EAAOY,cAAgByG,KAAKrJ,OAAO0R,mBAAoB,CACvD,GAAI9O,GAAeZ,EAAOY,cACrB5B,oBAAkBqI,KAAKrJ,OAAOuU,eAC/BlL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,OAAS,GAAKwI,KAAKrJ,OAAO0R,qBAClE9O,EAAeyG,KAAKoL,wBAAwB7R,IAEhD/B,EAAS+B,EAAa/B,MACtB,KAAK,GAAI6T,GAAQ,EAAGA,EAAQ7T,EAAQ6T,IAC3B9R,EAAa8R,GAAOC,eACjB/R,EAAa8R,GAAO/R,gBACpB0G,KAAK8K,gBAAgBvR,EAAa8R,GAAQlB,GAAe,GAGzDnK,KAAKgL,oBAAoBzR,EAAa8R,GAAQlB,MAMlEjD,EAAUjG,UAAUmK,wBAA0B,SAAU7R,GACpD,GAAIiL,GAAQxE,IAIZ,OAH2BzG,GAAa6D,OAAO,SAAUC,GACrD,MAAOmH,GAAM7N,OAAOuU,aAAaC,eAAe3M,QAAQnB,IAAM,KAItE6J,EAAUjG,UAAUgK,sBAAwB,SAAUnS,GAClD,GACItB,GAAS,EACT+B,KACAZ,EAASK,EAAcgH,KAAKrJ,OAAQmC,EAAaG,SACjDN,IAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBqI,KAAKrJ,OAAOuU,eAC/BlL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,OAAS,GAAKwI,KAAKrJ,OAAO0R,qBAClE9O,EAAeyG,KAAKoL,wBAAwB7R,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,MACtC,IAAI+T,GAAU,EACVC,EAAoB,CACxB,KAAK7T,oBAAkBgB,GAAS,CAkB5B,IAAK,GADD8S,GAASzL,KACJ1I,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,KAjB3B,SAAUA,GACpB,GAAIoU,GAAcD,EAAO9U,OAAO8G,wBAAwBL,OAAO,SAAUC,GACrE,MAAOA,GAAEpE,WAAaM,EAAajC,GAAG2B,WAEtC0S,EAAgB3S,EAAcyS,EAAO9U,OAAQ4C,EAAajC,GAAG2B,UAC7D2S,EAAkBlP,cAAwD,kBAA1C+O,EAAO9U,OAAOC,WAAsB,YACpE8U,EAAY,GAAKC,CAChBhU,qBAAkBiU,KACkB,kBAAjCA,EAAezB,cACfoB,IAEsC,UAAjCK,EAAezB,eACpBqB,MAMAlU,EAGRqB,GAAOwR,cADPoB,EAAU,GAAMC,EAAoB,GAAKA,IAAsBhU,EACxC,gBAEI,IAAtBgU,GAAuC,IAAZD,EACT,UAGA,QAE3BvL,KAAKgL,oBAAoBrS,EAAQA,EAAOwR,eACpCxR,EAAOI,YACPiH,KAAKiL,sBAAsBtS,EAAOI,cAI9CmO,EAAUjG,UAAUsH,gBAAkB,SAAUsD,GAC5C,GAAIrH,GAAQxE,KAGRxI,EAAS,EACTiH,GAAS9G,oBAAkBqI,KAAKrJ,OAAOuU,eACvClL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,OAAS,EAAKwI,KAAKrJ,OAAOuU,aAAaC,eAC/EnL,KAAKrJ,OAAOwG,QAGhB,IAFAsB,EAAQ/B,cAAsD,kBAAxCsD,KAAKrJ,OAAOC,WAAsB,aAA0BF,EAAasJ,KAAKrJ,QAChGqJ,KAAKrJ,OAAO8G,wBAA0BgB,GACrC9G,oBAAkBkU,GACnB,IAAK,GAAIvU,GAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAC7B,GAAIuU,EAAU,CACV,GAA8B,UAA1BpN,EAAKnH,GAAG6S,cACR,QAEJ1L,GAAKnH,GAAG6S,cAAgB,QACxBnK,KAAKgL,oBAAoBvM,EAAKnH,GAAImH,EAAKnH,GAAG6S,mBAGlCnK,MAAKmH,cAAc3I,QAAQC,EAAKnH,KAC3B,IACTmH,EAAKnH,GAAG6S,cAAgB,UACxBnK,KAAKgL,oBAAoBvM,EAAKnH,GAAImH,EAAKnH,GAAG6S,eACtCnK,KAAKrJ,OAAO0R,oBACZrI,KAAKiL,sBAAsBxM,EAAKnH,MAMnC,IAAbuU,GAAsB7L,KAAKrJ,OAAOyH,uBAClC4B,KAAKmH,iBACLnH,KAAKmF,mBACL1G,EAAKrB,OAAO,SAAU0O,GAClBA,EAAI3B,cAAgB,UACpB3F,EAAMwG,oBAAoBc,EAAKA,EAAI3B,kBAG3C3S,EAASwI,KAAKmH,cAAc3P,MAC5B,IAAI4S,GAAWpK,KAAKrJ,OAAOwS,mBAAmBzD,iBAAiB,YAAY,EACvElO,GAAS,GAAKiH,EAAKjH,OAAS,EACxBA,IAAWiH,EAAKjH,QAAWqU,GAK3BxB,eAAaD,IAAY,WACzBA,EAAS7E,UAAUqE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS7E,UAAUqE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5ClD,EAAUjG,UAAU+J,oBAAsB,SAAUW,EAAenD,EAAYpL,GAC3E,GAGI2O,GAIA3B,EAPAzR,EAASqH,KAAKrJ,OAAO8G,wBAAwBL,OAAO,SAAUC,GAC9D,MAAOA,GAAEpE,WAAa0S,EAAc1S,WAIpC+S,EAAchM,KAAKrJ,OAAO8G,wBAAwBe,QAAQ7F,EAAO,IACjEsT,EAAiBjT,EAAcgH,KAAKrJ,OAAQgV,EAAc1S,SAE9D,IAAI+S,GAAe,EAAG,CAClB,GAAIE,GAAKlM,KAAKrJ,OAAOkI,UAAUmN,GAC3BG,MAAY,IACZnM,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,sBACtCkN,EAAYnM,KAAKrJ,OAAOyV,qBAAqBJ,IAEjD5B,EAAW8B,EAAGxG,iBAAiB,YAAY,GAAKwG,EAAGxG,iBAAiB,YAAY,GAC1EyG,EAAUzG,iBAAiB,YAAY,GACxC/N,oBAAkByS,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA2B,EAAiBrP,cAAsD,kBAAxCsD,KAAKrJ,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKsT,EACZtU,oBAAkBoU,KAClBA,EAAgBJ,GAEpBI,EAAc5B,cAAgB3B,EACX,UAAfA,GAA0B7Q,oBAAkBgU,EAAcL,eACrC,IAAjBU,IAAqE,IAA/ChM,KAAKmF,gBAAgB3G,QAAQwN,IACnDhM,KAAKmF,gBAAgB1M,KAAKuT,IAEqB,IAA/ChM,KAAKmH,cAAc3I,QAAQuN,KAA2C,IAAjBC,IACnDrU,oBAAkBqI,KAAKrJ,OAAOuU,eAAiBlL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,OAAS,GAClGwI,KAAKmH,cAAc1O,KAAKsT,IAEuB,IAA/C/L,KAAKmH,cAAc3I,QAAQuN,IAA2BpU,oBAAkBqI,KAAKrJ,OAAOuU,eACjC,IAAnDlL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,QACxCwI,KAAKmH,cAAc1O,KAAKsT,IAEuB,IAA/C/L,KAAKmH,cAAc3I,QAAQuN,IAAyBpU,oBAAkBqI,KAAKrJ,OAAOuU,eAClFlL,KAAKmH,cAAc1O,KAAKsT,OAG3B,KAAoB,YAAfvD,GAA2C,kBAAfA,IAAmC7Q,oBAAkBgU,EAAcL,cAAe,CACpH,GAAInR,GAAQ6F,KAAKmH,cAAc3I,QAAQuN,EAIvC,KAHe,IAAX5R,GACA6F,KAAKmH,cAAcrK,OAAO3C,EAAO,IAEc,IAA/C6F,KAAKmF,gBAAgB3G,QAAQwN,GAAqB,CAClD,GAAIK,GAAerM,KAAKmF,gBAAgB3G,QAAQwN,EAChDhM,MAAKmF,gBAAgBrI,OAAOuP,EAAc,IAGlD,GAAIC,GAA+B,kBAAf9D,EAAiC,SAAW,KAAOA,CACnEwD,IAAe,IACVrU,oBAAkByS,IACnBA,EAAS7E,UAAUqE,IAAI0C,KAInCpF,EAAUjG,UAAUuG,kBAAoB,SAAUxE,GAC9C,GAEIgE,GACAuF,EAHA/H,EAAQxE,KACRH,EAAcmD,EAAKnD,WAGvB,IAAIxI,EAAiB2I,KAAKrJ,SAClBqJ,KAAKrJ,OAAO0R,mBACZ,GAAqB,YAAhBxI,GAA6C,WAAhBA,EAA2B,CACzD,GAAIoF,GAAOjF,KAAKrJ,OAAOiB,KAAKiH,SAE5B0N,IADAvF,EAAYhH,KAAKrJ,OAAO8G,yBACAjG,OACxBwI,KAAKmF,kBACL,KAAS7N,EAAI,EAAGA,EAAIiV,EAAajV,IACxB2N,EAAK3N,GAAGiO,UAAUC,SAAS,iBAC5BxF,KAAKgL,oBAAoBhE,EAAU1P,GAAI0P,EAAU1P,GAAG6S,eAAe,OAI1E,IAAoB,WAAhBtK,GAA4C,QAAhBmD,EAAKzH,OAAkB,CACxD,GAAIiR,KACgB,YAAhB3M,EACA2M,EAAcxJ,EAAKvE,KAGnB+N,EAAY/T,KAAKuK,EAAKvE,KAE1B,KAAK,GAAInH,GAAI,EAAGA,EAAIkV,EAAYhV,OAAQF,IAAK,CACzC,GAAoB,WAAhBuI,EAA0B,CAC1B,GAAI1F,GAAQ6F,KAAKrJ,OAAOwG,SAASqB,QAAQgO,EAAYlV,IACjD+U,EAAerM,KAAKmF,gBAAgB3G,QAAQrE,EAChD6F,MAAKmF,gBAAgBrI,OAAOuP,EAAc,GAC1CrM,KAAKgL,oBAAoBwB,EAAYlV,GAAI,WAExCK,oBAAkB6U,EAAYlV,GAAGyB,aAClCiH,KAAKiL,sBAAsBuB,EAAYlV,GAAGyB,iBAIxB,QAArBiK,EAAKnD,aAAyBG,KAAKrJ,OAAO0R,mBAC/CrF,EAAKvE,KAAK0L,cAAgB,WAEL,cAAhBtK,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DnJ,EAAasJ,KAAKrJ,WACtBqJ,KAAKmH,iBACLnH,KAAKmF,oBACL6B,GAAcrP,oBAAkBqI,KAAKrJ,OAAOuU,eAAiBlL,KAAKrJ,OAAOuU,aAAaC,eAAe3T,OAAS,EAC1GwI,KAAKrJ,OAAO8G,wBAA0BuC,KAAKrJ,OAAOwG,UAC5CsP,QAAQ,SAAU9T,GACpBA,EAAOW,gBACPkL,EAAMyG,sBAAsBtS,GAG5B6L,EAAMwG,oBAAoBrS,EAAQA,EAAOwR,iBAGjDnK,KAAKuI,oBAKrBrB,EAAUjG,UAAUyL,kBAAoB,WACpC,MAAO1M,MAAKmH,eAEhBD,EAAUjG,UAAU0L,qBAAuB,WACvC,MAAO3M,MAAKmF,iBAET+B,KCrbP0F,EAAuB,WAIvB,QAASA,GAAMjW,GACXqJ,KAAKrJ,OAASA,EACd8L,OAAKC,OAAOmK,SACZ7M,KAAKoH,mBAqCT,MA/BAwF,GAAM3L,UAAU4B,cAAgB,WAC5B,MAAO,SAKX+J,EAAM3L,UAAUmG,iBAAmB,WAC/BpH,KAAKrJ,OAAOiB,KAAKyP,GFsBE,iBEtBuBrH,KAAK8M,cAAe9M,OAElE4M,EAAM3L,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOiB,KAAKgQ,IFmBE,iBEnBwB5H,KAAK8M,gBAEpDF,EAAM3L,UAAU6L,cAAgB,SAAUC,GACtC,GAAInV,GAAOY,YAAU,YAAauU,GAC9BC,EAAcxU,YAAU,UAAWuU,EACvCnV,GAAKwP,iBF1Bc,gBE0ByBpH,KAAKrJ,OAAOiB,KAAKqV,eAC7DrV,EAAKwP,iBF/Ba,eE+ByBpH,KAAKrJ,OAAOiB,KAAKsV,cAC5DtV,EAAKwP,iBF1BgB,kBE0ByBpH,KAAKrJ,OAAOiB,KAAKuV,iBAC/DC,YAAUJ,GAAc,eAE5BJ,EAAM3L,UAAUoM,MAAQ,WACpBrN,KAAKrJ,OAAOiB,KAAKyV,SAOrBT,EAAM3L,UAAU8F,QAAU,WACtB/G,KAAK0H,uBAEFkF,KCnDPnM,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D6L,EAAgC,SAAUvL,GAE1C,QAASuL,KACL,MAAkB,QAAXvL,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,MAnBAS,GAAU6M,EAAgBvL,GAI1BZ,GACIc,cACDqL,EAAerM,UAAW,aAAU,IACvCE,GACIc,YAAS,IACVqL,EAAerM,UAAW,iBAAc,IAC3CE,GACIc,WAAS,aACVqL,EAAerM,UAAW,eAAY,IACzCE,GACIc,cACDqL,EAAerM,UAAW,UAAO,IACpCE,GACIc,cACDqL,EAAerM,UAAW,oBAAiB,IACvCqM,GACTpL,iBC5CEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D8L,EAAmC,SAAUxL,GAE7C,QAASwL,KACL,MAAkB,QAAXxL,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,MAzBAS,GAAU8M,EAAmBxL,GAI7BZ,GACIc,WAAS,QACVsL,EAAkBtM,UAAW,WAAQ,IACxCE,GACIc,WAAS,SACVsL,EAAkBtM,UAAW,wBAAqB,IACrDE,GACIc,WAAS,WACVsL,EAAkBtM,UAAW,WAAQ,IACxCE,GACIc,YAAS,IACVsL,EAAkBtM,UAAW,uBAAoB,IACpDE,GACIc,WAAS,YACVsL,EAAkBtM,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACVsL,EAAkBtM,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACVsL,EAAkBtM,UAAW,mBAAgB,IACzCsM,GACTrL,iBCzCEsL,EAAwB,WAIxB,QAASA,GAAO7W,GACZqJ,KAAKrJ,OAASA,EACdqJ,KAAKyN,eAAiB,KACtBzN,KAAKrJ,OAAOiB,KAAKyP,GAAG,kBAAmBrH,KAAK0N,qBAAsB1N,MAClEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,sBAAuBrH,KAAK2N,oBAAqB3N,MAgPzE,MA3OAwN,GAAOvM,UAAU2M,YAAc,SAAU5K,GACrC,GAAKA,EAAKvE,KAAV,CAGA,GAAIA,GAAOuE,EAAKvE,KACZvB,EAAauB,EAAK1F,UAgBtB,IAdKpB,oBAAkB8G,EAAK1F,aAAgBrB,EAAuBsI,KAAKrJ,SACjEqJ,KAAKrJ,OAAOkX,aAA2D,SAA1C7N,KAAKrJ,OAAOmX,aAAaC,gBACpDrX,EAAasJ,KAAKrJ,SAAY8C,EAAUuG,KAAKrJ,UAUzCqM,EAAKrE,IAAIyK,aAAa,kBATvB3K,EAAK1F,WAAWoB,OACP6F,KAAKrJ,OAAOuC,kBAAoBvB,oBAAkBuF,EAAW8C,KAAKrJ,OAAOwC,sBACtF+D,EAAW8C,KAAKrJ,OAAOwC,sBAAwB6G,KAAKrJ,OAAOqX,qBAC1DtV,EAAgBsH,KAAKrJ,OAAQqM,EAAKvE,KAAMuB,KAAKrJ,OAAOiB,KAAK6F,4BAE1DuF,EAAKrE,IAAIlE,MAAMG,QAAU,SAM7BlE,EAAasJ,KAAKrJ,UAAY8C,EAAUuG,KAAKrJ,QAAS,CACtD,GAAIsX,GAAUjO,KAAKrJ,OACfuX,EAAYlO,KAAKrJ,OAAO8G,wBAAwBL,OAAO,SAAU0O,GACjE,MAAOzN,YAAS4P,EAAQpR,UAAWiP,KAASzN,WAAS4P,EAAQrR,gBAAiB6B,IAElF,IAAIyP,EAAU1W,OAAS,EAAG,CACtB,GAAIoD,GAAUsT,EAAU,GAAG9U,SAAW,YAAc,MACpD4J,GAAKrE,IAAIuL,aAAa,QAAS,YAActP,EAAU,MAI9CpC,YAAU,eAAgBwK,EAAKvE,OAE5C2O,YAAUpK,EAAKrE,KAAM,gBAErBqE,EAAKrE,IAAIqJ,cAAc,qBACvBhF,EAAKrE,IAAIuL,aAAa,gBAAiB,QAElClH,EAAKrE,IAAIqJ,cAAc,wBAC5BhF,EAAKrE,IAAIuL,aAAa,gBAAiB,SAEvClK,KAAKrJ,OAAOqX,mBAAqBhO,KAAKrJ,OAAOuC,gBACxCvB,oBAAkB8G,EAAK1F,cACxBiK,EAAKrE,IAAIlE,MAAMG,QAAU,SAGjCoF,KAAKrJ,OAAOyP,QLhEM,eKgEuBpD,KAK7CwK,EAAOvM,UAAUzB,WAAa,SAAUwD,GACpC,GAAKA,EAAKvE,KAAV,CAGA,GAEItE,GAIAgU,EANAvW,EAAOoI,KAAKrJ,OAAOiB,KACnB6G,EAAOuE,EAAKvE,KAGZ2P,EADczW,oBAAkB8G,EAAK4P,aACjB5P,EAAKrE,MAAQqE,EAAK4P,YACtCC,EAAkB,EAElB3O,EAASK,KAAKrJ,OAAO4X,eAAevL,EAAKrD,OAAOsJ,KAChDuF,EAAa/P,EAAK6M,aAClBmD,EAAgBzO,KAAKrJ,OAAOsI,kBAOhC,IAFI9E,EAJCxC,oBAAkB8G,EAAK1F,YAIhB0F,EAAKtE,MAHLsE,EAAK1F,WAAWoB,MAKxBvC,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,iBAAyC,QAArB4D,EAAKnD,aAC/E,mBADwGmD,EAAKnD,aACpE,WAArBmD,EAAKnD,cAA4BlI,oBAAkBqL,EAAKvD,KAAKuI,cAAc,gBAqD9FhI,KAAKyN,iBACVzN,KAAKyN,eAAiB,UAtD+F,CAMrH,IAAK,GALDnD,GAAYf,gBAAc,OAASC,UAAW,2BAC9CmF,EAAkBpF,gBAAc,QAChCC,UAAW,iBACXoF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBhE,EAAUK,YAAYgE,EAAgB5E,YAE1C,IAAI+E,GAAgBnX,oBAAkB8G,EAAKsQ,yBACNtQ,EAAKnF,gBAApCmF,EAAKsQ,uBAIX,IAHID,IAAiBnX,oBAAkB8G,EAAKlF,gBACxCuV,IAA8C,IAA7BrQ,EAAKlF,aAAa/B,SAEnCsX,EAAc,CACd1B,YAAUpK,EAAKvD,MAAO,gBACtB,IAAIuP,GAAazF,gBAAc,QAAUC,UAAW,YAChDyF,MAAS,EAETA,GADAjP,KAAKrJ,OAAOuC,cACHuF,EAAKrF,WACTzB,oBAAkB8G,EAAKuB,KAAKrJ,OAAOwC,sBAAwBsF,EAAKuB,KAAKrJ,OAAOwC,uBAC5E6G,KAAKrJ,OAAOqX,qBAGLvP,EAAKrF,WAAaV,EAAgBsH,KAAKrJ,OAAQ8H,EAAMuB,KAAKrJ,OAAOiB,KAAK6F,0BAEtF2P,YAAU4B,GAAa,EAAW,mBAAqB,sBACvDV,GAAmB,GACnBhE,EAAUK,YAAYqE,GACtBL,EAAgBlU,MAAMoP,MAAQ,MAC9ByE,GAAmB,EACnBhE,EAAUK,YAAYgE,EAAgB5E,kBAEjCqE,IAAQA,IAAQ3P,EAAKrE,SAE1BkU,GAAmB,GACnBhE,EAAUK,YAAYgE,EAAgB5E,aACtCO,EAAUK,YAAYgE,EAAgB5E,aAM1CoE,GAAc5E,gBAAc,QAAUC,UAAW,eAC7CxJ,KAAKrJ,OAAOuY,gBACZf,EAAY1T,MAAMoP,MAAQ,eAAiByE,EAAkB,OAEjElB,YAAUpK,EAAKvD,MAAO,iBAAmBtF,EAAQ,QAAUsE,EAAKrE,OAChE4F,KAAKmP,eAAenM,EAAMmL,EAAa7D,GACvCA,EAAUK,YAAYwD,GACtBnL,EAAKvD,KAAKkL,YAAYL,GAkB1B,GAbImE,EAAgBzO,KAAKrJ,OAAOyI,iBAAmBqP,EAAgB,GAC/D7W,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASwF,EAC9CrB,YAAUpK,EAAKvD,MAAO,iBAAmBtF,EAAQ,QAAUsE,EAAKrE,OAE3DqU,EAAgBzO,KAAKrJ,OAAOyI,iBAAmBqP,EAAgB,IACnE7W,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASwF,GACxC7W,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASwF,EAAgB,GACrErB,YAAUpK,EAAKvD,MAAO,iBAAmBtF,EAAQ,QAAUsE,EAAKrE,OAE3DqU,IAAkBzO,KAAKrJ,OAAOyI,iBAAmBqP,EAAgB,GACtE7W,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAAkB,GAC5EgO,YAAUpK,EAAKvD,MAAO,iBAAmBtF,EAAQ,QAAUsE,EAAKrE,QAE/DzC,oBAAkBgI,IAAWA,EAAOlI,eACrCuI,KAAKrJ,OAAOyY,OAAO,iBAAkBpM,GACjChD,KAAKrJ,OAAOuY,eAAe,CAC3B,GAAIG,GAAkBrM,EAAKvD,KAAKiG,iBAAiB,YAAY,EAE7D4I,IADYgB,SAASD,EAAgB5U,MAAMoP,MAAO,IAElDyE,GAAmB,IAEfH,EADAvW,EAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAC5C4D,EAAKvD,KAAKuI,cAAc,eAGxBhF,EAAKvD,KAAKuI,cAAc,oBAE9BvN,MAAMoP,MAAQ,eAAiByE,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUpK,EAAKvD,MAAO,gBACtB,IAAI8P,GAAc/W,YAAUwK,EAAKrD,OAAO0E,MAAOrB,EAAKvE,KACV,OAA1CuE,EAAKvD,KAAKuI,cAAc,eACpBhF,EAAKvD,KAAKuI,cAAc,eAAeyC,UAAY8E,EAAcvM,EAAKvD,KAAKgL,UAAY8E,EAE3F5X,oBAAkBqI,KAAKrJ,OAAO6Y,cAC9BxP,KAAKrJ,OAAOyP,QLlLG,gBKkL2BpD,KAGlDwK,EAAOvM,UAAUkO,eAAiB,SAAUnM,EAAMmL,EAAa7D,GAC3D,GAAImF,GAAazP,KAAKrJ,OAAOY,QAAQyI,KAAKrJ,OAAOyI,iBAE7CsQ,EAAW1M,EAAKrD,OAAOxF,KACvBxC,qBAAkB8X,EAAWpL,QAC7BrB,EAAKvD,KAAKyK,aAAa,gBAAiBwF,EAAW,IAEnDD,EAAWpL,QAAUrB,EAAKrD,OAAO0E,OAAU1M,oBAAkB8X,EAAWE,WAAcjT,eACtFsG,EAAKrD,OAAOgQ,SAAWF,EAAWE,SAClC3M,EAAKrD,OAAiB,WAAIiQ,mBAAiB5M,EAAKrD,OAAOgQ,UACvD3M,EAAKvD,KAAK8F,UAAUqE,IAAI,kBAE5B,IAAIiG,GAAwD,MAA1C7M,EAAKvD,KAAKuI,cAAc,eACtChF,EAAKvD,KAAKuI,cAAc,eAAeyC,UAAYzH,EAAKvD,KAAKgL,SACjE,IAAsC,gBAA1BzH,GAAKrD,iBAAiCK,KAAKyN,eACnDqC,iBAAe3B,EAAanO,KAAKyN,gBACjCzN,KAAKyN,eAAiB,KACtBzK,EAAKvD,KAAKgL,UAAY,OAErB,IAAIzH,EAAKvD,KAAK8F,UAAUC,SAAS,kBAAmB,CACrD,GAAInN,GAAM2K,EAAKvD,KAAKsQ,SAASvY,OACzBwY,EAAShQ,KAAKrJ,OAAOsZ,QAAQC,GAAKlN,EAAKrD,OAAOsJ,GAClD,IAAIwG,EAAWpL,QAAUrB,EAAKrD,OAAO0E,OAAU1M,oBAAkB8X,EAAWE,WAAcjT,aAqBtF,KAAa,EAAOrE,EAAKA,EAAM2K,EAAKvD,KAAKsQ,SAASvY,OAC9C2W,EAAYxD,YAAY3H,EAAKvD,KAAKsQ,SADzB,QArBqF,CAGlG,GAAI/P,KAAKrJ,OAAOwZ,QACZnN,EAAKrD,OAAiB,WAAEqD,EAAKvE,KAAMuB,KAAKrJ,OAAQ,WAAYqZ,EAAQ,KAAM,KAAM7B,GAC5ExW,oBAAkBqI,KAAKrJ,OAAOiB,KAAY,WAC1CoI,KAAKrJ,OAAOiB,KAAY,QAAIoI,KAAKrJ,OAAc,SAEnDqJ,KAAKrJ,OAA2B,2BAE/B,CACD,GACIyZ,OAAS,EACbA,GAASpN,EAAKrD,OAAiB,WAAEtD,UAASlC,MAAS,IAAM6I,EAAKvE,MAAOuB,KAAKrJ,OAAQ,WAAYqZ,EAAQhQ,KAAKrJ,OAAU,kBACrHmZ,iBAAe3B,EAAaiC,SAEzBpN,GAAKrD,OAAOgQ,eACZ3M,GAAKrD,OAAiB,WAC7BqD,EAAKvD,KAAKgL,UAAY,QAS1B0D,GAAY1D,UAAYoF,EACxB7M,EAAKvD,KAAKgL,UAAY,IAG9B+C,EAAOvM,UAAUyM,qBAAuB,SAAU1K,GAC9ChD,KAAKyN,eAAiBzK,EAAK2M,UAE/BnC,EAAOvM,UAAU0M,oBAAsB,SAAU3K,GAG7ChD,KAAKrJ,OAAc,QAAIqM,EACvBhD,KAAKrJ,OAAOyY,OAAO,sBAAuBpP,KAAKrJ,OAAc,SAC7DqJ,KAAKrJ,OAA2B,wBAEpC6W,EAAOvM,UAAU8F,QAAU,WACvB/G,KAAKrJ,OAAOiB,KAAKgQ,IAAI,kBAAmB5H,KAAK0N,sBAC7C1N,KAAKrJ,OAAOiB,KAAKgQ,IAAI,sBAAuB5H,KAAK2N,sBAE9CH,KCvPP6C,EAAkC,WAClC,QAASA,GAAiBzY,GACtBoI,KAAKsQ,aAAe,eACpBtQ,KAAKrJ,OAASiB,EACdoI,KAAKuQ,eACLvQ,KAAKwQ,WACLxQ,KAAKyQ,iBACLzQ,KAAK0Q,aAAe,EACpB1Q,KAAK2Q,cACL3Q,KAAK4Q,cAAe,EACpB5Q,KAAKoH,mBACLpH,KAAK6Q,eACL7Q,KAAK/E,iBAAmBtD,oBAAkBqI,KAAKrJ,OAAOiG,iBAsiB1D,MAjiBAyT,GAAiBpP,UAAUmG,iBAAmB,WAC1CpH,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAK8Q,uBAAwB9Q,MACjEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,gBAAiBrH,KAAK+Q,aAAc/Q,MACxDA,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKgR,WAAYhR,MAChDA,KAAKrJ,OAAO0Q,GNYM,eMZkBrH,KAAKiR,qBAAsBjR,MAC/DA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAKkR,cAAelR,OAKxDqQ,EAAiBpP,UAAUyG,oBAAsB,WACzC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,INEM,eMFmB5H,KAAKiR,sBAC1CjR,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAK8Q,wBAC1C9Q,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKgR,YACrChR,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAKkR,eACtClR,KAAKrJ,OAAOiB,KAAKgQ,IAAI,gBAAiB5H,KAAK+Q,gBAO/CV,EAAiBpP,UAAU8F,QAAU,WACjC/G,KAAK0H,uBAGT2I,EAAiBpP,UAAUkQ,SAAW,WAClC,MAAMnR,MAAKrJ,OAAOC,qBAAsBC,gBAW5CwZ,EAAiBpP,UAAUmQ,kBAAoB,SAAU3S,GACrD,GAAI+F,GAAQxE,IACZA,MAAKrJ,OAAOwG,SAAyC,IAA7B7E,OAAOC,KAAKkG,GAAMjH,QAAkBwI,KAAKrJ,OAAOC,qBAAsBC,kBAC1FmJ,KAAKrJ,OAAOC,WAChBoJ,KAAKrJ,OAAOuG,aAEZ,IAAKxG,EAAasJ,KAAKrJ,UAAY8C,EAAUuG,KAAKrJ,SAAY8H,YAAgB5H,kBAAiB4H,YAAgBrC,QAAQ,CACnH,GAAI1C,GAAKsG,KAAKrJ,OAAOC,UACrB,IAAIoJ,KAAKrJ,OAAOiG,gBAAiB,CAG7B,GAFAoD,KAAKrJ,OAAO0a,MAAQ1Z,oBAAkBqI,KAAKrJ,OAAO0a,OAC9C,GAAIC,SAAUtR,KAAKrJ,OAAO0a,MAC1BrR,KAAKrJ,OAAOiG,gBAAiB,CAC7B,GAAI2U,GAAYvR,KAAKrJ,OAAO0a,MAAMG,OAAOpU,OAAO,SAAUqU,GAAS,MAAqB,cAAdA,EAAM3Z,KAC5EkI,MAAKrJ,OAAOuC,gBAAkBqY,EAAU/Z,SACxCwI,KAAKrJ,OAAO0a,MAAMK,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS,MAC9DoD,KAAKrJ,OAAO0a,MAAMM,UAAU,YAAa3R,KAAKrJ,OAAOkG,YAI7D,IAAKmD,KAAKrJ,OAAOib,kBAA6D,kBAAxC5R,KAAKrJ,OAAOC,WAAsB,aAA0BoJ,KAAKrJ,OAAmB,gBAAI,CAC1H,GAAIkb,GAAM7R,KAAKrJ,OAAO0a,MAAMS,OAC5BD,GAAIE,YACJF,EAAMA,EAAIpL,QAAQzG,KAAKrJ,OAAOiG,mBAC1BxF,iBAAkB,EACtBsC,EAAGsY,aAAaH,GAAKI,KAAK,SAAU5U,GAChCmH,EAAM+L,YAAc2B,WAASC,SAAS9U,EAAE+S,OAAQ5L,EAAM7N,OAAOiG,iBAAiB,GAIlE,IAHFpE,YAAU,sBAAuBgM,EAAM7N,QAAQyG,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE+U,YAAYC,aACtB7a,SAEC8a,WAAS,+BAA+B,EAAM9N,EAAM7N,QAC/CgB,oBAAkB6M,EAAM+N,mBACzBD,WAAS,UAAU,EAAO9N,EAAM+N,iBAChClU,WAAS,oBAAqBmG,EAAM7N,QAAQ6b,mBAAmBhO,EAAM+N,iBACrE/N,EAAM+N,gBAAkB,MAE5B/N,EAAM7N,OAAOiB,KAAK6a,uBAM7BhU,aAAgBrC,QACrB4D,KAAK0S,gBAAgBjU,IAG7B4R,EAAiBpP,UAAUyR,gBAAkB,SAAUjU,GAGnD,GAFAuB,KAAKyQ,iBACLzQ,KAAKwQ,WACAxQ,KAAKrJ,OAAOkG,UAIb,IAASvF,EAAI,EAAGA,EAAIgB,OAAOC,KAAKkG,GAAMjH,OAAQF,IAAK,CAC/C,GAAIqb,GAAWlU,EAAKnH,EACpB0I,MAAKyQ,cAAchY,KAAK4D,YAAWsW,IAC9Bhb,oBAAkBgb,EAAS3S,KAAKrJ,OAAOkG,aACxCmD,KAAKwQ,QAAQ/X,KAAKka,EAAS3S,KAAKrJ,OAAOkG,gBAP/CmD,MAAKyQ,cAAgBhS,CAWzB,IAAIuB,KAAK/E,gBAAiB,CAItB,IAAK,GAHD2X,MACAC,EAAc,GAAIhc,eAAYmJ,KAAKyQ,eAAeqC,cAAa,GAAIxB,UAClEyB,MAAM/S,KAAKrJ,OAAOiG,kBACdtF,EAAI,EAAGA,EAAIub,EAAYrb,OAAQF,IAAK,CACzC,GAAI0b,GAAYH,EAAYvb,GACxB6C,EAAQ6F,KAAKwQ,QAAQhS,QAAQwU,EAAUlb,IAC3C,KAAKH,oBAAkBqb,EAAUlb,MACzBqC,GAAS,EADjB,CAEQ,GAAI6M,GAAagM,EAAgB,KACjChT,MAAKyQ,cAActW,GAAO6F,KAAKrJ,OAAOoG,cAAgBiK,MAI9D4L,GAASna,KAAKuJ,MAAM4Q,EAAUI,EAAUC,OAE5CjT,KAAKyQ,cAAgBzQ,KAAKkT,oBAAoBN,GAElD,GAAKta,OAAOC,KAAKyH,KAAKyQ,eAAejZ,OAMjCwI,KAAKmT,cAAcnT,KAAKyQ,mBANiB,CACzC,GACI2C,KAAkBpT,KAAKrJ,OAAOC,qBAAsBC,iBAAgBmJ,KAAKrJ,OAAc,OAC3FqJ,MAAKrJ,OAAOwG,SAAWiW,EAAiBpT,KAAKrJ,qBAKjDqJ,KAAK0Q,aAAe,GAYxBL,EAAiBpP,UAAUiS,oBAAsB,SAAUN,GAEvD,IADA,GAAIxC,MACGpQ,KAAKyQ,cAAcjZ,OAAS,GAAKob,EAASpb,OAAS,GAAG,CACzD,GAAI2C,GAAQyY,EAASpU,QAAQwB,KAAKyQ,cAAc,KACjC,IAAXtW,EACA6F,KAAKyQ,cAAc4C,SAGnBjD,EAAO3X,KAAKuH,KAAKyQ,cAAc4C,SAC/BT,EAAS9V,OAAO3C,EAAO,IAG/B,MAAOiW,IAMXC,EAAiBpP,UAAU6P,uBAAyB,SAAU9N,GAC1D,GAAI7K,GAAU6K,EAAKoN,MAGnB,IAAKpQ,KAAKrJ,OAAOib,iBAAoB5R,KAAKuQ,YAAY/Y,QACP,kBAAxCwI,KAAKrJ,OAAOC,WAAsB,cAA0BoJ,KAAKrJ,OAAmB,gBAAOqJ,KAAKrJ,OAAO2c,kBAK1G,GAA8C,kBAAxCtT,KAAKrJ,OAAOC,WAAsB,cAA0BoJ,KAAKrJ,OAAmB,gBAAOqJ,KAAKrJ,OAAO2c,kBAgBpG3b,oBAAkBQ,IACnB6H,KAAKoR,kBAAkBjZ,OAhB3B,KAAK,GAAI2T,GAAM,EAAGA,EAAM3T,EAAQX,OAAQsU,IAChCnU,oBAAkBQ,EAAQ2T,GAAK3R,SAC/BhC,EAAQ2T,GAAKzR,SAAWgC,YAAWlE,EAAQ2T,IAC3C3T,EAAQ2T,GAAK7S,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACxDoC,WAAS,sBAAwBna,EAAQ2T,GAAK7S,SAAUd,EAAQ2T,GAAM9L,KAAKrJ,QAC3EwB,EAAQ2T,GAAK1R,MAAQ,EACrBjC,EAAQ2T,GAAK3R,MAAQqZ,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bvb,EAAQ2T,GAAK9L,KAAKrJ,OAAOib,mBAAuF,IAAnE5R,KAAKuQ,YAAY/R,QAAQrG,EAAQ2T,GAAK9L,KAAKrJ,OAAOkG,eAChG1E,EAAQ2T,GAAKxS,iBAAkB,GAEnCnB,EAAQ2T,GAAK3B,cAAgB,eAfzCnK,MAAKuS,gBAAkBvP,EACvBsP,WAAS,UAAU,EAAMtP,EAwB7BA,GAAKoN,OAAkD,kBAAxCpQ,KAAKrJ,OAAOC,WAAsB,cAA0BoJ,KAAKrJ,OAAmB,iBAAMgB,oBAAkBQ,IACpH6H,KAAKrJ,OAAO2c,kBAAoBtT,KAAKrJ,OAAOwG,SAAWhF,EAC9D6H,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,IAMxCqN,EAAiBpP,UAAUgQ,qBAAuB,SAAU0C,EAAYC,GACpE,GAAIC,GAAW7T,KAAKrJ,OAAOkI,SAC3B,IAAImB,KAAKrJ,OAAO6Y,YAAa,CACzB,GAAIvK,GAAOjF,KAAKrJ,OAAOmd,kBAAkB7O,IACzC4O,MAAcpO,MAAM7C,KAAKqC,GAE7B,GAAIyG,EAGJ,IAAIiI,EAAW1O,KAAKzN,OAAS,EAAG,CACvBoc,IACDD,EAAWhb,OAAOS,UAAW,EAEjC,KAAK,GAAI9B,GAAI,EAAGA,EAAIqc,EAAW1O,KAAKzN,OAAQF,IAAK,CAQ7C,GAPIoF,cAAcsD,KAAKrJ,OAAOod,kBAC1B1J,eAAasJ,EAAW1O,KAAK3N,IAAK,sBAClC8V,YAAUuG,EAAW1O,KAAK3N,IAAK,sBAG/Bqc,EAAW1O,KAAK3N,GAAGmD,MAAMG,QAAU,YAElC8B,cAAuD,kBAAxCsD,KAAKrJ,OAAOC,WAAsB,cAA0BoJ,KAAKrJ,OAAmB,gBACjGqJ,KAAKrJ,OAAO2c,kBAAmB,CAClC,GAAIU,GAAYL,EAAW1O,KAAK3N,GAAG2c,uBAAuB,sBAAsB,EAChFvI,GAAc1L,KAAKrJ,OAAO6Y,YAAcxP,KAAKrJ,OAAOiB,KAAK6F,wBAAwBkW,EAAW1O,KAAK3N,GAAGuP,UAChG7G,KAAKrJ,OAAOiB,KAAKsc,oBAAoBP,EAAW1O,KAAK3N,GAAG8R,aAAa,aAAa3K,MACjF9G,oBAAkBqc,IAActI,EAAYtS,WAC7CgU,YAAU4G,GAAY,oBACtB3J,eAAa2J,GAAY,sBAE7B,IAAIG,OACJA,EAAYN,EAASzW,OAAO,SAAUqE,GAClC,MAAOA,GAAEuG,cAAc,kBAAoB0D,EAAYvR,MAAQ,SAAWuR,EAAYtR,MAAQ,OAEpF5C,QAAUkU,EAAYtS,UAChC4G,KAAKiR,sBAAuBtY,OAAQ+S,EAAazG,KAAMkP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,GAAIC,GAAcV,EAAW1O,KAAK3N,GAAG0Q,cAAc,uBAC9CrQ,qBAAkB0c,IACnBrU,KAAKrJ,OAAOiB,KAAK0c,gBAAgBrF,OAAOoF,QAKhDrU,MAAKuU,sBAAuB5b,OAAQgb,EAAWhb,OAAQsM,KAAM0O,EAAW1O,KAAMmP,UAAWT,EAAWS,aAG5G/D,EAAiBpP,UAAUsT,qBAAuB,SAAUZ,EAAYC,GACpE,GAAIpP,GAAQxE,KACRgD,GAASrE,IAAKgV,EAAWS,UAAW3V,KAAMkV,EAAWhb,QACrDe,EAAKsG,KAAKrJ,OAAOC,WACjBib,EAAM7R,KAAKrJ,OAAOiB,KAAK4c,gBAAgBC,gBACvCC,EAAc7C,EAAIE,QAAQ3U,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEsX,IAA4B,YAATtX,EAAEsX,IAClF9C,GAAIE,QAAU2C,EACd7C,EAAIza,iBAAkB,EACtBya,EAAIH,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS+W,EAAWhb,OAAOqH,KAAKrJ,OAAOkG,YAC9E+X,cAAY5U,KAAKrJ,OAAOsZ,SACxBvW,EAAGsY,aAAaH,GAAKI,KAAK,SAAU5U,GAChC,GAAIjF,GAAQoM,EAAM7N,OAAOiB,KAAK+E,gBAC1BkY,EAAMzc,EAAMoG,QAAQmV,EAAWhb,SACtB,IAATkc,GACArQ,EAAM7N,OAAOiB,KAAKkd,gBAAgBrI,QAAQ,SAAUxH,GAC5CA,EAAKxG,KAAKxF,WAAa0a,EAAWhb,OAAOM,WACzC4b,EAAM5P,EAAK9K,QAIvB,IAAI4a,GAAYvc,YAAU,mBAAoB6E,GAC1C+S,EAAS/S,EAAE+S,MACfuD,GAAWhb,OAAOY,aAAe6W,CACjC,KAAK,GAAI3O,GAAI,EAAGA,EAAI2O,EAAO5Y,OAAQiK,IAAK,CACpC2O,EAAO3O,GAAGpH,SAAWgC,YAAW+T,EAAO3O,IACvC2O,EAAO3O,GAAGrH,MAAQuZ,EAAWhb,OAAOyB,MAAQ,EAC5CgW,EAAO3O,GAAGtH,MAAQqZ,KAAKC,KAAqB,IAAhBD,KAAKE,SACjC,IAAIxW,GAAab,YAAWsX,EAAWhb,cAChCuE,GAAW3D,aAClB6W,EAAO3O,GAAG1I,WAAamE,EACvBkT,EAAO3O,GAAGnD,eAAiBqV,EAAWhb,OAAOM,SAC7CmX,EAAO3O,GAAGxI,SAAWsa,SAAO/O,EAAM7N,OAAOsZ,QAAQC,GAAK,UACtDE,EAAO3O,GAAG0I,cAAgB,UAC1BmI,WAAS,sBAAwBlC,EAAO3O,GAAGxI,SAAUmX,EAAO3O,GAAI+C,EAAM7N,SAEjEyZ,EAAO3O,GAAG+C,EAAM7N,OAAOib,mBAAsF,IAAlEpN,EAAM+L,YAAY/R,QAAQ4R,EAAO3O,GAAG+C,EAAM7N,OAAOkG,aACxFkY,IAAcA,EAAUtT,KAC7B2O,EAAO3O,GAAGnI,iBAAkB,EAC5B8W,EAAO3O,GAAGrI,UAAW,GAEzBhB,EAAM0E,OAAO+X,EAAMpT,EAAI,EAAG,EAAG2O,EAAO3O,IAMxC,GAJA6Q,WAAS,SAAUla,EAAOiF,GAC1BiV,WAAS,SAAU,sBAAuBjV,GAC1CmH,EAAM7N,OAAOyP,QN3SG,iBM2S4B/I,GAC5CoV,cAAYjO,EAAM7N,OAAOsZ,SACrBzL,EAAM7N,OAAOiB,KAAKod,WAAWxd,OAAS,IAAMgN,EAAM7N,OAAOyH,qBAAsB,CAC/E,GAAI6W,GAAYzc,YAAU,QAAS6E,EAKnC,IAHI1F,oBAAkBsd,KAClBA,EAAY5W,WAAS,yBAA0BmG,EAAM7N,QAAQue,eAAe,GAAI5D,YAE/E3Z,oBAAkBsd,GAAY,CAC/B,GAAIE,GAAeF,EAAUlD,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAET,IACpEtX,GAAU,OAAImH,EAAM7N,OAAO0e,cAAcC,sBAAsBH,EAAc9X,EAAU,QAAG,IAGlGA,EAAEgO,MAAQ7G,EAAM7N,OAAOiB,KAAKkW,aAAayH,iBACzC,IAAIC,KACAhR,GAAM7N,OAAOyH,sBACboG,EAAMiR,oBAAoBD,GAE9BnX,WAAS,oBAAqBmG,EAAM7N,QAAQ6b,mBAAmBnV,EAAGmY,GAClEhR,EAAM7N,OAAOyP,QN5SH,WM4S4BpD,MAG9CqN,EAAiBpP,UAAUwU,oBAAsB,SAAUD,GACvDA,EAAY3V,YAAc,UAC1ByS,WAAS,oBAAoB,EAAMkD,EACnC,IAAIE,GAAgBrX,WAAS,qBAAsB2B,KAAKrJ,QACpDgf,EAActX,WAAS,cAAeqX,GACtCE,EAAWvX,WAAS,WAAYqX,EAChCC,GAAYE,UAAY7V,KAAKrJ,OAAOiB,KAAKkW,aAAagI,cAAgBH,EAAYI,SAASC,OAC3FhW,KAAKrJ,OAAOiB,KAAKkW,aAAagI,YAAcF,EAASI,OAG7D3F,EAAiBpP,UAAU8P,aAAe,WACtC/Q,KAAK4Q,cAAe,GAExBP,EAAiBpP,UAAUkS,cAAgB,SAAU1U,EAAMwX,GAEvD,IAAK,GADDC,MACK5e,EAAI,EAAGe,EAAMC,OAAOC,KAAKkG,GAAMjH,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,GAAI6e,GAAc9Z,YAAWoC,EAAKnH,GAClC6e,GAAY9b,SAAWoE,EAAKnH,EAC5B,IAAI8C,GAAQ,CAyBZ,IAxBA4F,KAAK0Q,cACAyF,EAAY3Z,eAAe,WAC5B2Z,EAAYhc,MAAQ6F,KAAK0Q,eAExB/Y,oBAAkBwe,EAAYnW,KAAKrJ,OAAOoG,gBAC1CoZ,EAAYnW,KAAKrJ,OAAOib,kBAAoBxa,EAAgB4I,KAAKrJ,WAClEwf,EAAY7c,iBAAkB,EAC1B0G,KAAKrJ,OAAOqX,oBAAsBrW,oBAAkBqI,KAAKrJ,OAAOkN,kBAC7DlM,oBAAkBwe,EAAYnW,KAAKrJ,OAAOoG,eAC7CoZ,EAAY/c,UAAW,EAGvB+c,EAAY/c,WAAYzB,oBAAkBwe,EAAYnW,KAAKrJ,OAAOwC,sBAC5Dgd,EAAYnW,KAAKrJ,OAAOwC,qBAGjCgd,EAAY3Z,eAAe,WAC5B2Z,EAAYhc,OAAQgc,EAAY7c,gBAAkB0G,KAAK0Q,cAEvD1Q,KAAK/E,iBAAmBtD,oBAAkBwe,EAAYnW,KAAKrJ,OAAOiG,mBAClEoD,KAAKrJ,OAAOuG,WAAWzE,KAAK0d,GAEhCA,EAAYld,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACvDoC,WAAS,sBAAwB6D,EAAYld,SAAUkd,EAAanW,KAAKrJ,SACpEgB,oBAAkBse,GAAgB,CACnC,GAAI/Y,GAAab,YAAW4Z,SACrB/Y,GAAW3D,mBACX2D,GAAW8C,KAAKrJ,OAAOoG,cAC1BiD,KAAK/E,uBACEiC,GAAW7C,SAAS2F,KAAKrJ,OAAOoG,cAE3CoZ,EAAYpd,WAAamE,EACzBiZ,EAAY7X,eAAiBpB,EAAWjE,SACxCmB,EAAQ6b,EAAc7b,MAAQ,EAYlC,GAVK+b,EAAY3Z,eAAe,WAC5B2Z,EAAY/b,MAAQA,GAExB+b,EAAYhM,cAAgB,WACxBxS,oBAAkBwe,EAAYnW,KAAKrJ,OAAOiG,mBAAqBuZ,EAAYpd,aAC3EiH,KAAKrJ,OAAOwG,SAAS1E,KAAK0d,GAEzBnW,KAAK/E,iBAAyC,IAAtBkb,EAAY/b,OACrC4F,KAAKrJ,OAAOuG,WAAWzE,KAAK0d,IAE3Bxe,oBAAkBwe,EAAYnW,KAAKrJ,OAAOoG,eAAiBoZ,EAAYnW,KAAKrJ,OAAOoG,cAAcvF,QAAS,CAC3G,GAAImB,GAASqH,KAAKmT,cAAcgD,EAAYnW,KAAKrJ,OAAOoG,cAAeoZ,EACvEA,GAAY5c,aAAeZ,EAE/Bud,EAAazd,KAAK0d,GAEtB,MAAOD,IAMX7F,EAAiBpP,UAAUiQ,cAAgB,SAAUlO,GACjD,GAIIoT,GAJAC,EAAW7d,YAAU,WAAYwK,GACjCsT,EAAa9d,YAAU,aAAcwK,GACrCuT,EAAa/d,YAAU,aAAcwK,GACrCwT,EAAahe,YAAU,aAAcwK,GAErCyT,EAAaje,YAAU,aAAcwK,GACrCnD,EAAcrH,YAAU,cAAewK,GACvC0T,EAAale,YAAU,OAAQwK,GAC/BzH,EAAS/C,YAAU,SAAUwK,GAC7B2T,EAAgBF,EAChBG,EAAuB5W,KAAKrJ,OAAO6E,0BAA0B,GAC7Dqb,EAAYre,YAAU,OAAQme,EAC5Bhf,qBAAkBgf,IAAqBhf,oBAAkBgf,EAAcpb,SAAsC,QAAzBob,EAAcpb,QAC/F5D,oBAAkBgf,EAAclY,QAAU9G,oBAAkBgf,EAAclY,KAAKmY,MACpFD,EAAclY,KAAKmY,GAAwB5T,EAAKoN,OAAOuG,EAAcxc,OAAOyc,GAC5EC,EAAUxc,SAASuc,GAAwB5T,EAAKoN,OAAOuG,EAAcxc,OAAOyc,MAE1Ejf,oBAAkB8e,IAAene,OAAOC,KAAKke,GAAYjf,QAA2B,SAAhBqI,KACtEA,EAAcA,GAA4B4W,EAAW5W,YACrD6W,EAAaA,GAA0Ble,YAAU,OAAQie,GACzDlb,EAASA,GAAkB/C,YAAU,SAAUie,GACT,UAAlCzW,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAK1E,aAAe0E,KAAKrJ,OAAOiB,KAAKoE,WAAWC,mBAEhD+D,KAAKrJ,OAAOmgB,aACZ9W,KAAK+W,aAAaL,EAAYnb,EAAQsE,GAU9C,IAAImX,IANAZ,EADAC,IAAa1e,oBAAkB2e,GACrBA,EAGAlf,EAAgB4I,KAAKrJ,QAAU0H,WAAS,SAAU2B,KAAKrJ,OAAOiB,KAAKhB,YACvEoJ,KAAKrJ,OAAOiB,KAAKhB,qBAEMC,eAAcuf,EAAQxf,WAAW8E,KAAO0a,EACrE/K,EAAQjU,EAAgB4I,KAAKrJ,QAAU0H,WAAS,QAAS2B,KAAKrJ,OAAOC,YACnEogB,EAAQxf,MACd,IAAKwI,KAAKrJ,OAAOiB,KAAKI,gBAAkBgI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,GAAIqa,GAAM,GAAIP,SACV2D,EAAYzc,YAAU,QAASwK,EAC/BrL,qBAAkBsd,KAClBA,EAAY,GAAI3D,SAChB2D,EAAY5W,WAAS,yBAA0B2B,KAAKrJ,QAAQsgB,YAAYhC,GACxEA,EAAY5W,WAAS,yBAA0B2B,KAAKrJ,QAAQugB,YAAYjC,GAE5E,IAAIkC,GAAYlC,EAAUlD,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,YAATA,EAAET,KAC7DyC,EAAYnC,EAAUlD,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,aAATA,EAAET,IACjE9C,GAAIE,QAAUoF,EAAU3d,OAAO4d,EAC/B,IAAIC,GAAe,GAAIxgB,eAAYmgB,GAASlE,aAAajB,EAIzD,IAHA7R,KAAKrJ,OAAOyY,OAAO,oBAAsB3Q,KAAM4Y,IAC/CL,EAAUhX,KAAK6Q,YAAYT,OAC3BpQ,KAAK6Q,YAAYT,OAAS,KACtBpQ,KAAKrJ,OAAOiB,KAAKod,WAAWxd,OAAS,EAAG,CACpC6Z,EAAQ7Y,YAAU,QAASwK,EAI/B,IAHIrL,oBAAkBsd,KAClBA,EAAY5W,WAAS,yBAA0B2B,KAAKrJ,QAAQue,eAAe,GAAI5D,YAE9E3Z,oBAAkB0Z,GAAQ,CACvB8D,EAAe9D,EAAMU,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAET,IAChEqC,GAAUhX,KAAKrJ,OAAO0e,cAAcC,sBAAsBH,EAAc6B,GAAS,KAI7F,GAAIhX,KAAKrJ,OAAOiB,KAAKod,WAAWxd,QAA2D,IAAjDwI,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQC,QACtB,IAAnDwI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiBwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpGyd,EAAYzc,YAAU,QAASwK,EAC/BrL,qBAAkBsd,KAClBA,EAAY5W,WAAS,yBAA0B2B,KAAKrJ,QAAQue,eAAe,GAAI5D,UAE/E6D,GAAeF,EAAUlD,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAET,IACpEqC,GAAUhX,KAAKrJ,OAAO0e,cAAcC,sBAAsBH,EAAcnV,KAAKrJ,OAAOwG,UAAU,GAElG,GAAI6C,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQC,OAAS,GAAKwI,KAAK4Q,aAAc,CACvE5Q,KAAK4Q,cAAe,CACpB,IAAI1T,OAAa,EACjBA,GAEa8C,KAAKrJ,OAAOuG,UAIzB,KAAK,GAFDmU,GAAQ7Y,YAAU,QAASwK,GAC3BsU,EAAS,GAAIhG,SACRiG,EAAMvX,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQC,OAAS,EAAG+f,GAAO,EAAGA,IAAO,CAC9E,GAAIvO,GAAMhJ,KAAKrJ,OAAOiB,KAAK4f,iBAAiBxX,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQggB,GAAKlT,OACnFoT,EAAUzO,EAAI0O,cAAgBje,EAAUuG,KAAKrJ,QAC7CqS,EAAI0O,aAAaC,KAAK3O,GACtBhJ,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQggB,GAAKK,SAC/CN,GAAOO,OAAO7X,KAAKrJ,OAAOiB,KAAK2G,aAAahH,QAAQggB,GAAKlT,MAAOoT,GAEpE,GAEIK,IAAanc,aAFE,GAAI9E,eAAYqG,GAAY4V,aAAawE,GAEfD,aAAcL,EAASM,OAAQA,EAM5E,IALAtX,KAAKrJ,OAAOyY,OAAO,aAAc0I,GACjCd,EAAUc,EAASnc,aACnBqE,KAAK6Q,YAAYT,OAAS,KAC1BpQ,KAAK2Q,WAAaqG,EAClBhX,KAAKrJ,OAAOyY,OAAO,kBACfpP,KAAKrJ,OAAOiB,KAAKod,WAAWxd,OAAS,IAAMG,oBAAkB0Z,GAAQ,CACrE,GAEI8D,GADU3c,YAAU,QAASwK,GACN+O,QAAQ3U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAET,IAClEqC,GAAUhX,KAAKrJ,OAAO0e,cAAcC,sBAAsBH,EAAcnV,KAAK2Q,YAHhE,IAMrBtF,EAAQjU,EAAgB4I,KAAKrJ,QAAU0H,WAAS,QAAS2B,KAAKrJ,OAAOC,YAC/DogB,EAAQxf,MACd,IAAIugB,GAAO/X,KAAKgY,OAAOhB,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAYvT,EACzEgU,GAAUe,EAAK3H,OACf/E,EAAQ0M,EAAK1M,MACbrI,EAAKoN,OAAS4G,EACdhU,EAAKqI,MAAQA,EACbrL,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,IAExCqN,EAAiBpP,UAAU+W,OAAS,SAAUhB,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAYvT,IACxFhD,KAAKrJ,OAAOkX,aAAiBwI,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1BxW,KAAKrJ,OAAOshB,WAM1BjY,KAAKrJ,OAAOyH,sBAA0BiY,GAA2B,gBAAfE,GAClB,SAAlClY,WAAS,cAAe2E,KAC3BhD,KAAKrJ,OAAOyY,ON5eG,iBM4e4BgB,OAAQ4G,EAAS3L,MAAOA,EAAOoL,WAAYpY,WAAS,aAAc2E,KAC7GgU,EAAUhX,KAAK6Q,YAAYT,OAC3B/E,EAAQrL,KAAK6Q,YAAYxF,QATzBrL,KAAKrJ,OAAOyY,ONreG,iBMqe4BgB,OAAQ4G,EAAS3L,MAAOA,IACnE2L,EAAUhX,KAAK6Q,YAAYT,OAC3B/E,EAAQjU,EAAgB4I,KAAKrJ,QAAU0H,WAAS,QAAS2B,KAAKrJ,OAAOC,YAC/DoJ,KAAK6Q,YAAYxF,MAS3B,MAAoB,IAAfmL,GAAuBxT,EAAgB,cAAgC,aAA1BhD,KAAKrJ,OAAOshB,UAA0B,CAEpF,IAAK,GADDC,MACK5gB,EAAI,EAAGA,EAAI0f,EAAQxf,OAAQF,IACboB,EAAgBsH,KAAKrJ,OAAQqgB,EAAQ1f,GAAI0I,KAAKrJ,OAAOuG,aAEpEgb,EAAczf,KAAKue,EAAQ1f,GAInC+T,IADA2L,EAAUkB,GACM1gB,OAGpB,OADc4Y,OAAQ4G,EAAS3L,MAAOA,IAM1CgF,EAAiBpP,UAAU+P,WAAa,SAAUmH,GAC9CnY,KAAK6Q,YAAcsH,GAEvB9H,EAAiBpP,UAAU8V,aAAe,SAAUL,EAAYnb,EAAQsE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKrJ,OAAOyY,ONzfA,cMyf4BlV,MAAOwc,EAAYnb,OAAQA,GAAUsE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKrJ,OAAOmF,aAAaC,MACxDiE,KAAKrJ,OAAOyY,ONleD,iBMqeZiB,MCvjBX,SAAW+H,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,cAC/CA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,UACrDA,qBAAqBA,uBC3CxB,IAAI5X,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D6W,EAA8B,SAAUvW,GAExC,QAASuW,KACL,MAAkB,QAAXvW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU6X,EAAcvW,GAIxBZ,GACIc,WAAS,KACVqW,EAAarX,UAAW,eAAY,IACvCE,GACIc,WAAS,IACVqW,EAAarX,UAAW,gBAAa,IACxCE,GACIc,WAAS,IACVqW,EAAarX,UAAW,kBAAe,IAC1CE,GACIc,cACDqW,EAAarX,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVqW,EAAarX,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVqW,EAAarX,UAAW,gBAAa,IACxCE,GACIc,WAAS,OACVqW,EAAarX,UAAW,eAAY,IACvCE,GACIc,WAAS,QACVqW,EAAarX,UAAW,mBAAgB,IACpCqX,GACTpW,iBCrDEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAQ5D8W,EAAiC,SAAUxW,GAE3C,QAASwW,KACL,GAAI/T,GAAmB,OAAXzC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAGhE,OAFAwE,GAAMgU,KAAO,GAAIC,wBACjBjU,EAAMkU,cACClU,EAmEX,MAxEA/D,GAAU8X,EAAiBxW,GAU3BwW,EAAgBtX,UAAU0X,aAAe,SAAUC,GAC3C5Y,KAAK6Y,SAAW7Y,KAAK6Y,OAAOC,UAAY9Y,KAAK6Y,OAAOA,UACpD7Y,KAAK+Y,SAAW/Y,KAAKgZ,kBAAkBhZ,KAAK6Y,UAMpDN,EAAgBtX,UAAU+X,kBAAoB,SAAUH,GACpD,MAAIA,GAAO5V,KACAjD,KAAKwY,KAAKS,cAAcJ,GAGxB7Y,KAAKwY,KAAKU,gBAAgBL,IAMzCN,EAAgBtX,UAAUkY,aAAe,WACrC,MAAOnZ,MAAK+Y,UAKhBR,EAAgBtX,UAAUmY,YAAc,SAAUC,OAC/B,KAAXA,IAAqBA,UACGC,KAAxBtZ,KAAKuZ,iBACLvZ,KAAK0Y,WAAWc,eAAaC,WAAUA,WAASC,WAAc/E,GAAIgF,UAAQ3Z,KAAKuZ,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgBtX,UAAU4Y,YAAc,SAAU5W,GAC9C,MAAOjD,MAAK0Y,WAAWc,eAAaC,WAAUxW,KAKlDsV,EAAgBtX,UAAU6Y,oBAAsB,SAAUC,GACtD/Z,KAAKga,cAAcD,GAAM,IAE7B5Y,GACIc,cACDsW,EAAgBtX,UAAW,WAAQ,IACtCE,GACIc,cACDsW,EAAgBtX,UAAW,qBAAkB,IAChDE,GACIc,cACDsW,EAAgBtX,UAAW,YAAS,IACvCE,GACIc,cACDsW,EAAgBtX,UAAW,aAAU,IACxCE,GACIc,cACDsW,EAAgBtX,UAAW,iBAAc,IAC5CE,GACIc,cACDsW,EAAgBtX,UAAW,sBAAmB,IAC1CsX,GACTrW,iBAEE+X,EAA8B,SAAUlY,GAExC,QAASkY,KACL,MAAkB,QAAXlY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAUwZ,EAAclY,GAIxBZ,GACIiB,gBAAemW,IAChB0B,EAAahZ,UAAW,cAAW,IACtCE,GACIc,YAAS,IACVgY,EAAahZ,UAAW,uBAAoB,IACxCgZ,GACT/X,iBCjHEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DyY,GAA8B,SAAUnY,GAExC,QAASmY,KACL,MAAkB,QAAXnY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,MAlCAS,IAAUyZ,EAAcnY,GAIxBZ,IACIc,YAAS,IACViY,EAAajZ,UAAW,kBAAe,IAC1CE,IACIc,YAAS,IACViY,EAAajZ,UAAW,mBAAgB,IAC3CE,IACIc,YAAS,IACViY,EAAajZ,UAAW,oBAAiB,IAC5CE,IACIc,WAAS,SACViY,EAAajZ,UAAW,WAAQ,IACnCE,IACIc,WAAS,QACViY,EAAajZ,UAAW,qBAAkB,IAC7CE,IACIc,YAAS,IACViY,EAAajZ,UAAW,0BAAuB,IAClDE,IACIc,YAAS,IACViY,EAAajZ,UAAW,wBAAqB,IAChDE,IACIc,YAAS,IACViY,EAAajZ,UAAW,8BAA2B,IACtDE,IACIc,WAAS,KACViY,EAAajZ,UAAW,eAAY,IACvCE,IACIc,gBACDiY,EAAajZ,UAAW,aAAU,IAC9BiZ,GACThY,iBC3DEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D0Y,GAAgC,SAAUpY,GAE1C,QAASoY,KACL,MAAkB,QAAXpY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,IAAU0Z,EAAgBpY,GAI1BZ,IACIc,cACDkY,EAAelZ,UAAW,YAAS,IACtCE,IACIc,cACDkY,EAAelZ,UAAW,gBAAa,IACnCkZ,GACTjY,iBAKEkY,GAA8B,SAAUrY,GAExC,QAASqY,KACL,MAAkB,QAAXrY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,IAAU2Z,EAAcrY,GAIxBZ,IACIiB,gBAAe+X,KAChBC,EAAanZ,UAAW,cAAW,IACtCE,IACIc,YAAS,IACVmY,EAAanZ,UAAW,kBAAe,IACnCmZ,GACTlY,iBCpDEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GA0C5D4Y,GAA0B,SAAUtY,GAEpC,QAASsY,GAASta,EAASkQ,GACvB,GAAIzL,GAAQzC,EAAOa,KAAK5C,KAAMD,EAASkQ,IAAYjQ,IACnDwE,GAAMqM,eACNrM,EAAM8V,sBACN9V,EAAM+V,4BACN/V,EAAMgW,eAAiB,iBACvBhW,EAAMiW,eAAiB,iBACvBjW,EAAM8L,aAAe,eACrBoK,EAAWhY,OAAOiY,GAClBrI,WAAS,mBAAoB9N,EAAMoW,yBAA0BpW,EAM7D,OAJK7M,qBAAkB6M,EAAMqW,gBAAsB,SAC/CpY,OAAKC,OAAOF,UAEhBgC,EAAM5M,KAAO,GAAI6K,QACV+B,EAhBX/D,GAAU4Z,EAAUtY,GAkBpB2Y,EAAaL,EAUbA,EAASpZ,UAAU6Z,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,MAAIxe,eACAsD,KAAKmb,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJlb,KAAKmb,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAASpZ,UAAUoa,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,MAAIxe,eACAsD,KAAKmb,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJlb,KAAKmb,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAASpZ,UAAUqa,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,MAAIxe,eACAsD,KAAKyb,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJlb,KAAKyb,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFb,EAASpZ,UAAU4B,cAAgB,WAC/B,MAAO,YAMXwX,EAASpZ,UAAUya,UAAY,WAC3B1b,KAAK2b,iBACL3b,KAAK4b,iBACL5b,KAAK6b,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhBpc,KAAKqc,KAAO,GAAIC,QAAK,WAAYtc,KAAK6b,cAAe7b,KAAKuc,QACtDvc,KAAK/E,iBAAmBtD,oBAAkBqI,KAAKjD,gBAC/CiD,KAAKjD,aAAe,aAU5Bsd,EAASpZ,UAAUub,aAAe,SAAUphB,EAAYwc,EAAW6E,GAC/Dzc,KAAK0c,WAAWC,WAAWvhB,EAAYwc,EAAW6E,IAMtDpC,EAASpZ,UAAU2b,aAAe,WAC1B5c,KAAK0c,YACL1c,KAAK0c,WAAWE,gBASxBvC,EAASpZ,UAAU4b,iBAAmB,SAAUxY,GAC5CrE,KAAK0c,WAAWG,iBAAiBxY,IASrCgW,EAASpZ,UAAU6b,OAAS,SAAUC,GAClC/c,KAAKpI,KAAKklB,OAAOC,IAYrB1C,EAASpZ,UAAU+b,eAAiB,SAAUC,GAC1Cjd,KAAKkd,aAAaF,eAAeC,GACjCjd,KAAKmd,qBAQT9C,EAASpZ,UAAUmc,eAAiB,SAAUC,EAAWC,GACrDtd,KAAKpI,KAAKwlB,eAAeC,EAAWC,IAExCjD,EAASpZ,UAAU0a,eAAiB,WAEhC,GACI4B,GADAhB,EAASD,OAAKC,MAElBgB,MACAjL,WAAStS,KAAKuc,UAAYgB,EAC1B,IAAIC,EACJA,MACAA,EAAahlB,YAAUwH,KAAKuc,OAAQA,EACpC,IAAIkB,EACJA,MACAA,EAAiBjlB,YAAUwH,KAAK6C,gBAAiB2a,GACjDlL,WAAS,OAAQmL,EAAgBjlB,YAAUwH,KAAKuc,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdlD,EAASpZ,UAAUoM,MAAQ,WACvBrN,KAAK2d,YAAYtQ,SAErBgN,EAASpZ,UAAU2c,yBAA2B,SAAUvgB,GACpD,GAAI2C,KAAK6d,cACL,OAAQxgB,EAAE9B,QACN,IAAK,gBACDyE,KAAK8d,WACL,MACJ,KAAK,cACD9d,KAAK+d,aACL,MACJ,KAAK,mBACD,GAEIC,GAFiB3gB,EAAEgE,OACa4G,QAAQ,cACXA,QAAQ,MACrCgW,EAAcD,EAAYhW,cAAc,oBACxB,QAAhBiW,OAAwC3E,KAAhB2E,GACxBje,KAAKke,sBAAsBF,EAAYhW,cAAc,qBAEzD,MACJ,KAAK,qBACD,GAEImW,GAFe9gB,EAAEgE,OACW4G,QAAQ,cACXA,QAAQ,MACjCmW,EAAYD,EAAUnW,cAAc,sBACtB,QAAdoW,OAAoC9E,KAAd8E,GACtBpe,KAAKke,sBAAsBC,EAAUnW,cAAc,uBAEvD,MACJ,KAAK,YACD,GAAI3G,GAAShE,EAAEgE,OAAOgd,cAClBC,EAAiBte,KAAKue,mBAAmBld,EAC7C,IAAuB,OAAnBid,EAAyB,CACzB,GAAIzX,GAAWyX,EAAezX,QAC9B7G,MAAKwe,UAAU3X,EACf,IAAI4X,GAAYphB,EAAEgE,OAAOod,UACrB9f,EAAM2f,EAAevO,SAAS0O,EAClCrR,aAAUzO,GAAM,aAChByO,YAAUzO,GAAM,eAGhBqB,MAAK0e,gBAET,MACJ,KAAK,UACD,GAAIC,GAAYthB,EAAEgE,OAAOgd,cACrBO,EAAoB5e,KAAK6e,uBAAuBF,EACpD,IAA0B,OAAtBC,EAA4B,CAC5B,GAAIE,GAASF,EAAkB/X,QAC/B7G,MAAKwe,UAAUM,EACf,IAAIC,GAAS1hB,EAAEgE,OAAOod,UAClBxZ,EAAO2Z,EAAkB7O,SAASgP,EACtC3R,aAAUnI,GAAO,aACjBmI,YAAUnI,GAAO,eAGjBjF,MAAK0e,mBAMzBrE,EAASpZ,UAAUsd,mBAAqB,SAAUK,GAC9C,GAAInW,GAAamW,EAAkBxW,kBAKnC,OAJmB,QAAfK,IAA0E,IAAlDA,EAAWe,UAAUhL,QAAQ,iBACxB,SAA7BiK,EAAWhO,MAAMG,UACjB6N,EAAazI,KAAKue,mBAAmB9V,IAElCA,GAGX4R,EAASpZ,UAAU4d,uBAAyB,SAAUD,GAClD,GAAInW,GAAamW,EAAkBI,sBAKnC,OAJmB,QAAfvW,IAA0E,IAAlDA,EAAWe,UAAUhL,QAAQ,iBACxB,SAA7BiK,EAAWhO,MAAMG,UACjB6N,EAAazI,KAAK6e,uBAAuBpW,IAEtCA,GAEX4R,EAASpZ,UAAU2a,eAAiB,WAChC5b,KAAK6b,iBACL7b,KAAK7C,YACL6C,KAAK9C,cACL8C,KAAKif,eACLjf,KAAKkf,aAAc,EACnBlf,KAAKmf,eAAgB,EACrBnf,KAAKof,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEb1f,KAAK8W,cAAiB9W,KAAKpJ,qBAAsBC,iBAAgBmJ,KAAKpJ,WAAWA,WAAW+oB,UACnFhoB,oBAAkBqI,KAAKpJ,WAAW+C,QAAWqG,KAAKpJ,WAAWE,kBAAmB8oB,qBACzF5f,KAAK/E,iBAAmBtD,oBAAkBqI,KAAKpD,kBAMnDyd,EAASpZ,UAAU4e,WAAa,WAC5BC,eAAalW,IAAI5J,KAAKpI,KAAKqY,QAAS,QAASjQ,KAAK+f,kBAAmB/f,MACrE8f,eAAalW,IAAI5J,KAAKiQ,QAAS,WAAYjQ,KAAK+f,kBAAmB/f,MACnEA,KAAKggB,eAAiB,GAAIC,kBAAejgB,KAAKiQ,SAC1CiQ,UAAWlgB,KAAK4d,yBAAyBjG,KAAK3X,MAC9Cof,WAAYpf,KAAKof,WACjBe,UAAW,YAEXngB,KAAK6d,gBACL7d,KAAKiQ,QAAQmQ,UAAsC,IAA3BpgB,KAAKiQ,QAAQmQ,SAAkB,EAAIpgB,KAAKiQ,QAAQmQ,WAQhF/F,EAASpZ,UAAUof,gBAAkB,WACjC,GAAIC,KACJ,OAAItgB,MAAK2H,YACE2Y,GAEXA,EAAQ7nB,MACJ8nB,OAAQ,SAAUvd,MAAOhD,KAAMA,KAAK/H,kBAEnCN,oBAAkBqI,KAAKwgB,UACxBF,EAAQ7nB,MACJ8nB,OAAQ,UACRvd,MAAOhD,QAGXA,KAAKygB,kBACLH,EAAQ7nB,MACJ8nB,OAAQ,cACRvd,MAAOhD,QAGXA,KAAK6N,aACLyS,EAAQ7nB,MACJ8nB,OAAQ,QACRvd,MAAOhD,KAAMA,KAAK8N,gBAGtB9N,KAAKI,iBACLkgB,EAAQ7nB,MACJ8nB,OAAQ,UACRvd,MAAOhD,QAGXA,KAAKM,cACLggB,EAAQ7nB,MACJ8nB,OAAQ,OACRvd,MAAOhD,QAGXA,KAAKgV,WAAWxd,OAAS,GACzB8oB,EAAQ7nB,MACJ8nB,OAAQ,UAAWvd,MAAOhD,QAGlCsgB,EAAQ7nB,MACJ8nB,OAAQ,SAAUvd,MAAOhD,QAEzBA,KAAK0gB,kBACLJ,EAAQ7nB,MACJ8nB,OAAQ,cAAevd,MAAOhD,SAGlCA,KAAKyO,eAAiBzO,KAAKhB,YAAcgB,KAAKf,qBAC9CqhB,EAAQ7nB,MACJ8nB,OAAQ,SAAUvd,MAAOhD,QAG7BA,KAAK2gB,gBACLL,EAAQ7nB,MACJ8nB,OAAQ,YAAavd,MAAOhD,QAGhCA,KAAK4gB,gBACLN,EAAQ7nB,MACJ8nB,OAAQ,YAAavd,MAAOhD,QAGhCA,KAAKK,gBACLigB,EAAQ7nB,MACJ8nB,OAAQ,aAAcvd,MAAOhD,QAGjCA,KAAK6gB,mBACLP,EAAQ7nB,MACJ8nB,OAAQ,gBAAiBvd,MAAOhD,QAGxCA,KAAK8gB,sBAAsBR,GACpBA,IAEXjG,EAASpZ,UAAU6f,sBAAwB,SAAUR,GAC7CtgB,KAAKX,qBACLihB,EAAQ7nB,MACJ8nB,OAAQ,iBACRvd,MAAOhD,SAGXA,KAAKlE,aAAailB,aAAe/gB,KAAKlE,aAAaklB,eAAiBhhB,KAAKlE,aAAamE,eACtFqgB,EAAQ7nB,MACJ8nB,OAAQ,OACRvd,MAAOhD,QAGXA,KAAKihB,gBAAgBjhB,KAAKzI,UAC1B+oB,EAAQ7nB,MACJ8nB,OAAQ,gBACRvd,MAAOhD,QAGXA,KAAKkhB,gBACLZ,EAAQ7nB,MACJ8nB,OAAQ,YACRvd,MAAOhD,QAGXA,KAAK5B,sBACLkiB,EAAQ7nB,MACJ8nB,OAAQ,gBACRvd,MAAOhD,QAGfsgB,EAAQ7nB,MACJ8nB,OAAQ,SACRvd,MAAOhD,KAAKpI,SAGpByiB,EAASpZ,UAAUggB,gBAAkB,SAAU1pB,GAC3C,GAAIiN,GAAQxE,IACZ,OAAOzI,GAAQ4pB,KAAK,SAAUnY,GAC1B,MAAIA,GAAIzR,QACGiN,EAAMyc,gBAAgBjY,EAAIzR,YAE3ByR,EAAIoY,WAAYpY,EAAIqY,qBAOtChH,EAASpZ,UAAUqgB,aAAe,WAC1BthB,KAAKpI,MAAQoI,KAAKpI,KAAKqY,SACvB6P,eAAayB,OAAOvhB,KAAKpI,KAAKqY,QAAS,QAASjQ,KAAK+f,oBAO7D1F,EAASpZ,UAAU6B,IAAM,SAAUC,EAAOC,GACtChD,KAAKwhB,cAAexhB,KAAKwhB,aAAaxd,QAAQjB,EAAOC,EAAMhD,OAM/Dqa,EAASpZ,UAAUwgB,OAAS,WACxB,GAAIjd,GAAQxE,IACRA,MAAKmQ,UACLnQ,KAAKpI,KAAKuY,SAAU,GAExBuR,iBAAgBrgB,OAAQrB,KAAKiQ,SAAWjQ,KAAKuJ,eAC7CvJ,KAAK8C,KAAK,2BACV9C,KAAKT,aAAe,GAAIiO,GAAOxN,MAC/BA,KAAK2hB,WAAa,GAAItR,GAAiBrQ,MACvCA,KAAK2d,YAAc,GAAI/Q,GAAM5M,KAW7B,IATIA,KAAiB,iBACjBA,KAAK+T,kBAAmB,GAE5B/T,KAAKoG,QZtgBK,QYugBVpG,KAAK4hB,sBACL5hB,KAAK9G,eAAgB,EAChBvB,oBAAkBqI,KAAKpJ,aACxBoJ,KAAK6hB,gBAAgB7hB,KAAKpJ,aAEzB8F,eAAesD,KAAK+T,iBAAkB,CACvC/T,KAAK8hB,WACD9hB,KAAKiQ,QAAQ1K,UAAUC,SAAS,eAAiBxF,KAAK+hB,gBAAgBC,WACtEhiB,KAAKpI,KAAKmqB,gBAAgBC,UAAY,gBAE1ChiB,KAAKiiB,aACL,IAAIC,GAAgB3Y,gBAAc,OAAS2G,GAAIlQ,KAAKiQ,QAAQC,GAAK,gBACjE9C,aAAUpN,KAAKiQ,SAAU,cACpBtY,oBAAkBqI,KAAKmiB,SAAoC,gBAAjBniB,eAA2D,IAA9BA,KAAKmiB,OAAO3jB,QAAQ,OAC5FwB,KAAKiQ,QAAQxV,MAAM0nB,OAASniB,KAAKmiB,QAEhCxqB,oBAAkBqI,KAAK6J,QAAkC,gBAAhB7J,cAAyD,IAA7BA,KAAK6J,MAAMrL,QAAQ,OACzFwB,KAAKiQ,QAAQxV,MAAMoP,MAAQ7J,KAAK6J,OAEpC7J,KAAKiQ,QAAQtF,YAAYuX,GACzBliB,KAAKpI,KAAKwqB,SAASF,GACnBliB,KAAK6f,aAET7f,KAAKqiB,gBACL,IACIC,GAAoBtiB,KAAKpI,KAAoB,eASjD,IAPAoI,KAAKpI,KAAoB,gBAAI,SAAUoL,EAAM7I,GACzCmoB,EAAkBtgB,MAAMwC,EAAM5M,KAExB4M,GAAM2L,SAAWxY,oBAAkB6M,EAAa,UAClDA,EAAM+d,cAAcvf,EAAM7I,IAG9BuC,cAAcsD,KAAK+T,iBAAkB,CACrC,GAAIyO,GAAO,SAAUxf,GAAQ,MAAOwB,GAAMie,aAAazf,EAAMwf,GAC7DE,gBAAarb,GAAG,qBAAsBmb,EAAMxiB,QAGpDqa,EAASpZ,UAAU0hB,gBAAkB,WAC5BhrB,oBAAkBqI,KAAKpI,KAAKgrB,kBAC7B5iB,KAAKpI,KAAKgrB,gBAAgB7b,UAE9B/G,KAAK4iB,gBAAkB5iB,KAAKpI,KAAKgrB,gBAAkB,GAAIre,GAAcvE,OAEzEqa,EAASpZ,UAAUwhB,aAAe,SAAUzf,EAAM2R,GAC9C,GAAI3R,EAAKkN,KAAOlQ,KAAKiQ,QAAQC,GAAK,eAAlC,CACIlQ,KAAKpI,KAAOoL,EAAKpL,KAKrBoI,KAAKpI,KAAKyZ,MAAMU,UAGX/R,MAAK+T,iBAIN/T,KAAKpI,KAAa,UAAI,EAHtBoI,KAAKpI,KAAkB,eAAI,EAK/BoI,KAAK6iB,gBACL7iB,KAAK8iB,YAAY9iB,KAAKpI,KAAKL,SAC3ByI,KAAK+iB,gBAEAprB,qBAAkBqI,KAAKgjB,kBACxBhjB,KAAKpI,KAAKyP,GAAG,mBAAoBrH,KAAKgjB,gBAA8B,eAAGhjB,KAAKgjB,gBAEhF,KAAK,GAAI1rB,GAAI,EAAGA,EAAI0I,KAAKzI,QAAQC,OAAQF,IACrC0I,KAAKzI,QAAQD,GAAG2R,IAAMjJ,KAAKpI,KAAKL,QAAQD,GAAG2R,GAE/CjJ,MAAK6f,aACL7f,KAAK2iB,iBAEL3iB,MAAKpI,KAAiB,eACtB8qB,eAAa9a,IAAI,qBAAsB5H,KAAKyiB,gBAEhDpI,EAASpZ,UAAU6hB,YAAc,SAAU7D,EAAagE,OACxC,KAARA,IAAkBA,EAAM,EAC5B,KAAK,GAAI3rB,GAAI,EAAGe,EAAM4mB,EAAYznB,OAAQF,EAAIe,EAAKf,IAC3C2nB,EAAY3nB,GAAGC,SACf0nB,EAAY3nB,GAAG6C,MAAQxC,oBAAkBsnB,EAAY3nB,GAAG6C,OAAS8oB,EAC7DhE,EAAY3nB,GAAG6C,MACnB8oB,IACAA,EAAMjjB,KAAK8iB,YAAY7D,EAAY3nB,GAAGC,QAAS0rB,KAG/ChE,EAAY3nB,GAAG6C,MAAQxC,oBAAkBsnB,EAAY3nB,GAAG6C,OAAS8oB,EAC7DhE,EAAY3nB,GAAG6C,MACnB8oB,IAGR,OAAOA,IAEX5I,EAASpZ,UAAU4hB,cAAgB,WAE3B7iB,KAAKlE,eACLkE,KAAKpI,KAAKkE,aAAiB,KAAIkE,KAAKlE,aAAiB,KACrDkE,KAAKpI,KAAKkE,aAAa6T,SAAW3P,KAAKlE,aAAa6T,SAExD,KAASrY,EAAI,EAAGA,EAAI0I,KAAKgV,WAAWxd,OAAQF,IACxC,IAAK,GAAI0C,GAAI,EAAGA,EAAIgG,KAAKgV,WAAW1d,GAAGC,QAAQC,OAAQwC,IACnDgG,KAAKpI,KAAKod,WAAW1d,GAAGC,QAAQyC,GAAO,KAAIgG,KAAKgV,WAAW1d,GAAGC,QAAQyC,GAAO,IAGrF,KAAK,GAAI1C,GAAI,EAAGA,EAAI0I,KAAKzI,QAAQC,OAAQF,IACrC0I,KAAKpI,KAAKL,QAAQD,GAAO,KAAI0I,KAAKzI,QAAQD,GAAO,MAIzD+iB,EAASpZ,UAAU4gB,gBAAkB,SAAUpjB,GAC3C,GAAI+F,GAAQxE,IACZ,IAAIvB,YAAgBrC,QAASqC,EAAKjH,OAAS,GAAKiH,EAAK,GAAGjC,eAAe,SACnEwD,KAAK7C,SAAW/F,EAAgB4I,MAAQ3B,WAAS,SAAUI,GAAQA,EACnEuB,KAAK7C,SAASC,OAAO,SAAUC,GAC3BiV,WAAS,sBAAwBjV,EAAEpE,SAAUoE,EAAGmH,GAChC,IAAZnH,EAAEjD,OACFoK,EAAMtH,WAAWzE,KAAK4E,SAK9B,IAAIjG,EAAgB4I,MAAO,CACvB,GAAIkjB,GAAW7kB,WAAS,SAAU2B,KAAKpJ,WACvCoJ,MAAK2hB,WAAWvQ,kBAAkB8R,OAGlCljB,MAAK2hB,WAAWvQ,kBAAkB3S,IAa9C4b,EAASpZ,UAAUkiB,mBAAqB,WACpCnjB,KACKojB,mBACLpjB,KAAKpI,KAAKyrB,UAAYrjB,KAAKqjB,UAC3BrjB,KAAKpI,KAAKimB,cAAgB7d,KAAK6d,cAC/B7d,KAAKpI,KAAKL,QAAUyI,KAAKsjB,eAAetjB,KAAKzI,SAC7CyI,KAAKpI,KAAK8oB,iBAAmB1gB,KAAK0gB,iBAClC1gB,KAAKpI,KAAKgpB,eAAiB5gB,KAAK4gB,eAChC5gB,KAAKpI,KAAKyZ,MAAQrR,KAAKqR,MACvBrR,KAAKpI,KAAK2rB,gBAAkBvjB,KAAKujB,gBACjCvjB,KAAKpI,KAAKiW,YAAc7N,KAAK6N,YAC7B7N,KAAKpI,KAAKkW,aAAe0V,sBAAoBxjB,KAAK8N,cAClD9N,KAAKpI,KAAK6rB,cAAgBzjB,KAAKyjB,cAC/BzjB,KAAKpI,KAAKyI,eAAiBL,KAAKK,eAChCL,KAAKpI,KAAK0I,aAAeN,KAAKM,aAC9BN,KAAKpI,KAAKI,eAAiBgI,KAAKhI,eAChCgI,KAAKpI,KAAKwG,qBAAuB4B,KAAK5B,qBACtC4B,KAAKpI,KAAKiS,MAAQ7J,KAAK6J,MACvB7J,KAAKpI,KAAKuqB,OAASniB,KAAKmiB,OACxBniB,KAAKpI,KAAK8rB,aAAe1jB,KAAK0jB,aAC9B1jB,KAAKpI,KAAKwI,gBAAkBJ,KAAKI,gBACjCJ,KAAKpI,KAAKsX,cAAgBlP,KAAKkP,cAC/BlP,KAAKpI,KAAK2I,cAAgBP,KAAKO,cAC/BP,KAAKpI,KAAK+rB,YAAc3jB,KAAK2jB,YAC7B3jB,KAAKpI,KAAKgsB,eAAiB5jB,KAAK4jB,eAChC5jB,KAAKpI,KAAK0H,oBAAsBU,KAAKV,oBACrCU,KAAKpI,KAAKyH,oBAAsBW,KAAKX,oBACrCW,KAAKpI,KAAKmqB,gBAAkByB,sBAAoBxjB,KAAK+hB,iBACrD/hB,KAAKpI,KAAKisB,UAAY7jB,KAAK6jB,UAC3B7jB,KAAKpI,KAAKksB,UAAY9jB,KAAK8jB,UAC3B9jB,KAAKpI,KAAKspB,eAAiBlhB,KAAKkhB,eAChClhB,KAAKpI,KAAK4oB,QAAUgD,sBAAoBxjB,KAAK+jB,kBAC7C/jB,KAAKpI,KAAKosB,gBAAkBhkB,KAAKgkB,gBACjChkB,KAAKpI,KAAKipB,kBAAoB7gB,KAAK6gB,kBACnC7gB,KAAKpI,KAAKK,eAAiBurB,sBAAoBxjB,KAAK/H,gBACpD+H,KAAKpI,KAAKsN,kBAAoBse,sBAAoBxjB,KAAKkF,mBACvDlF,KAAKpI,KAAK2G,aAAeilB,sBAAoBxjB,KAAKzB,cAClDyB,KAAKpI,KAAKC,eAAiB2rB,sBAAoBxjB,KAAKnI,gBACpDmI,KAAKpI,KAAKod,WAAawO,sBAAoBxjB,KAAKgV,YAChDhV,KAAKpI,KAAKqsB,iBAAmBT,sBAAoBxjB,KAAKikB,kBACtDjkB,KAAKpI,KAAKqgB,UAAYuL,sBAAoBxjB,KAAKiY,WAC/CjY,KAAKpI,KAAK2kB,OAASiH,sBAAoBxjB,KAAKuc,QAC5Cvc,KAAKpI,KAAKssB,iBAAmBlkB,KAAKkkB,iBAClClkB,KAAKpI,KAAK6oB,iBAAmB+C,sBAAoBxjB,KAAKmkB,kBACtDnkB,KAAKpI,KAAKwsB,gBAAkBZ,sBAAoBxjB,KAAKokB,iBACrDpkB,KAAKpI,KAAKkE,aAAekE,KAAKqkB,sBAC9BrkB,KAAKpI,KAAK4X,YAAcgU,sBAAoBxjB,KAAKwP,aACjDxP,KAAKpI,KAAK+oB,eAAiB6C,sBAAoBxjB,KAAK2gB,gBACpD3gB,KAAKpI,KAAKoH,WAAagB,KAAKhB,WAC5BgB,KAAKpI,KAAK6W,cAAgBzO,KAAKyO,aAE/BzO,MAAKpI,KAAqB,uBAAIoI,KAAqB,sBAEnDA,MAAKpI,KAAkB,eAAI,GAE/ByiB,EAASpZ,UAAUqjB,cAAgB,SAAUthB,GACzChD,KAAKoG,QAAQ5N,YAAU,OAAQwK,GAAOA,IAE1CqX,EAASpZ,UAAU8hB,eAAiB,WAChC,GAAIve,GAAQxE,KACRiE,EAAWjE,IACfA,MAAKpI,KAAK2sB,aAAe,SAAUvhB,GAC/B,IAAKrL,oBAAkBqL,EAAK3B,UAAY2B,EAAK3B,OAAOkE,UAAUC,SAAS,qBAChExC,EAAK3B,OAAOkE,UAAUC,SAAS,uBAAyBxC,EAAK3B,OAAOkE,UAAUC,SAAS,kBAE1F,YADAxC,EAAKmD,QAAS,EAGlB3B,GAAM4B,QZtsBQ,eYssBqBpD,IAEvChD,KAAKpI,KAAK4sB,YAAc,SAAUxhB,GACzBtG,aAGIA,cAAc8H,EAAMuP,mBACzBvP,EAAMigB,wBAAyB,EAC/BjgB,EAAMwV,eAAgBkK,iBAAkB1f,EAAM5M,KAAKssB,mBAAoB,GACvE1f,EAAMigB,wBAAyB,GAL/BjgB,EAAM0f,iBAAmB1f,EAAM5M,KAAKssB,iBAOxCjgB,EAASmL,OZ/sBI,cY+sBuBpM,GACpCwB,EAAM4B,QZhtBO,cYgtBqBpD,IAEtChD,KAAKpI,KAAK8sB,cAAgB,SAAU1hB,GAChCwB,EAAM0f,iBAAmB1f,EAAM5M,KAAKssB,iBACpC1f,EAAM4B,QZhtBS,gBYgtBqBpD,IAExChD,KAAKpI,KAAK+sB,WAAa,SAAU3hB,GAC7BwB,EAAM2Y,oBACN3Y,EAAM4B,QZ5sBM,aY4sBqBpD,IAErChD,KAAKpI,KAAKgtB,mBAAqB,SAAU5hB,GACrCwB,EAAM4K,OAAO,gBAAiBpM,GAC9BA,EAAOwB,EAAMqM,aAEjB7Q,KAAKpI,KAAKitB,iBAAmB,SAAU7hB,GACnCwB,EAAM4K,OAAO,cAAepM,GAC5BA,EAAOwB,EAAMqM,aAEjB7Q,KAAKpI,KAAKktB,eAAiB,SAAU9hB,GACjCwB,EAAM4B,QZjuBU,iBYiuBqBpD,IAEzChD,KAAKpI,KAAKmtB,kBAAoB/kB,KAAKskB,cAAc3M,KAAK3X,MACtDA,KAAKpI,KAAKotB,oBAAsBhlB,KAAKskB,cAAc3M,KAAK3X,MACxDA,KAAKpI,KAAKqtB,yBAA2BjlB,KAAKskB,cAAc3M,KAAK3X,MAC7DA,KAAKpI,KAAKstB,uBAAyBllB,KAAKskB,cAAc3M,KAAK3X,MAC3DA,KAAKpI,KAAKutB,kBAAoBnlB,KAAKskB,cAAc3M,KAAK3X,MACtDA,KAAKpI,KAAKwtB,kBAAoBplB,KAAKskB,cAAc3M,KAAK3X,MACtDA,KAAKpI,KAAKytB,eAAiBrlB,KAAKskB,cAAc3M,KAAK3X,MACnDA,KAAKpI,KAAK0tB,eAAiBtlB,KAAKskB,cAAc3M,KAAK3X,MACnDA,KAAKpI,KAAK2tB,gBAAkBvlB,KAAKskB,cAAc3M,KAAK3X,MACpDA,KAAKpI,KAAK4tB,eAAiBxlB,KAAKskB,cAAc3M,KAAK3X,MACnDA,KAAKpI,KAAK6tB,gBAAkBzlB,KAAKskB,cAAc3M,KAAK3X,MACpDA,KAAKpI,KAAK8tB,aAAe1lB,KAAKskB,cAAc3M,KAAK3X,MACjDA,KAAKpI,KAAK+tB,eAAiB3lB,KAAKskB,cAAc3M,KAAK3X,MACnDA,KAAKpI,KAAKguB,YAAc5lB,KAAKskB,cAAc3M,KAAK3X,MAChDA,KAAKpI,KAAKiuB,SAAW7lB,KAAKskB,cAAc3M,KAAK3X,MAC7CA,KAAKpI,KAAKkuB,WAAa9lB,KAAKskB,cAAc3M,KAAK3X,MAC/CA,KAAKpI,KAAKmuB,gBAAkB/lB,KAAKskB,cAAc3M,KAAK3X,MACpDA,KAAKpI,KAAKouB,WAAahmB,KAAKskB,cAAc3M,KAAK3X,MAC/CA,KAAKpI,KAAKquB,YAAcjmB,KAAKskB,cAAc3M,KAAK3X,MAChDA,KAAKpI,KAAKsuB,WAAalmB,KAAKskB,cAAc3M,KAAK3X,MAC/CA,KAAKpI,KAAKuuB,YAAc,SAAUnjB,GAG9B,IAFA,GAAIiC,GAAOT,EAAM3F,UAEVoG,EAAKjC,EAAa,UAAGuC,UAAUC,SAAS,iBAC3CxC,EAAa,UAEjBwB,GAAM4B,QZ3tBO,cY2tBqBpD,IAEtChD,KAAKpI,KAAK8lB,KAAO,WAEb,GADAzZ,EAASrM,KAAKyP,GAAG,cAAepD,EAAS0e,gBAAiB1e,IACrDtM,oBAAkB6M,EAAMgd,cAAe,CAExChd,EAAMgd,aAAehd,EAAM5M,KAAiB,aAAI,GAAIwuB,GAAW5hB,EAAM5M,QAG7EoI,KAAKpI,KAAKyuB,cAAgBrmB,KAAKskB,cAAc3M,KAAK3X,MAClDA,KAAKpI,KAAK0uB,cAAgBtmB,KAAKskB,cAAc3M,KAAK3X,MAClDA,KAAKumB,6BACLvmB,KAAKwmB,qBACLxmB,KAAKymB,2BACLzmB,KAAK0mB,yBACL1mB,KAAK2mB,qBACL3mB,KAAK4mB,sBAETvM,EAASpZ,UAAU4lB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,GAAI/sB,GAAI,EAAGA,EAAI8sB,EAAWpnB,MAAMlI,OAAQwC,IACzC+sB,EAAc3Z,YAAU0Z,EAAWpnB,MAAM1F,IAAK,iBAAmBqQ,eAAayc,EAAWpnB,MAAM1F,IAAK,kBAI5GqgB,EAASpZ,UAAU+lB,cAAgB,WAC/B,MAAoB,SAAhBhnB,KAAKmiB,SAA8D,IAAzCniB,KAAKmiB,OAAOpd,WAAWvG,QAAQ,MAQjE6b,EAASpZ,UAAUslB,2BAA6B,WAC5C,GAAI/hB,GAAQxE,KACRiE,EAAWjE,IACfA,MAAKpI,KAAKqvB,UAAY,SAAUjkB,GAK5B,GAJAwB,EAAM0iB,kBAAkBlkB,GACxBwB,EAAM2Y,oBACN3Y,EAAM2iB,aAAa3iB,EAAM3F,WACzB2F,EAAM4K,OAAO,eAAgBpM,GACzBtM,EAAa8N,KAAW/K,EAAU+K,KAAWA,EAAMoN,gBAAiB,CACpE,GAAIwV,GAAM5uB,YAAU,sBAAuBgM,GAAOpH,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE+U,YAAYC,aACtB7a,MACH8a,YAAS,gCAAiC8U,EAAM,GAAI5iB,GAExD,GAAIA,EAAMwiB,iBAAmBxiB,EAAMtL,cAI/B,IAAK,GAHDmuB,OAAY,GACZpiB,EAAOT,EAAMsP,kBAAkB7O,KAE1B3N,GADT+vB,KAAe5hB,MAAM7C,KAAKqC,IACHzN,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAAS8sB,EAAU/vB,IAAK,CACrB+vB,EAAU/vB,GAAG8Q,oBACb5D,EAAMqiB,cAAcQ,EAAU/vB,IAAI,EAEtC,OAIZkN,EAAM4B,QZz0BK,YYy0BqBpD,GAChCwB,EAAMtL,eAAgB,GAE1B8G,KAAKpI,KAAKuV,gBAAkB,SAAUnK,GAClC,GACInD,GAAcrH,YAAU,SAAUwK,EACtC,IAAItM,EAAauN,KAAcxK,EAAUwK,IAA6B,SAAhBpE,EAClDoE,EAASmL,OAAO,oBAAqBpM,GACrCA,EAAQiB,EAAqB,gBAE5B,IAAiC,IAA7BA,EAAS9G,SAAS3F,QAAgBiC,EAAUwK,IAAaA,EAASrN,qBAAsBC,eAAa,CAC1G,GAAI6C,GAAKuK,EAASrN,UAClBqN,GAAS0d,WAAWvQ,kBAAkB1X,EAAG9C,WAAW8E,MACpDsH,EAAKoN,OAASnM,EAASrM,KAAKhB,WAAqB,WAAE8E,KAAOuI,EAAS9G,SAcvE,GAZKzG,EAAauN,IAAc7M,EAAgB4I,OAAUrI,oBAAkBsM,EAASrN,cAC7EoJ,KAAKwW,YACLlE,WAAS,cAAc,EAAMtP,GAEjCiB,EAASmL,OAAO,gBAAiBpM,IAGrC3G,SAAO2G,EAAMiB,EAAS4M,aAClB5M,EAAS3E,sBACT0D,EAAKoN,OAASpN,EAAKoN,OAAO3K,UAGzBzF,KAAKwW,WAAY,CAClB,GAAI8Q,GAAoB,GAAIC,WAI5B,OAHAtjB,GAASmC,QZl2BI,kBYk2B4BpD,EAAM,SAAUwkB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGftnB,KAAKpI,KAAKkL,IAAM,SAAUG,EAAMD,GAC5BwB,EAAMgd,cAAehd,EAAMgd,aAAa1e,IAAIG,EAAMD,KAG1DqX,EAASpZ,UAAU2lB,mBAAqB,WACpC,GACIc,GADAljB,EAAQxE,IAERtD,eAAcsD,KAAK+T,mBACdpc,oBAAkBqI,KAAKpI,KAAK8vB,aAC7BA,EAAY1nB,KAAKpI,KAAK8vB,YAG9B1nB,KAAKpI,KAAK+vB,aAAe,SAAU3kB,GAC/B,GAAI4kB,GAAkB,GAAIL,WAO1B,OANA/iB,GAAM4B,QZt2BQ,eYs2BqBpD,EAAM,SAAU6kB,GAC1CA,EAAY1hB,QACb3B,EAAM4K,OZx2BA,eYw2B4BpM,GAEtC4kB,EAAgBH,QAAQI,KAErBD,GAEX5nB,KAAKpI,KAAKkwB,cAAgB,SAAU9kB,GAChC,GAAI4kB,GAAkB,GAAIL,WAI1B,OAHA/iB,GAAM4B,QAAQ5N,YAAU,OAAQwK,GAAOA,EAAM,SAAU+kB,GACnDH,EAAgBH,QAAQM,KAErBH,GAEX5nB,KAAKpI,KAAK8vB,UAAY,SAAU1kB,GAM5B,GALItG,cAAc8H,EAAMuP,kBAChB2T,GAAkC,kBAAdA,IACpBA,EAAU1lB,MAAMwC,GAAQxB,KAG3BrL,oBAAkBqL,EAAKrE,MAAQqE,EAAKrE,IAAI4G,UAAUC,SAAS,gBAE5D,YADAxC,EAAKmD,QAAS,EAGlB,IAAIyhB,GAAkB,GAAIL,WAI1B,OAHA/iB,GAAM4B,QZ51BK,YY41BqBpD,EAAM,SAAUglB,GAC5CJ,EAAgBH,QAAQO,KAErBJ,IAGfvN,EAASpZ,UAAUylB,uBAAyB,WACxC,GAIIuB,GACAC,EALA1jB,EAAQxE,IAcZ,IARItD,cAAcsD,KAAK+T,mBACdpc,oBAAkBqI,KAAKpI,KAAKqwB,YAC7BA,EAAWjoB,KAAKpI,KAAKqwB,UAEpBtwB,oBAAkBqI,KAAKpI,KAAKswB,YAC7BA,EAAWloB,KAAKpI,KAAKswB,WAGzBloB,KAAKhE,YAAcU,cAAcsD,KAAK+T,iBAAkB,CACxD/T,KAAKpI,KAAKyP,GAdG,cAcYrH,KAAKhE,WAAuB,WAAGgE,KAAKhE,WAC7D,IAAImsB,GAAWnoB,KAAKpI,KAAkB,cAAEwwB,cAAc,cACtDD,GAASrrB,OAAO,EAAG,EAAGqrB,EAASE,OAEnCroB,KAAKpI,KAAKiM,gBAAkB,SAAUb,GAC9BwB,EAAM8jB,iBACN9jB,EAAM8jB,iBAAkB,EACxB9jB,EAAM5M,KAAKhB,YAAewZ,OAAQ5L,EAAMrH,SAAUkO,MAAOhN,WAAS,QAASmG,EAAM5M,KAAKhB,cAGtF4N,EAAM4B,QZ56BO,kBY46ByBpD,IAG9ChD,KAAKpI,KAAKswB,SAAW,SAAUllB,GAM3B,GALItG,cAAc8H,EAAMuP,kBAChBmU,GAAgC,kBAAbA,IACnBA,EAASlmB,MAAMwC,GAAQxB,IAG3BwB,EAAM5M,KAAK2wB,oBAAqB,CAChC,GAAIC,OAAe,EACnBA,GAAehkB,EAAM5M,KAAK6wB,kBAAkBC,YAAYzY,QAAQgE,uBAAuB,cAAc,IAChGtc,oBAAkB6wB,IAAiBA,EAAatY,KAAO1L,EAAMyL,QAAQC,GAAK,6BAC3ElN,EAAKmD,QAAS,GAGtB,GAAIyhB,GAAkB,GAAIL,WAU1B,OATA/iB,GAAM4B,QZv4BI,WYu4BqBpD,EAAM,SAAU2lB,GACvCjsB,eAAe8H,EAAMuP,mBACrB4U,EAAalpB,KAAOmpB,aAAWD,EAAalpB,OAE3CkpB,EAAaxiB,QACd3B,EAAM4K,OZ54BJ,WY44B4BuZ,GAElCf,EAAgBH,QAAQkB,KAErBf,GAEX5nB,KAAKpI,KAAKixB,UAAY,SAAU7lB,GAC5BwB,EAAM4B,QZj5BK,YYi5BqBpD,GAChCwB,EAAM4K,OZl5BK,YYk5BoBpM,IAEnChD,KAAKpI,KAAKqwB,SAAW,SAAUjlB,GACvBtG,cAAc8H,EAAMuP,kBAChBkU,GAAgC,kBAAbA,IACnBA,EAASjmB,MAAMwC,GAAQxB,GAG/B,IACI8lB,GAAU,GAAIvB,WAGlB,OAFAvkB,GAAS,QAAI8lB,EACbtkB,EAAM4K,OZ35BI,WY25BoBpM,GACvB8lB,GAEX9oB,KAAKpI,KAAKmxB,SAAW,SAAU/lB,GAC3BwB,EAAM4B,QZz5BI,WYy5BqBpD,GAC/BwB,EAAM4K,OZ15BI,WY05BoBpM,IAElChD,KAAKpI,KAAKoxB,gBAAkB,SAAUhmB,GAClCwB,EAAM4B,QZv5BW,kBYu5BqBpD,GACtCwB,EAAM4K,OZx5BW,kBYw5BoBpM,IAEzChD,KAAKpI,KAAKqxB,eAAiB,SAAUjmB,GACjCwB,EAAM4B,QZ75BU,iBY65BqBpD,GACrCwB,EAAM4K,OZ95BU,iBY85BoBpM,IAExChD,KAAKpI,KAAKsxB,YAAc,SAAUlmB,GAC9BwB,EAAM4B,QZz6BO,cYy6BqBpD,GAClCwB,EAAM4K,OZ16BO,cY06BoBpM,IAErChD,KAAKpI,KAAKuxB,kBAAoB,SAAUnmB,GACpCwB,EAAM4B,QZv6Ba,oBYu6BqBpD,GACxCwB,EAAM4K,OZx6Ba,oBYw6BoBpM,IAE3ChD,KAAKpI,KAAKwxB,YAAc,SAAUpmB,GACE,SAA5BwB,EAAM1I,aAAaC,MACnByI,EAAM4B,QZh7BG,cYg7ByBpD,GAEtCwB,EAAM4K,OZl7BO,cYk7BoBpM,KAGzCqX,EAASpZ,UAAUimB,kBAAoB,SAAUlkB,GAC7C,GAAIwB,GAAQxE,IACRtD,gBAAesD,KAAK+T,iBACpBsV,WAAW,WACP7kB,EAAM8kB,sBAAsBtmB,IAC7B,KAGHhD,KAAKspB,sBAAsBtmB,IAGnCqX,EAASpZ,UAAUmiB,iBAAmB,WAQlC,GAAIpjB,KAAKpJ,YAAcQ,EAAgB4I,MAAO,CAC1C,GAAIvB,GAAOuB,KAAK7C,SACZosB,EAAYlrB,WAAS,QAAS2B,KAAKpJ,WACvCoJ,MAAKpI,KAAKhB,YAAewZ,OAAQ3R,EAAM4M,MAAOke,OAG9CvpB,MAAKpI,KAAKhB,WAAeoJ,KAAKpJ,qBAAsBC,eAChC,GAAIA,eAAYmJ,KAAKpJ,WAAWA,WAAYoJ,KAAKpJ,WAAW4yB,aAAcxpB,KAAKpJ,WAAWE,SAA1GkJ,KAAK7C,QAOb,IALIT,cAAcsD,KAAKpJ,qBAAsBC,iBACzCmJ,KAAKpI,KAAKhB,WAAsB,YAAIoJ,KAAKpJ,WAAsB,YAC/DoJ,KAAKpI,KAAKhB,WAAyB,eAAIoJ,KAAKpJ,WAAyB,eACrEoJ,KAAKpI,KAAKhB,WAAc,IAAIoJ,KAAKpJ,WAAc,KAE/CoJ,KAAKpJ,qBAAsBC,iBAAgBmJ,KAAKpJ,WAAWA,WAAW+oB,SAAW3f,KAAKpJ,WAAW+C,OAAQ,CACzGqG,KAAKpI,KAAKhB,WAAqB,WAAE8E,KAAO9B,EAAYoG,KAAKpJ,WAAqB,WAAE8E,MAChFsE,KAAKpI,KAAKhB,WAAgB,MAAIoJ,KAAKpJ,WAAW+C,KAC9C,IAAI8vB,GAAOzpB,KAAKpI,KAAKhB,UAChBe,qBAAkBqI,KAAKpI,KAAKhB,WAAgB,QAC7CoJ,KAAKpI,KAAKhB,WAAgB,MAAEqb,KAAK,SAAU5U,GACvCosB,EAAe,WAAE9J,SAAU,EAC3B8J,EAAoB,iBAAI,EACxBA,EAAe,WAAE/tB,KAAO2B,EAAE+S,OAC1BqZ,EAAY,QAAI,GAAIC,mBAKpCrP,EAASpZ,UAAUwlB,yBAA2B,WAC1C,GACIkD,GADAnlB,EAAQxE,IAERtD,eAAcsD,KAAK+T,mBACdpc,oBAAkBqI,KAAKpI,KAAK+xB,kBAC7BA,EAAiB3pB,KAAKpI,KAAK+xB,iBAGnC3pB,KAAKpI,KAAKgyB,YAAc,SAAU5mB,GACL,YAArBA,EAAKnD,aAA6BmD,EAAK3B,QAAU2B,EAAK3B,OAAOgd,eAC7Drb,EAAK3B,OAAOgd,cAAc9Y,UAAUC,SAAS,yBAC7CxC,EAAKmD,QAAS,GAGE,YADF3N,YAAU,cAAewK,IAEvCwB,EAAM4K,OAAO,qBAEjB5K,EAAM4K,OAAO,eAAiBtU,WAAYkI,IACrCtM,EAAa8N,IAAW7M,oBAAkB6M,EAAM0G,eAAkB9T,EAAgBoN,IAClC,IAA7CA,EAAM5M,KAAKK,eAAeV,QAAQC,QAAyD,IAAzCgN,EAAM5M,KAAKC,eAAeC,IAAIN,SACpFgN,EAAM4K,OAAO,gBAAkBjS,SAAUqH,EAAM5M,KAAKhB,aACpD4N,EAAM5M,KAAKhB,WAAa4N,EAAMqM,YAAYT,OAE9C,IAAIwX,GAAkB,GAAIL,WAC1B,IAAI7qB,cAAmC,WAArBsG,EAAKnD,cAA6B2E,EAAMuP,iBAAkB,CAExE/Q,EAAS,KAAIA,EAAS,KAAE,GAe5B,MAbAwB,GAAM4B,QZhkCO,cYgkCqBpD,EAAM,SAAUyT,GAC9C,GAAI/Z,cAAyC,WAA3B+Z,EAAW5W,cAA6B2E,EAAMuP,iBAAkB,CAE9E0C,EAAe,MAAKA,EAAe,MAElCA,EAAWtQ,QACZ3B,EAAM4K,OZphCH,YYohC4BqH,GAE/B/Z,cAAyC,cAA3B+Z,EAAW5W,cAAgC2E,EAAMuP,mBAC/D0C,EAAW9X,IAAMiqB,aAAWnS,EAAW9X,MAE3CipB,EAAgBH,QAAQhR,KAErBmR,GAEX5nB,KAAKpI,KAAK+xB,eAAiB,SAAU3mB,GACjC,GAAItG,cAAc8H,EAAMuP,kBAAyC,oBAArB/Q,EAAKnD,YAAmC,CAEhF,IAAK,GADDoF,GAAOT,EAAM3F,UACRvH,EAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAAK,EAC9B2N,EAAK3N,GAAGiO,UAAUC,SAAS,uBAAyBP,EAAK3N,GAAGiO,UAAUC,SAAS,wBAC9EhB,EAAMwJ,mBAA0C,WAArBhL,EAAKnD,YAA4BwK,eAAapF,EAAK3N,IAAK,qBAChF+S,eAAapF,EAAK3N,IAAK,sBAC1BkN,EAAMwJ,mBAA0C,WAArBhL,EAAKnD,YAA4BuN,YAAUnI,EAAK3N,IAAK,sBAC7E8V,YAAUnI,EAAK3N,IAAK,qBAE5B,IAAIoI,GAAQuF,EAAK3N,GAAGoO,iBAAiB,cACjCmkB,EAAanqB,EAAM8E,EAAMpF,iBAAiB6U,uBAAuB,sBAAsB,IACvFvU,EAAM8E,EAAMpF,iBAAiB6U,uBAAuB,oBAAoB,EACxE4V,KACCrlB,EAAMwJ,mBAA0C,WAArBhL,EAAKnD,YAA4BwK,eAAawf,GAAa,oBACnFxf,eAAawf,GAAa,sBAC7BrlB,EAAMwJ,mBAA0C,WAArBhL,EAAKnD,YAA4BuN,YAAUyc,GAAa,sBAChFzc,YAAUyc,GAAa,qBAG/BF,GAA4C,kBAAnBA,IACzBA,EAAe3nB,MAAMwC,GAAQxB,IAiBrC,GAdAwB,EAAM4K,OAAO,iBAAkBpM,GAC/BwB,EAAM2Y,oBACN3Y,EAAMslB,sBACmB,YAArB9mB,EAAKnD,aACL2E,EAAM4K,OAAO,qBAEjB5K,EAAM4K,OAAO,kBAAoBtU,WAAYkI,IACpB,QAArBA,EAAKnD,aAAgE,QAAtC2E,EAAM1I,aAAaQ,gBAAkE,WAAtCkI,EAAM1I,aAAaQ,gBACjGkI,EAAM4K,OZ3jCA,WY2jCwBpM,GAET,cAArBA,EAAKnD,aACL2E,EAAM4K,OZxiCC,YYwiCwBpM,GAEnCwB,EAAM4K,OAAO,oBAAqBpM,GAC9BtG,cAAmC,WAArBsG,EAAKnD,cAA6B2E,EAAMuP,iBAAkB,CAExE/Q,EAAS,KAAIA,EAAS,KAAE,GAE5BwB,EAAM4B,QZrnCU,iBYqnCqBpD,KAG7CqX,EAASpZ,UAAUulB,mBAAqB,WACpC,GAAIhiB,GAAQxE,KACRiE,EAAWjE,IACfA,MAAKpI,KAAKwtB,kBAAoB,SAAUpiB,GACpCwB,EAAM4B,QZ1kCa,oBY0kCqBpD,GACxCwB,EAAM4K,OZ3kCa,oBY2kCoBpM,IAE3ChD,KAAKpI,KAAKmyB,gBAAkB,SAAU/mB,GAClCwB,EAAM4K,OAAO,kBAAmBpM,GAChCwB,EAAM4B,QZriCW,kBYqiCqBpD,IAE1ChD,KAAKpI,KAAKsV,aAAe,SAAUlK,GAC3BrL,oBAAkBqI,KAAKwW,YACvBlE,WAAS,cAAc,EAAOtP,GAG9BsP,WAAS,aAActS,KAAKwW,WAAYxT,GAE5CiB,EAAS1E,aAAaqO,YAAY5K,IAEtChD,KAAKpI,KAAKqV,cAAgB,SAAUjK,GAC5BrL,oBAAkBqI,KAAKwW,YACvBlE,WAAS,cAAc,EAAOtP,GAG9BsP,WAAS,aAActS,KAAKwW,WAAYxT,GAE5CiB,EAAS1E,aAAaC,WAAWwD,IAErChD,KAAKpI,KAAKoyB,iBAAmB,SAAUhnB,GACnCwB,EAAM4K,OZlnCY,mBYknCoBpM,GACtCwB,EAAM4B,QZnnCY,mBYmnCqBpD,IAE3ChD,KAAKpI,KAAKqyB,gBAAkB,SAAUjnB,GAClCwB,EAAM4K,OZxnCW,kBYwnCoBpM,GACrCwB,EAAM4B,QZznCW,kBYynCqBpD,IAE1ChD,KAAKpI,KAAKqV,cAAgB,SAAUjK,GAChCwB,EAAMjF,aAAaC,WAAWwD,KAGtCqX,EAASpZ,UAAU0lB,mBAAqB,WACpC,GAAIniB,GAAQxE,KACRiE,EAAWjE,IACfA,MAAKpI,KAAKsyB,mBAAqB,SAAUlnB,GACrCiB,EAASmC,QZrkCW,qBYqkCwBpD,IAEhDhD,KAAKpI,KAAKuyB,aAAe,SAAUnnB,GAC/BiB,EAASmC,QZpkCK,eYokCwBpD,IAE1ChD,KAAKpI,KAAKwyB,QAAU,SAAUpnB,GAC1B,GAAIwB,EAAM5M,KAAKyyB,OAEX,YADArnB,EAAKmD,QAAS,EAGlBlC,GAASmL,OZrkCG,cYqkCuBpM,GACnCiB,EAASmC,QZllCA,UYklCwBpD,IAErChD,KAAKpI,KAAK0yB,QAAU,SAAUtnB,GAC1B,GAAIwB,EAAM5M,KAAKyyB,OAEX,YADArnB,EAAKmD,QAAS,EAGlBlC,GAASmL,OZ3kCG,cY2kCuBpM,GACnCA,EAAKmD,QAAS,IAOtBkU,EAASpZ,UAAU6gB,SAAW,WAC1B9hB,KAAKmjB,qBACLnjB,KAAK+iB,iBACLzQ,WAAS,qBAAsBtS,KAAKuqB,mBAAoBvqB,KAAKpI,KAE7D0a,YAAS,mBAAoBtS,KAAQ,iBAAGA,KAAKpI,OAMjDyiB,EAASpZ,UAAU2gB,oBAAsB,WACrC,IAAK5hB,KAAKzI,QAAQC,SAAYwI,KAAK2hB,WAAWxQ,YAAc7Y,OAAOC,KAAKyH,KAAKpJ,YAAYY,OAAS,CAC9FwI,KAAKzI,UACL,IAAIoB,OAAS,EAIbA,GAASqH,KAAKpJ,WAAW,EAGzB,KAAK,GADD2B,GAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D0I,KAAKjD,aAAciD,KAAKpD,iBAAiB4B,QAAQjG,EAAKjB,KACvD0I,KAAKzI,QAAQkB,KAAKF,EAAKjB,MAKvC+iB,EAASpZ,UAAUojB,oBAAsB,WACrC,GAAInkB,KAYJ,QAVAA,EAAK6gB,YAAc/gB,KAAKlE,aAAailB,YACrC7gB,EAAKD,aAAeD,KAAKlE,aAAamE,aACtCC,EAAK8gB,cAAgBhhB,KAAKlE,aAAaklB,cACvC9gB,EAAK5D,eAAsD,WAArC0D,KAAKlE,aAAaQ,eAA8B,SAAW,MACjF4D,EAAKsqB,oBAAsBxqB,KAAKlE,aAAa0uB,oBAC7CtqB,EAAKuqB,kBAAoBzqB,KAAKlE,aAAa2uB,kBAC3CvqB,EAAKyP,SAAW3P,KAAKlE,aAAa6T,SAClCzP,EAAKwqB,wBAA0B1qB,KAAKlE,aAAa4uB,wBACjDxqB,EAAS,KAAIF,KAAKlE,aAAiB,KACnCoE,EAAKyqB,OAAS3qB,KAAKlE,aAAa6uB,OACxB3qB,KAAKlE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDmE,EAAKnE,KAAOiE,KAAKlE,aAAaC,IAC9B,MACJ,KAAK,MACDmE,EAAKnE,KAAO,QACZ,MACJ,KAAK,OACDmE,EAAKnE,KAAO,SACZmE,EAAKuqB,mBAAoB,EAGjC,MAAOvqB,IAMXma,EAASpZ,UAAUkjB,eAAiB,WAChC,GAAInkB,KAAKygB,iBAAkB,CAEvB,IAAK,GADDxN,MACK3b,EAAI,EAAGA,EAAI0I,KAAKygB,iBAAiBjpB,OAAQF,IAC9C,OACQ0I,KAAKygB,iBAAiBnpB,IAC1B,IAAK,SACL,IAAK+gB,oBAAiB2D,OAClB/I,EAAMxa,MAAOmyB,KAAM5qB,KAAKqc,KAAKwO,YAAY,UACrCxpB,OAAQ,aAAc6O,GAAIlQ,KAAKiQ,QAAQC,GAAK,4BAC5C+C,QAAU2X,KAAM5qB,KAAKqc,KAAKwO,YAAY,SAAU3a,GAAI,UAAa0a,KAAM5qB,KAAKqc,KAAKwO,YAAY,SAAU3a,GAAI,WAC/G,MACJ,SACI+C,EAAMxa,KAAKuH,KAAKygB,iBAAiBnpB,IAG7C,MAAO2b,GAGP,MAAO,OAOfoH,EAASpZ,UAAU8iB,eAAiB,WAChC,GAAI/jB,KAAKwgB,QAAS,CAEd,IAAK,GADDvN,MACK3b,EAAI,EAAGA,EAAI0I,KAAKwgB,QAAQhpB,OAAQF,IACrC,OACQ0I,KAAKwgB,QAAQlpB,IACjB,IAAK,SACL,IAAK8gB,eAAY0S,OACb7X,EAAMxa,KAAK,SACX,MACJ,KAAK,QACL,IAAK2f,eAAYxL,MACbqG,EAAMxa,KAAK,QACX,MACJ,KAAK,YACL,IAAK2f,eAAY6D,UACb,GAAI8O,GAAc/qB,KAAKqc,KAAKwO,YAAY,YACxC5X,GAAMxa,MAAOmyB,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAY9a,GAAIlQ,KAAKiQ,QAAQC,GAAK,0BAClD,MACJ,KAAK,cACL,IAAKkI,eAAY8D,YACb,GAAI+O,GAAUjrB,KAAKqc,KAAKwO,YAAY,cACpC5X,GAAMxa,MAAOmyB,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAc9a,GAAIlQ,KAAKiQ,QAAQC,GAAK,4BAE1E,MACJ,KAAK,SACL,IAAKkI,eAAY+D,UACb,GAAI+O,GAAgBlrB,KAAKqc,KAAKwO,YAAY,YAC1C5X,GAAMxa,MACFmyB,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAY9a,GAAIlQ,KAAKiQ,QAAQC,GAAK,uBAElD,MACJ,KAAK,UACL,IAAKkI,eAAYgE,WACb,GAAI+O,GAAiBnrB,KAAKqc,KAAKwO,YAAY,aAC3C5X,GAAMxa,MACFmyB,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAa9a,GAAIlQ,KAAKiQ,QAAQC,GAAK,wBAEnD,MACJ,SACI+C,EAAMxa,KAAKuH,KAAKwgB,QAAQlpB,IAGpC,MAAO2b,GAGP,MAAO,OAOfoH,EAASpZ,UAAUqiB,eAAiB,SAAU/rB,GAC1C,GAAIoI,GAASpI,CACbyI,MAAKif,cAIL,KAAK,GAHDmM,GACAC,EACAC,KACKh0B,EAAI,EAAGA,EAAIqI,EAAOnI,OAAQF,IAAK,CACpC,GAAImY,GAAazP,KAAKpI,KAAK2W,eAAe5O,EAAOrI,GAAG2R,IAGpD,IAFAoiB,EAAa5b,MACb2b,KAC+B,gBAApBprB,MAAKzI,QAAQD,GACpB+zB,EAAWhnB,MAAQ+mB,EAAe/mB,MAAQrE,KAAKzI,QAAQD,OAGvD,KAAK,GAAIi0B,GAAK,EAAGC,EAAKlzB,OAAOC,KAAKoH,EAAOrI,IAAKi0B,EAAKC,EAAGh0B,OAAQ+zB,IAAM,CAChE,GAAIxR,GAAOyR,EAAGD,EACVj0B,KAAM0I,KAAKZ,iBAA4B,aAAT2a,GAAwBrd,aAItD2uB,EAAWtR,GAAQqR,EAAerR,GAAQpa,EAAOrI,GAAGyiB,GAHpDqR,EAAerR,GAAQpa,EAAOrI,GAAGyiB,GAOzCpa,EAAOrI,GAAGC,QACVyI,KAAKsjB,eAAe/rB,EAAQD,GAAGC,SAG/ByI,KAAKif,YAAYxmB,KAAK,GAAIqH,GAAOsrB,IAErCE,EAAqB7yB,KAAK4yB,GAE9B,MAAOC,IAQXjR,EAASpZ,UAAUwqB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,GAFDC,IAAiB,EAEZL,EAAK,EAAGM,EAHAvzB,OAAOC,KAAKmzB,GAGeH,EAAKM,EAAar0B,OAAQ+zB,IAAM,CACxE,GAAIxR,GAAO8R,EAAaN,EACxB,QAAQxR,GACJ,IAAK,UACKrd,cAAcsD,KAAK+T,kBAAoB/T,KAAkB,gBAC3DA,KAAKpI,KAAKL,QAAUyI,KAAKsjB,eAAetjB,KAAKzI,SAEjD,MACJ,KAAK,kBACDyI,KAAKpI,KAAKk0B,gBACV,MACJ,KAAK,cACD9rB,KAAKpI,KAAKiW,YAAc7N,KAAK6N,WAC7B,MACJ,KAAK,eACD7N,KAAKpI,KAAKkW,aAAe0V,sBAAoBxjB,KAAK8N,cAClD8d,GAAiB,CACjB,MACJ,KAAK,uBACD5rB,KAAKpI,KAAKwG,qBAAuB4B,KAAK5B,oBACtC,MACJ,KAAK,UACD4B,KAAKpI,KAAK4oB,QAAUxgB,KAAK+jB,gBACzB,MACJ,KAAK,iBACD/jB,KAAKpI,KAAKspB,eAAiBlhB,KAAKkhB,cAChC,MACJ,KAAK,oBACDlhB,KAAKpI,KAAKsN,kBAAoBse,sBAAoBxjB,KAAKkF,kBACvD,MACJ,KAAK,eACDlF,KAAKpI,KAAK0I,aAAeN,KAAKM,YAC9B,MACJ,KAAK,oBACDN,KAAKpI,KAAKm0B,kBAAoB/rB,KAAK+rB,iBACnC,MACJ,KAAK,eACD/rB,KAAKpI,KAAK2G,aAAeilB,sBAAoBxjB,KAAKzB,aAClD,MACJ,KAAK,iBACDyB,KAAKpI,KAAKC,eAAiB2rB,sBAAoBxjB,KAAKnI,eACpD,MACJ,KAAK,iBACDmI,KAAKpI,KAAKI,eAAiBgI,KAAKhI,cAChC,MACJ,KAAK,iBACDgI,KAAKpI,KAAKK,eAAiBurB,sBAAoBxjB,KAAK/H,eACpD,MACJ,KAAK,iBACD+H,KAAKpI,KAAKyI,eAAiBL,KAAKK,cAChC,MACJ,KAAK,sBACDL,KAAKpI,KAAKyH,oBAAsBW,KAAKX,mBACrC,MACJ,KAAK,aACDW,KAAKpI,KAAKod,WAAawO,sBAAoBxjB,KAAKgV,WAChD,MACJ,KAAK,aAID,GAHAhV,KAAK8W,cAAiB9W,KAAKpJ,qBAAsBC,kBAAkBc,oBAAkBqI,KAAKpJ,WAAW+C,QAC9FqG,KAAKpJ,WAAWE,kBAAmB8oB,qBAC1C5f,KAAK6hB,gBAAgB7hB,KAAKpJ,YACtBoJ,KAAK8W,YAAa,CAClB,GAAI1f,EAAgB4I,MAAO,CACvB,GAAIqL,GAAQhN,WAAS,QAAS2B,KAAKpJ,WACnCoJ,MAAKpI,KAAKhB,YAAewZ,OAAQpQ,KAAK7C,SAAUkO,MAAOA,OAGvDrL,MAAKpI,KAAKhB,WAAeoJ,KAAKpJ,qBAAsBC,eAChC,GAAIA,eAAYmJ,KAAKpJ,WAAWA,WAAYoJ,KAAKpJ,WAAW4yB,aAAcxpB,KAAKpJ,WAAWE,SAA1GkJ,KAAK7C,QAET6C,MAAK5B,uBACL4B,KAAKpI,KAAK8d,cAAcsW,qBAAsB,OAIlDhsB,MAAKojB,mBACDpjB,KAAK5B,uBACL4B,KAAKpI,KAAK8d,cAAchO,sBACxB1H,KAAKpI,KAAK8d,cAAcuW,cAAc,MACtCjsB,KAAKpI,KAAK8d,cAAcwW,cAGhC,MACJ,KAAK,QACDlsB,KAAKpI,KAAKyZ,MAAQrR,KAAKqR,KACvB,MACJ,KAAK,oBACGqa,EAAQ3R,GACR/Z,KAAK+d,cAGL/d,KAAK8d,WAET,MACJ,KAAK,qBACD9d,KAAKpI,KAAKu0B,SACV,MACJ,KAAK,YACDnsB,KAAKpI,KAAKksB,UAAY9jB,KAAK8jB,SAC3B,MACJ,KAAK,cACD9jB,KAAKpI,KAAK4X,YAAcgU,sBAAoBxjB,KAAKwP,YACjD,MACJ,KAAK,aACDxP,KAAKpI,KAAKoH,WAAagB,KAAKhB,UAC5B,MACJ,KAAK,gBACDgB,KAAKpI,KAAK6W,cAAgBzO,KAAKyO,aAC/B,MACJ,KAAK,YACDzO,KAAKpI,KAAKisB,UAAY7jB,KAAK6jB,SAC3B,MACJ,KAAK,SACIlsB,oBAAkBqI,KAAKmiB,SAAoC,gBAAjBniB,eAA2D,IAA9BA,KAAKmiB,OAAO3jB,QAAQ,OAC5FwB,KAAKiQ,QAAQxV,MAAM0nB,OAASniB,KAAKmiB,QAErCniB,KAAKpI,KAAKuqB,OAASniB,KAAKmiB,MACxB,MACJ,KAAK,QACIxqB,oBAAkBqI,KAAK6J,QAAkC,gBAAhB7J,cAAyD,IAA7BA,KAAK6J,MAAMrL,QAAQ,OACzFwB,KAAKiQ,QAAQxV,MAAMoP,MAAQ7J,KAAK6J,OAEpC7J,KAAKpI,KAAKiS,MAAQ7J,KAAK6J,KACvB,MACJ,KAAK,SACD7J,KAAKpI,KAAK2kB,OAASvc,KAAKuc,MACxB,MACJ,KAAK,mBACDvc,KAAKpI,KAAKssB,iBAAmBlkB,KAAKkkB,gBAClC,MACJ,KAAK,eACDlkB,KAAKpI,KAAK8rB,aAAe1jB,KAAK0jB,YAC9B,MACJ,KAAK,cACD1jB,KAAKpI,KAAK+rB,YAAc3jB,KAAK2jB,WAC7B,MACJ,KAAK,iBACD3jB,KAAKpI,KAAKgsB,eAAiB5jB,KAAK4jB,cAChC,MACJ,KAAK,sBACD5jB,KAAKpI,KAAK0H,oBAAsBU,KAAKV,mBACrC,MACJ,KAAK,mBACDU,KAAKpI,KAAK8oB,iBAAmB1gB,KAAK0gB,gBAClC,MACJ,KAAK,iBACD1gB,KAAKpI,KAAKgpB,eAAiB5gB,KAAK4gB,cAChC,MACJ,KAAK,YACD5gB,KAAKpI,KAAKyrB,UAAYrjB,KAAKqjB,SAC3B,MACJ,KAAK,kBACDrjB,KAAKpI,KAAKwI,gBAAkBJ,KAAKI,eACjC,MACJ,KAAK,gBACDJ,KAAKpI,KAAK2I,cAAgBP,KAAKO,aAC/B,MACJ,KAAK,mBACDP,KAAKpI,KAAKqsB,iBAAmBT,sBAAoBxjB,KAAKikB,iBACtD,MACJ,KAAK,gBACDjkB,KAAKpI,KAAKsX,cAAgBsU,sBAAoBxjB,KAAKkP,eACnDlP,KAAKpI,KAAKu0B,SACV,MACJ,KAAK,mBACDnsB,KAAKpI,KAAK6oB,iBAAmBzgB,KAAKmkB,gBAClC,MACJ,KAAK,oBACDnkB,KAAKpI,KAAKipB,kBAAoB7gB,KAAK6gB,iBACnC,MACJ,KAAK,iBACD7gB,KAAKpI,KAAK+oB,eAAiB6C,sBAAoBxjB,KAAK2gB,eACpD,MACJ,KAAK,kBACD3gB,KAAKpI,KAAKwsB,gBAAkBZ,sBAAoBxjB,KAAKokB,gBACrD,MACJ,KAAK,eACGpkB,KAAKpI,KAAKyyB,QAA0C,WAAhCrqB,KAAKpI,KAAKkE,aAAaC,MAAqB2vB,EAAQ3R,GAAMhe,OACtD,SAAvB2vB,EAAQ3R,GAAMhe,MAA0C,QAAvB2vB,EAAQ3R,GAAMhe,OAChDiE,KAAKpI,KAAKw0B,YAEdpsB,KAAKpI,KAAKkE,aAAekE,KAAKqkB,sBAGlCuH,GACA5rB,KAAKpI,KAAKu0B,YAStB9R,EAASpZ,UAAU8F,QAAU,WACzB/G,KAAKqsB,iBACLrsB,KAAKshB,eACLvf,EAAOd,UAAU8F,QAAQnE,KAAK5C,MAC1BA,KAAKpI,MACLoI,KAAKpI,KAAKmP,UAEV/G,KAAK2hB,YACL3hB,KAAK2hB,WAAW5a,SAMpB,KAAK,GAJDuZ,IAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDhpB,EAAI,EAAGA,EAAIgpB,EAAQ9oB,OAAQF,IAC5B0I,KAAKsgB,EAAQhpB,MACb0I,KAAKsgB,EAAQhpB,IAAM,KAG3B0I,MAAKiQ,QAAQxF,UAAY,GACzBzK,KAAKpI,KAAO,MAQhByiB,EAASpZ,UAAUqrB,SAAW,WAC1BvqB,EAAOd,UAAUqrB,SAAS1pB,KAAK5C,MACzBtD,cAAcsD,KAAK+T,oBAAqB1V,WAAS,aAAc2B,KAAKpI,OAAUoI,KAAK9G,gBACrF8G,KAAKpI,KAAK00B,YAQlBjS,EAASpZ,UAAUsrB,eAAiB,WAWhC,IAAK,GAVDC,IAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACA3e,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG7V,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC0G,gBAAkBhH,WAAa2sB,qBAE/BwI,GAAkB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAC1Bp1B,EAAI,EAAGA,EAAIk1B,EAAUh1B,OAAQF,IAElC,IAAK,GADDq1B,GAAgB3sB,KAAKwsB,EAAUl1B,IAC1Bi0B,EAAK,EAAGC,EAAKiB,EAAgBD,EAAUl1B,IAAKi0B,EAAKC,EAAGh0B,OAAQ+zB,UAE1DoB,GADGnB,EAAGD,GAKrB,OADAvrB,MAAK4sB,eAAeF,EAAgB1sB,KAAKzI,SAClCyI,KAAK6sB,aAAaL,IAE7BnS,EAASpZ,UAAU2rB,eAAiB,SAAUF,EAAgBn1B,GAC1D,IAAK,GAAID,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACXyI,KAAK8sB,eAAeJ,EAAgBn1B,EAAQD,IAC5C0I,KAAK4sB,eAAeF,EAAgBn1B,EAAQD,GAAGC,UAG/CyI,KAAK8sB,eAAeJ,EAAgBn1B,EAAQD,KAIxD+iB,EAASpZ,UAAU6rB,eAAiB,SAAUJ,EAAgB/sB,GAC1D,IAAK,GAAIrI,GAAI,EAAGA,EAAIo1B,EAAel1B,OAAQF,UAChCqI,GAAO+sB,EAAep1B,IAC7BqI,EAAOvC,WAGfid,EAASpZ,UAAU8e,kBAAoB,SAAU1iB,GAC7C,GAAK1F,oBAAkB0F,EAAE0vB,SAAzB,CAGA,GAAI1rB,GAAShE,EAAEgE,QACVA,EAAOkE,UAAUC,SAAS,sBAC3BnE,EAAOkE,UAAUC,SAAS,uBAA4BxF,KAAKgtB,gBAAmBhtB,KAAKpI,KAAKyyB,QACxFrqB,KAAKke,sBAAsB7c,GAE/BrB,KAAKgtB,gBAAiB,EACtBhtB,KAAKoP,OAAO,qBAAuB/N,OAAQA,MAM/CgZ,EAASpZ,UAAUpC,QAAU,WACzB,MAAOmB,MAAKpI,KAAKiH,WAMrBwb,EAASpZ,UAAUgsB,SAAW,WAC1B,MAAOjtB,MAAKpI,KAAKq1B,YASrB5S,EAASpZ,UAAUisB,UAAY,SAAUzuB,EAAMtE,EAAOgzB,GAC9CntB,KAAKhE,YACLgE,KAAKhE,WAAWkxB,UAAUzuB,EAAMtE,EAAOgzB,IAM/C9S,EAASpZ,UAAUmrB,UAAY,WACvBpsB,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWowB,aAM7B/R,EAASpZ,UAAUmsB,SAAW,WACtBptB,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWoxB,YAS7B/S,EAASpZ,UAAUosB,WAAa,SAAUxmB,EAAUxC,EAAOnK,GACnD8F,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWqxB,WAAWxmB,EAAUxC,EAAOnK,IAQzDmgB,EAASpZ,UAAUqsB,UAAY,SAAUnzB,EAAOsE,GAC5C,GAAIuB,KAAKpI,KAAKoE,WACV,GAAKrE,oBAAkBwC,GAMnB6F,KAAKpI,KAAKoE,WAAWsxB,UAAUnzB,EAAOsE,OANX,CAC3B,GAAIykB,GAAWljB,KAAKpI,KAAK6F,wBAAwBtD,EACjDkC,UAAO6mB,EAAUzkB,GACjBuB,KAAKpI,KAAKoE,WAAWsxB,UAAUnzB,EAAO+oB,KAalD7I,EAASpZ,UAAUssB,aAAe,SAAUC,EAAW/uB,GAC/CuB,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWuxB,aAAaC,EAAW/uB,IAOrD4b,EAASpZ,UAAUwsB,UAAY,SAAU9uB,GACjCqB,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWyxB,UAAU9uB,IAQvC0b,EAASpZ,UAAUysB,SAAW,SAAU7mB,EAAUxC,GAC1CrE,KAAKhE,YACLgE,KAAKhE,WAAW0xB,SAAS7mB,EAAUxC,IAQ3CgW,EAASpZ,UAAU0sB,mBAAqB,SAAU1a,EAAO2a,GACjD5tB,KAAKpI,KAAKi2B,eACV7tB,KAAKpI,KAAKi2B,cAAcC,YAAY7a,EAAO2a,IAMnDvT,EAASpZ,UAAU8sB,QAAU,WACrB/tB,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAW+xB,WAS7B1T,EAASpZ,UAAU+sB,kBAAoB,SAAUC,EAAGC,GAC5CluB,KAAKmuB,qBACLnuB,KAAKmuB,oBAAoBH,kBAAkBC,EAAGC,IAOtD7T,EAASpZ,UAAUmtB,UAAY,SAAUliB,GACjClM,KAAKpI,KAAKoE,YACVgE,KAAKpI,KAAKoE,WAAWoyB,UAAUliB,IAOvCmO,EAASpZ,UAAUzF,wBAA0B,WACzC,MAAOwE,MAAKpI,KAAK4D,2BASrB6e,EAASpZ,UAAUotB,aAAe,SAAUv2B,EAAKuM,EAAOnK,GACpD8F,KAAKpI,KAAKy2B,aAAav2B,EAAKuM,EAAOnK,EACnC,IAAI2M,GAAW7G,KAAKpI,KAAKkH,wBAAwBhH,GAC7Ca,EAASqH,KAAKvC,wBAAwBoJ,EACrClP,qBAAkBgB,IACnBmC,GAAaZ,MAAOvB,EAAQ4C,OAAQ,QAAUyE,KAAMA,KAAK/E,gBAAiBtC,EAAOwB,MAAO6F,KAAKpI,KAAKssB,iBAAkB7f,IAS5HgW,EAASpZ,UAAUvC,WAAa,SAAU5G,EAAK6Q,GAC3C,GAAIzK,GAAiB8B,KAAKvC,wBACtB6wB,EAAatuB,KAAKpI,KAAK4D,0BAA0B,GACjDpB,EAAQ,EACRzB,IACJuF,GAAeijB,KAAK,SAAUjnB,EAAO5C,EAAG+F,GACpC,MAAInD,GAAMo0B,KAAgBx2B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfuO,EAAQvO,MAAQA,EAChBuO,EAAQxO,MAAQxB,EAAOwB,MACvBwO,EAAQpP,aAAeZ,EAAOY,aAC9BoP,EAAQtO,SAAW1B,EAAO0B,SAC1BsO,EAAQ1P,SAAWN,EAAOM,SAC1B0P,EAAQ5P,WAAaJ,EAAOI,WAC5B4P,EAAQwB,cAAgBxR,EAAOwR,cAC/BxB,EAAQrP,gBAAkBX,EAAOW,gBACjCqP,EAAQrK,eAAiB3F,EAAO2F,eAChCqK,EAAQvP,SAAWT,EAAOS,SAC1B4G,KAAKpI,KAAK8G,WAAW5G,EAAK6Q,IAO9B0R,EAASpZ,UAAUstB,SAAW,SAAUC,GAChCxuB,KAAKpI,KAAK62B,aACVzuB,KAAKpI,KAAK62B,YAAYF,SAASC,IAQvCnU,EAASpZ,UAAUytB,sBAAwB,SAAUnrB,GAC7CvD,KAAKyuB,aACLzuB,KAAKpI,KAAK62B,YAAYC,sBAAsBnrB,IASpD8W,EAASpZ,UAAU0tB,iBAAmB,SAAU9nB,EAAUkC,GACtD,MAAO/I,MAAKpI,KAAK+2B,iBAAiB9nB,EAAUkC,IAOhDsR,EAASpZ,UAAUuW,iBAAmB,SAAUnT,GAC5C,MAAI3H,eAAcsD,KAAK+T,iBACZ6a,uBAAqB5uB,KAAKpI,KAAKL,QAAS,SAAU2L,EAAM/I,GAC3D,GAAI+I,EAAKmB,QAAUA,EACf,MAAOnB,KAGZ,GAGI0rB,uBAAqB5uB,KAAKif,YAAa,SAAU/b,EAAM/I,GAC1D,GAAI+I,EAAKmB,QAAUA,EACf,MAAOnB,KAGZ,IAQXmX,EAASpZ,UAAUsN,eAAiB,SAAUtF,GAC1C,MAAO2lB,wBAAqB5uB,KAAKpI,KAAKL,QAAS,SAAU2L,EAAM/I,GAC3D,GAAI+I,EAAK+F,MAAQA,EACb,MAAO/F,KAGZ,IAMPmX,EAASpZ,UAAU4tB,oBAAsB,WACrC,MAAO7uB,MAAKpI,KAAKi3B,uBAMrBxU,EAASpZ,UAAU6tB,iBAAmB,WAClC,MAAO9uB,MAAKpI,KAAKk3B,oBAMrBzU,EAASpZ,UAAU8tB,sBAAwB,WACvC,MAAO/uB,MAAKpI,KAAKm3B,yBAQrB1U,EAASpZ,UAAU+tB,YAAc,SAAUz2B,EAAM02B,GAC7CjvB,KAAKpI,KAAKo3B,YAAYz2B,EAAM02B,GAC5BjvB,KAAKmd,qBAQT9C,EAASpZ,UAAUiuB,YAAc,SAAU32B,EAAM42B,GAC7CnvB,KAAKpI,KAAKs3B,YAAY32B,EAAM42B,GAC5BnvB,KAAKmd,qBAOT9C,EAASpZ,UAAUmuB,uBAAyB,SAAU/qB,GAClD,MAAOrE,MAAKpI,KAAKw3B,uBAAuB/qB,IAO5CgW,EAASpZ,UAAUouB,uBAAyB,SAAUl1B,GAClD,MAAO6F,MAAKpI,KAAKy3B,uBAAuBl1B,IAO5CkgB,EAASpZ,UAAUquB,qBAAuB,SAAUrmB,GAChD,MAAOjJ,MAAKpI,KAAK03B,qBAAqBrmB,IAO1CoR,EAASpZ,UAAUsuB,sBAAwB,SAAUlrB,GACjD,MAAOrE,MAAKpI,KAAK23B,sBAAsBlrB,IAO3CgW,EAASpZ,UAAUyN,oBAAsB,SAAUzF,GAC/C,MAAOjJ,MAAKpI,KAAK8W,oBAAoBzF,IAMzCoR,EAASpZ,UAAUrB,WAAa,SAAU4vB,GACtC,MAAI9yB,eAAcsD,KAAK+T,iBACZ/T,KAAKpI,KAAKL,SAGjByI,KAAKmd,kBAAkBnd,KAAKpI,KAAKgI,WAAW4vB,IACrCxvB,KAAKif,cAGpB5E,EAASpZ,UAAUkc,kBAAoB,SAAUxd,GAC7C,GAAIoY,GACA1T,EACAorB,EAAc93B,oBAAkBgI,GAAUK,KAAKpI,KAAKgI,aAAeD,GACzC,IAA1BK,KAAKZ,iBAA0BY,KAAKzI,QAAQyI,KAAKZ,mBAChDzH,oBAAkBqI,KAAKzI,QAAQyI,KAAKZ,iBAAiBuQ,YACtDoI,EAAO/X,KAAKzI,QAAQyI,KAAKZ,iBAAiBuQ,SAC1CtL,EAAQrE,KAAKzI,QAAQyI,KAAKZ,iBAAiBiF,OAE/CrE,KAAKif,cAGL,KAAK,GADDoM,GADAqE,GAAgB,EAEXp4B,EAAI,EAAGA,EAAIm4B,EAAYj4B,OAAQF,IAAK,CACzC+zB,IACA,KAAK,GAAIE,GAAK,EAAGC,EAAKlzB,OAAOC,KAAKk3B,EAAYn4B,IAAKi0B,EAAKC,EAAGh0B,OAAQ+zB,IAAM,CACrE,GAAIxR,GAAOyR,EAAGD,EACT7uB,eAAuB,SAATqd,IACfsR,EAAWtR,GAAQ0V,EAAYn4B,GAAGyiB,IAG1C/Z,KAAKif,YAAYxmB,KAAK,GAAIqH,GAAOurB,IAC7BhnB,IAAUrE,KAAKif,YAAY3nB,GAAG+M,OAAW1M,oBAAkBogB,IAAkB,KAATA,IACpE/X,KAAKif,YAAY3nB,GAAGqY,SAAWoI,GAGvC,IAAKrb,eAAesD,KAAK+T,iBAAkB,CAEvC/T,KAAU,WAAK,WACXA,KAAKpI,KAAKL,QAAQC,SAAWwI,KAAKif,YAAYznB,SAC9Ck4B,GAAgB,GAEfA,GACD1vB,KAAKga,eAAgBziB,QAASyI,KAAKif,cAAe,GAEtDjf,KAAU,cAAIsZ,GAElB,MAAOtZ,MAAKif,aAMhB5E,EAASpZ,UAAU0uB,WAAa,WAC5B,MAAO3vB,MAAKpI,KAAK+3B,cAErBtV,EAASpZ,UAAU2Z,yBAA2B,WAE1C5a,KAAKpI,KAAa,qBAAEoK,MAAMhC,OAE9Bqa,EAASpZ,UAAU2uB,aAAe,SAAUC,EAAct4B,GAEtDyI,KAAKpI,KAAa,aAAEoK,MAAMhC,MAAO6vB,EAAct4B,KAEnD8iB,EAASpZ,UAAU6oB,oBAAsB,WACrC9pB,KAAKga,eAAgB/hB,eAAgBO,YAAU,aAAcwH,KAAKpI,KAAKK,kBAAmB,GAC1F+H,KAAKga,eAAgBlM,aAActV,YAAU,aAAcwH,KAAKpI,KAAKkW,gBAAiB,GACtF9N,KAAKga,eAAgBniB,eAAgBW,YAAU,aAAcwH,KAAKpI,KAAKC,kBAAmB,GAC1FmI,KAAKga,eAAgBzb,aAAc/F,YAAU,aAAcwH,KAAKpI,KAAK2G,gBAAiB,IAM1F8b,EAASpZ,UAAU6S,gBAAkB,WACjC,MAAO9T,MAAKpI,KAAKkc,mBAMrBuG,EAASpZ,UAAU6uB,YAAc,WAG7B,IAAK,GAFDC,MACA9qB,EAAOjF,KAAKpI,KAAKk4B,cACZx4B,EAAI,EAAGe,EAAM4M,EAAKzN,OAAQF,EAAIe,EAAKf,IACnC2N,EAAK3N,GAAGiO,UAAUC,SAAS,iBAC5BuqB,EAAMt3B,KAAKwM,EAAK3N,GAGxB,OAAOy4B,IAOX1V,EAASpZ,UAAUxD,sBAAwB,WACvC,MAAOuC,MAAKpI,KAAK+E,iBAMrB0d,EAASpZ,UAAUhF,gBAAkB,WACjC,MAAO+D,MAAKpI,KAAKoE,WAAWC,mBAMhCoe,EAASpZ,UAAUkI,iBAAmB,WAClC,MAAOnJ,MAAKpI,KAAKuR,oBAMrBkR,EAASpZ,UAAU+uB,eAAiB,WAChC,MAAOhwB,MAAKpI,KAAKo4B,kBAOrB3V,EAASpZ,UAAUrC,cAAgB,SAAUzE,GACzC,MAAO6F,MAAKpI,KAAKgH,cAAczE,IAOnCkgB,EAASpZ,UAAUgvB,WAAa,SAAU5uB,GACtC,MAAOrB,MAAKpI,KAAKq4B,WAAW5uB,IAOhCgZ,EAASpZ,UAAUivB,oBAAsB,SAAU7rB,GAC/C,MAAOrE,MAAKpI,KAAKs4B,oBAAoB7rB,IAMzCgW,EAASpZ,UAAUgF,kBAAoB,WAEnC,IAAK,GADDkqB,MACK5E,EAAK,EAAGC,EAAKxrB,KAAKif,YAAasM,EAAKC,EAAGh0B,OAAQ+zB,IAAM,CAC1D,GAAIviB,GAAMwiB,EAAGD,EACTviB,GAAIonB,SACJD,EAAK13B,KAAKuQ,GAGlB,MAAOmnB,IAKX9V,EAASpZ,UAAU2T,YAAc,WAC7BA,cAAY5U,KAAKiQ,UAKrBoK,EAASpZ,UAAUwR,YAAc,WAC7BA,cAAYzS,KAAKiQ,UAKrBoK,EAASpZ,UAAUkrB,QAAU,WACzBnsB,KAAK6hB,gBAAgB7hB,KAAKpJ,YAC1BoJ,KAAKpI,KAAKhB,WAAeoJ,KAAKpJ,qBAAsBC,eAChC,GAAIA,eAAYmJ,KAAKpJ,WAAWA,WAAYoJ,KAAKpJ,WAAW4yB,aAAcxpB,KAAKpJ,WAAWE,SAA1GkJ,KAAK7C,SACT6C,KAAKpI,KAAKu0B,WAOd9R,EAASpZ,UAAU2H,kBAAoB,WACnC,MAAO5I,MAAKgjB,gBAAgBtW,qBAOhC2N,EAASpZ,UAAUovB,kBAAoB,WACnC,GAAIC,MACA9yB,EAAqBwC,KAAKvC,uBAC9B,IAAKuC,KAAK6N,YASNyiB,EAAiB9yB,MARjB,KAAK,GAAIlG,GAAI,EAAGA,EAAIkG,EAAmBhG,OAAQF,IAC3Cg5B,EAAe73B,KAAK+E,EAAmBlG,IAClCkG,EAAmBlG,GAAG8B,WACvB9B,GAAK+B,EAAoBmE,EAAmBlG,IAAIE,OAO5D,OAAO84B,IAMXjW,EAASpZ,UAAU0L,qBAAuB,WACtC,MAAO3M,MAAKgjB,gBAAgBrW,wBAKhC0N,EAASpZ,UAAUiH,iBAAmB,SAAUqoB,GAC5CvwB,KAAKgjB,gBAAgB9a,iBAAiBqoB,IAK1ClW,EAASpZ,UAAU6qB,eAAiB,SAAU0E,GACtC74B,oBAAkB64B,IAAcA,GAChCxwB,KAAKpI,KAAKL,QAAUyI,KAAKsjB,eAAetjB,KAAKzI,SAC7CyI,KAAKpI,KAAKk0B,kBAGV9rB,KAAKpI,KAAKoiB,eAAgBziB,QAASyI,KAAKsjB,eAAetjB,KAAKzI,WAAY,IAMhF8iB,EAASpZ,UAAUwvB,cAAgB,WAC/BzwB,KAAKpI,KAAK64B,iBAOdpW,EAASpZ,UAAUid,sBAAwB,SAAU7c,GACjD,GAA+B,UAA3BrB,KAAKlE,aAAaC,KAAkB,CAGpC,GAAIiE,KAAK/D,kBAAkB+D,KAAKwa,gBAAgBhjB,QAC5CwI,KAAK/D,kBAAkB+D,KAAKya,gBAAgBjjB,QAAUwI,KAAK/D,kBAAkB+D,KAAKsQ,cAAc9Y,OAAQ,CACxG,GAAIk5B,GAAY1wB,KAAKpI,KAAKoE,WAAc,SAGxC,OAFAgE,MAAKpI,KAAKoE,WAAqB,WAAE,aAAc00B,QAC/C1wB,KAAK2wB,cAAgBtvB,IAI7B,GAAIrB,KAAKwP,YAAa,CAClB,GAAIohB,GAAUvvB,EAAO4G,QAAQ,kBAAkBoW,cAC3C1lB,EAASqH,KAAKvC,wBAAwBmzB,EAAQ/pB,SAC9CxF,GAAOkE,UAAUC,SAAS,oBAC1BxF,KAAKie,YAAY2S,EAASj4B,GAG1BqH,KAAKoe,UAAUwS,EAASj4B,OAG3B,CAEGA,GADAi4B,EAAU5wB,KAAKpI,KAAKq4B,WAAW5uB,IACdsH,OACjB3I,MAAKV,qBAAsD,IAA/BhH,OAAOC,KAAKI,GAAQnB,SAChDmB,EAASqH,KAAKvC,wBAAwBmzB,EAAQ/pB,WAE9CxF,EAAOkE,UAAUC,SAAS,oBAC1BxF,KAAKie,YAAY2S,EAAQjyB,IAAKhG,GAG9BqH,KAAKoe,UAAUwS,EAAQjyB,IAAKhG,KAQxC0hB,EAASpZ,UAAUmd,UAAY,SAAUzf,EAAKhG,GAC1C,GAAI6L,GAAQxE,IACZrH,GAASqH,KAAK6wB,yBAAyBlyB,EAAKhG,IACvChB,oBAAkBgH,IAAQA,EAAIe,MAAM,GAAG6F,UAAUC,SAAS,kBAC3DxF,KAAK6mB,cAAcloB,GAAK,EAE5B,IAAIqE,IAASvE,KAAM9F,EAAQgG,IAAKA,EAAKwH,QAAQ,EAC7CnG,MAAKoG,QZ3vEU,YY2vEgBpD,EAAM,SAAU8tB,GAC3C,IAAKA,EAAc3qB,SACf3B,EAAMusB,eAAe,SAAUpyB,EAAKhG,KAC9BjC,EAAa8N,IAAW/K,EAAU+K,MAAYpN,EAAgBoN,IAAQ,CACxE,GAAIwsB,IAAiBvyB,KAAM9F,EAAQgG,IAAKA,EACxC6F,GAAM4B,QZlwEJ,WYkwE6B4qB,OAK/C3W,EAASpZ,UAAU4vB,yBAA2B,SAAUlyB,EAAKhG,GAUzD,MATIqH,MAAK6N,aAAkD,QAAnC7N,KAAK8N,aAAaC,cAA0B/N,KAAKkf,aAAevnB,oBAAkBgB,KACrGjC,EAAasJ,MACdrH,EAASqH,KAAK7C,SAASC,OAAO,SAAUC,GACpC,MAAOA,GAAE/D,kBAGR3B,oBAAkBgB,KACvBA,EAASqH,KAAKpI,KAAK6F,wBAAwBkB,EAAIkI,WAE5ClO,GAMX0hB,EAASpZ,UAAUgd,YAAc,SAAUtf,EAAKhG,GAC5C,GAAI6L,GAAQxE,KAERgD,GAASvE,KADb9F,EAASqH,KAAK6wB,yBAAyBlyB,EAAKhG,GACjBgG,IAAKA,EAAKwH,QAAQ,EAC7CnG,MAAKoG,QZrxEW,aYqxEgBpD,EAAM,SAAUiuB,GAC5C,IAAKA,EAAe9qB,OAAQ,CACxB3B,EAAMusB,eAAe,WAAYpyB,EAAKhG,EACtC,IAAIq4B,IAAiBvyB,KAAM9F,EAAQgG,IAAKA,EACnCjI,GAAa8N,IACdA,EAAM4B,QZ5xEH,YY4xE6B4qB,OAShD3W,EAASpZ,UAAUiwB,cAAgB,SAAU92B,GACzC,IAAM4F,KAAK6N,aAAkD,QAAnC7N,KAAK8N,aAAaC,cAA2B/N,KAAK5B,wBAA0B1H,EAAasJ,MAAO,CAClH8L,EAAM9L,KAAKpI,KAAKhB,WAAWwG,OAAO,SAAUC,GAI5C,MAHIA,GAAE/D,iBAAmB+D,EAAEjD,QAAUA,IACjCiD,EAAEjE,UAAW,GAEViE,EAAE/D,iBAAmB+D,EAAEjD,QAAUA,GAE5C4F,MAAKoe,UAAU,KAAMtS,OAMrB,KAAK,GAHDA,GAAM9L,KAAKmxB,iBAAiB/2B,GAC5BuE,EAAMnG,YAAU,OAAQsT,GACxBnT,EAASH,YAAU,UAAWsT,GACzBxU,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B0I,KAAKoe,UAAUzf,EAAIrH,GAAIqB,EAAOrB,KAI1C+iB,EAASpZ,UAAUkwB,iBAAmB,SAAU/2B,GAC5C,GAAI6K,GAAOjF,KAAKnB,UAAUzB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAEmM,UAAUhL,QAAQ,QAAUpE,KAC9BiD,EAAE2K,cAAc,wBAA0B3K,EAAE2K,cAAc,uBAItE,QADY7P,QADE6H,KAAKvC,wBAAwBL,OAAO,SAAUC,GAAK,MAAOA,GAAEjD,QAAUA,GAASiD,EAAE/D,kBACjE2L,KAAMA,IAOxCoV,EAASpZ,UAAUmwB,gBAAkB,SAAUh3B,GAC3C,IAAM4F,KAAK6N,aAAkD,QAAnC7N,KAAK8N,aAAaC,cAA2B/N,KAAK5B,wBAA0B1H,EAAasJ,MAAO,CACtH,GAAIrH,GAASqH,KAAKpI,KAAKhB,WAAWwG,OAAO,SAAUC,GAI/C,MAHIA,GAAE/D,iBAAmB+D,EAAEjD,QAAUA,IACjCiD,EAAEjE,UAAW,GAEViE,EAAE/D,iBAAmB+D,EAAEjD,QAAUA,GAE5C4F,MAAKie,YAAY,KAAMtlB,OAMvB,KAAK,GAHDmT,GAAM9L,KAAKmxB,iBAAiB/2B,GAC5B6K,EAAOzM,YAAU,OAAQsT,GACzB3T,EAAUK,YAAU,UAAWsT,GAC1BxU,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC0I,KAAKie,YAAYhZ,EAAK3N,GAAIa,EAAQb,GAG1C,KAAK0I,KAAKpI,KAAK8d,cAAcsW,qBAAuBhsB,KAAK5B,sBAAwB4B,KAAKnB,WAC/EmB,KAAK9C,WAAW1F,SAAWwI,KAAKnB,UAAUrH,OAAQ,CAErDwI,KAAKpI,KAAK8d,cAAc2b,YAAc,EACtCrxB,KAAKpI,KAAK8d,cAAsB,UAAK,IAO7C2E,EAASpZ,UAAU6c,UAAY,WAC3B9d,KAAKsxB,kBAAkB,WAM3BjX,EAASpZ,UAAU8c,YAAc,WAC7B/d,KAAKsxB,kBAAkB,aAE3BjX,EAASpZ,UAAUqwB,kBAAoB,SAAU/1B,GAC7C,GAAI0J,GAAOjF,KAAKnB,UAAUzB,OAAO,SAAUC,GACvC,MAAOA,GAAE2K,cAAc,eAA4B,WAAXzM,EAAsB,WAAa,YAI/E,IAFAyE,KAAKkf,aAAc,EACnBlf,KAAKmf,eAAgB,GACfnf,KAAK6N,aAAkD,QAAnC7N,KAAK8N,aAAaC,cAA2B/N,KAAK5B,wBAA0B1H,EAAasJ,OAM/G,GALAA,KAAK7C,SAASC,OAAO,SAAUC,GACvBA,EAAE/D,kBACF+D,EAAEjE,SAAsB,aAAXmC,KAGjB0J,EAAKzN,OACM,aAAX+D,EAAwByE,KAAKie,YAAYhZ,EAAK,IAAMjF,KAAKoe,UAAUnZ,EAAK,QAEvE,IAAIjF,KAAK6N,YAAa,CACvB,GAAI0jB,GAAsBvxB,KAAKgO,iBAC/BhO,MAAKga,eAAgBhM,mBAAmB,IAAQ,GAChDhO,KAAKpI,KAAK62B,YAAYF,SAAS,GAC/BvuB,KAAKga,eAAgBhM,kBAAmBujB,IAAuB,QAInE,KAAK,GAAIj6B,GAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAClB,aAAXiE,EAAwByE,KAAKie,YAAYhZ,EAAK3N,IAAM0I,KAAKoe,UAAUnZ,EAAK3N,GAGhF0I,MAAKkf,aAAc,EACnBlf,KAAKmf,eAAgB,GAEzB9E,EAASpZ,UAAU8vB,eAAiB,SAAUx1B,EAAQoD,EAAKhG,EAAQib,GAC/D,GAIII,GAJA8c,GAAkBnyB,IAAKA,EAAKF,KAAM9F,EAAQqO,aAAenH,YAAatE,GACtEhC,EAAeyG,KAAKvC,wBAAwBL,OAAO,SAAUC,GAC7D,MAAOA,GAAEiB,iBAAmB3F,EAAOM,YAGlCvC,EAAasJ,OAAoB,WAAXzE,GAAuByE,KAAK/E,iBAAmB7D,EAAgB4I,QAAUzG,EAAa/B,QAC7GwI,KAAKwxB,oBAAoBV,EAE7B,IAAIjd,GAAW7T,KAAKnB,SACpB,IAAImB,KAAKwP,YAAa,CACdvK,EAAOjF,KAAK8T,kBAAkB7O,IAClC4O,MAAcpO,MAAM7C,KAAKqC,GAa7B,GAVItN,oBAAkBgH,GAElBA,EAAMkV,EADK7T,KAAKvC,wBAAwBe,QAAQ7F,KAIpCgG,EAAIyK,aAAa,iBAE5BzR,oBAAkBgH,IACnBA,EAAIuL,aAAa,gBAA4B,WAAX3O,EAAsB,OAAS,WAE/DyE,KAAK6N,aAAkD,QAAnC7N,KAAK8N,aAAaC,cAA2B/N,KAAK5B,uBAA0B1H,EAAasJ,OAC3G5I,EAAgB4I,MAGnB,CACD,GAAIyxB,OAAgB,EACpB,IAAe,WAAXl2B,EAAqB,CAarB,GAZAk2B,EAAgB,YACX7d,IACDjb,EAAOS,UAAW,EAClB4G,KAAKsa,mBAAmB3hB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBgH,KACnBqV,EAAYrV,EAAIsV,uBAAuB,sBAAsB,IAE7DL,IAAYjc,oBAAkBgB,EAAOqH,KAAK7G,sBAC1CR,EAAOqH,KAAK7G,qBAAuBxB,oBAAkBqc,KACrDA,EAAYrV,EAAIsV,uBAAuB,oBAAoB,IAE3Dtc,oBAAkBqc,GAClB,MAECA,GAAUzO,UAAUC,SAAS,qBAC9B4H,YAAU4G,GAAY,oBAE1B3J,eAAa2J,GAAY,0BAExB,CAaD,GAZAyd,EAAgB,OACX7d,IAAWxc,EAAgB4I,QAC5BrH,EAAOS,UAAW,EAClB4G,KAAKsa,mBAAmB3hB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBgH,KACnBqV,EAAYrV,EAAIsV,uBAAuB,oBAAoB,IAE3DL,IAAYjc,oBAAkBgB,EAAOqH,KAAK7G,uBACzCR,EAAOqH,KAAK7G,qBAAuBxB,oBAAkBqc,KACtDA,EAAYrV,EAAIsV,uBAAuB,sBAAsB,IAE7Dtc,oBAAkBqc,GAClB,MAECA,GAAUzO,UAAUC,SAAS,uBAC9B4H,YAAU4G,GAAY,sBAE1B3J,eAAa2J,GAAY,oBAE7B,GAAI0d,GAAa7d,EAASzW,OAAO,SAAUqE,GACvC,MAAOA,GAAE8D,UAAUC,SAAS,uBAAyB7M,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,KAUlG,IARI1D,EAAasJ,QAAUvG,EAAUuG,MACjCA,KAAK2xB,aAAap2B,EAAQoD,EAAKhG,EAAQib,GAGjCxc,EAAgB4I,QAASzG,EAAa/B,QAAsB,aAAX+D,GACnDyE,KAAK4xB,YAAYr2B,EAAQoD,EAAKhG,EAAQib,GAG1C5T,KAAKgnB,kBAAoBroB,EAAIe,MAAM,GAAG6F,UAAUC,SAAS,iBAIzD,IAAK,GAHD6hB,GAAYrnB,KAAKnB,UACjBoG,EAAOjF,KAAK8T,kBAAkB7O,KAEzB3N,GADT+vB,KAAe5hB,MAAM7C,KAAKqC,IACHzN,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAAS8sB,EAAU/vB,IAAK,CACzB,GACIu6B,GADQ7xB,KAAK8T,kBACGge,aAChBC,EAAe/xB,KAAK2vB,aAAaoC,YACrC/xB,MAAK6mB,cAAcQ,EAAU/vB,GAAIu6B,GAAWE,EAC5C,OAIZ/xB,KAAKoP,OAAO,qBAAuBsiB,WAAYA,EAAYn2B,OAAQk2B,EAAe94B,OAAQA,EAAQgG,IAAKA,IACvGqB,KAAKmnB,aAAatT,OAxElB7T,MAAKoP,OZ/5EqB,4BY+5EqB7T,OAAQA,EAAQoD,IAAKA,EAAKhG,OAAQA,KA2EzF0hB,EAASpZ,UAAUuwB,oBAAsB,SAAUV,GAC/C,GAAItsB,GAAQxE,KACRgyB,EAAO,GAAIzK,WAEfuJ,GAA2B,cAAIkB,EAAKvK,OACpC,IAAI9uB,GAASm4B,EAAcryB,IAC3BuB,MAAKoG,QZ9gFgB,kBY8gFgB0qB,GACrCkB,EAAKlJ,QAAQ7W,KAAK,SAAU5U,GACxB,GAAIyzB,EAAc9pB,UAAUxP,OAAQ,CAGhC,IAAK,GAFD2e,GAAe3R,EAAe,SAC9BrK,EAAQ,EACH7C,EAAI,EAAGA,EAAI6e,EAAY3e,OAAQF,IACpC,GAAI6e,EAAY7e,GAAG+C,WAAa1B,EAAO0B,SAAU,CAC7CF,EAAQ7C,CACR,OAOR,IAAK,GAJD26B,GAAS5zB,WAAS,SAAUmG,EAAM5N,YAClCoQ,EAAYpN,EAAYk3B,EAAc9pB,WACtCkrB,EAAWv5B,EAAO6L,EAAMzH,eACxBpE,EAAO6L,EAAMzH,cAAcvF,OAASwP,EAAUxP,OAASmB,EAAO6L,EAAMzH,cAAcvF,OAA4BwP,EAAUxP,OACnHF,EAAI,EAAGA,EAAI46B,EAAU56B,IACtBqB,EAAO6L,EAAMzH,eACbk1B,EAAO70B,OAAO,SAAUC,EAAG/F,GACnB+F,EAAEmH,EAAM5H,mBAAqBjE,EAAO6L,EAAM3H,YAC1Co1B,EAAOn1B,OAAOxF,EAAG,KAIzB0P,EAAU1P,IACV0P,EAAU1P,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpC4M,EAAU1P,GAAG6C,MAAQqZ,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC1M,EAAU1P,GAAGyB,WAAasD,YAAW1D,GACrCqO,EAAU1P,GAAG+C,SAAWgC,YAAW2K,EAAU1P,UACtC0P,GAAU1P,GAAGyB,WAAWQ,mBACxByN,GAAU1P,GAAG+C,SAAStB,WAC7BiO,EAAU1P,GAAGgH,eAAiB3F,EAAOM,SACrC+N,EAAU1P,GAAG2B,SAAWsa,SAAO/O,EAAMyL,QAAQC,GAAK,UAClDoC,WAAS,sBAAwBtL,EAAU1P,GAAG2B,SAAU+N,EAAU1P,GAAIkN,KACjE7M,oBAAkBqP,EAAU1P,GAAGkN,EAAMzH,gBACrCiK,EAAU1P,GAAGkN,EAAMoN,kBAAoBxa,EAAgBoN,MACxDwC,EAAU1P,GAAGgC,iBAAkB,GAEnC6c,EAAYrZ,OAAO3C,EAAQ,EAAI7C,EAAGqB,EAAO6L,EAAMzH,eAAiBpE,EAAO6L,EAAMzH,cAAczF,GAAK,EAAI,EAAG0P,EAAU1P,KAGjH6e,EAAYrZ,OAAO3C,EAAQ,EAAI7C,EAAG,EAG1C6e,GAAYhc,GAAOqK,EAAMzH,cAAgBiK,EACzCmP,EAAYhc,GAAOZ,aAAeyN,EAClCmP,EAAYhc,GAAOf,UAAW,EAC9BkZ,WAAS,sBAAwB6D,EAAYhc,GAAOlB,SAAUkd,EAAYhc,GAAQqK,EAClF,KAAK,GAAIxK,GAAI,EAAGA,EAAI82B,EAAc9pB,UAAUxP,OAAQwC,IAChDi4B,EAAOx5B,KAAKq4B,EAAc9pB,UAAUhN,IAG5CwK,EAAM8jB,iBAAkB,EACxB9jB,EAAM5M,KAAKu0B,UACX3nB,EAAM4B,QZ/iFI,WY+iFqB0qB,MAGvCzW,EAASpZ,UAAU0wB,aAAe,SAAUp2B,EAAQoD,EAAKhG,EAAQib,GAC7D,GAAIC,GAAW7T,KAAKnB,SACpB,IAAImB,KAAKwP,YAAa,CAClB,GAAI2iB,GAASnyB,KAAK8T,kBAAkB7O,IACpC4O,MAAcpO,MAAM7C,KAAKuvB,GAE7B,GAAInvB,IAASvE,KAAM9F,EAAQgG,IAAKA,GAC5BsG,IAIJ,IAHAA,EAAO4O,EAASzW,OAAO,SAAUqE,GAC7B,MAAOA,GAAEuG,cAAc,kBAAoBrP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXmB,EAAqB,CACrByE,KAAKoP,OZtjFS,gBYsjFqBzW,OAAQA,EAAQsM,KAAMA,EAAMmP,UAAWzV,GAC1E,IAAIyzB,IAAWzzB,IAAKA,EAAKF,KAAM9F,EAC3BsM,GAAKzN,OAAS,GACdwI,KAAKoG,QZjkFC,WYikFwBgsB,OAIlCpyB,MAAKqyB,qBAAsB15B,OAAQA,EAAQsM,KAAMA,IACjDjF,KAAKoG,QZlkFM,YYkkFoBpD,IAGvCqX,EAASpZ,UAAU2wB,YAAc,SAAUr2B,EAAQoD,EAAKhG,EAAQib,GAC5D,GAAI3O,GACA1L,EAAeyG,KAAKvC,wBAAwBL,OAAO,SAAUC,GAC7D,MAAOA,GAAEiB,iBAAmB3F,EAAOM,UAEnC+G,MAAKgnB,iBAAmBroB,EAAIe,MAAM,GAAG6F,UAAUC,SAAS,kBACxDxF,KAAK6mB,cAAcloB,GAAK,EAE5B,IAAI2zB,GACAze,EAAW7T,KAAKnB,SACpB,IAAImB,KAAKwP,YAAa,CAClB,GAAI+iB,GAASvyB,KAAK8T,kBAAkB7O,IACpC4O,MAAcpO,MAAM7C,KAAK2vB,GAE7B,GAAId,GAA4B,WAAXl2B,EAAuB,YAAc,OACtDi3B,EAAkBxyB,KAAKxE,0BAA0B,EAEzCjC,GAAa,GAAGR,WAAWoB,KACvC,IAAI6F,KAAKV,sBAAwBU,KAAK6N,YAAa,CAC/C,GAAI5P,GAAU+B,KAAKvC,wBAAwBU,IAAI,SAAUd,GAAK,MAAOA,GAAM,QAAMmB,QAAQ7F,EAAOwB,OAC5F4V,EAAW1W,EAAoB2G,KAAKvC,wBAAwBQ,GAChEgH,MACA1L,EAAewW,CACf,KAASzY,EAAI,EAAGA,EAAIyY,EAASvY,OAAQF,IAAK,CACtC,GAAIuP,GAAW7G,KAAKpI,KAAKkH,wBAAwBiR,EAASzY,GAAGk7B,GAC7DvtB,GAAKxM,KAAKuH,KAAKnB,UAAUgI,SAI7B5B,GAAO4O,EAASzW,OAAO,SAAUqE,GAC7B,MAAOA,GAAEuG,cAAc,kBAAoBrP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAGxF4F,KAAKhB,YAAcgB,KAAKyO,eAAiBzO,KAAKf,sBAC9CqzB,EAActyB,KAAKyyB,iBAAiBr1B,OAAO,SAAUqE,GACjD,MAAOA,GAAEuG,cAAc,kBAAoBrP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAG5F,KAAK,GAAI9C,GAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IACxBK,oBAAkBsN,EAAK3N,MACxB2N,EAAK3N,GAAGmD,MAAMG,QAAU62B,GAEvB95B,oBAAkB26B,KACnBA,EAAYh7B,GAAGmD,MAAMG,QAAU62B,GAEnCzxB,KAAKoP,OAAO,kBAAoBzQ,IAAKsG,EAAK3N,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXgC,IACrD5D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/D4G,KAAK+wB,eAAex1B,EAAQ0J,EAAK3N,GAAIiC,EAAajC,IAAI,GAClD0I,KAAKyO,eAAiBzO,KAAKZ,kBAAoBzH,oBAAkB26B,IACjEtyB,KAAK+wB,eAAex1B,EAAQ+2B,EAAYh7B,GAAIiC,EAAajC,IAAI,KAK7E+iB,EAASpZ,UAAUkmB,aAAe,SAAUliB,GACxC,GAAIjF,KAAK0jB,eAAiB1jB,KAAKwP,YAE3B,IAAK,GADDkjB,GAAkB,EACbp7B,EAAI,EAAG2N,GAAQ3N,EAAI2N,EAAKzN,OAAQF,IAAK,CAC1C,GAAIq7B,GAAU1tB,EAAK3N,EACW,UAA1Bq7B,EAAQl4B,MAAMG,UACV+3B,EAAQptB,UAAUC,SAAS,aAC3B6E,eAAasoB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQptB,UAAUC,SAAS,iBAAoBmtB,EAAQptB,UAAUC,SAAS,gBACxG4H,YAAUulB,GAAU,YAEnBA,EAAQptB,UAAUC,SAAS,iBAAoBmtB,EAAQptB,UAAUC,SAAS,gBAC3EktB,OAMpBrY,EAASpZ,UAAUqoB,sBAAwB,SAAUtmB,GACjD,GAAIhD,KAAKwP,YAAa,CAClB,GAAIvK,GAAOjF,KAAK8T,kBAAkB7O,IAClCA,MAAUQ,MAAM7C,KAAKqC,EACrB,KAAK,GAAI3N,GAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAAK,CAClC,GAAIs7B,GAAQ5yB,KAAKpI,KAAKkc,kBAAkB7O,KAAK3N,GAAGoI,MAAMM,KAAKZ,iBACvDT,EAAMsG,EAAK3N,GAEXu7B,GAAQp0B,KADEuB,KAAKpI,KAAKkd,gBAAgBxd,GAAGmH,KAChBE,IAAKA,EAAKc,KAAMmzB,EAAOjzB,OAAQK,KAAKJ,aAAaI,KAAKZ,iBACjFY,MAAKT,aAAaC,WAAWqzB,MAIzCxY,EAASpZ,UAAUoxB,oBAAsB,SAAU1e,EAAYC,GACtDA,IACDD,EAAWhb,OAAOS,UAAW,EAIjC,KAAK,GADDsS,GADAzG,EAAO0O,EAAW1O,KAEb3N,EAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAAK,CAC9BoF,cAAcsD,KAAK+T,kBACnB1J,eAAapF,EAAK3N,IAAK,qBACvB8V,YAAUnI,EAAK3N,IAAK,uBAGpB2N,EAAK3N,GAAGmD,MAAMG,QAAU,MAE5B,IAAIk4B,GAAe7tB,EAAK3N,GAAG0Q,cAAc,qBAIzC,IAHKrQ,oBAAkBm7B,IACnB9yB,KAAKpI,KAAK0c,gBAAgBye,SAASD,GAEnC7tB,EAAK3N,GAAG0Q,cAAc,6CAA8C,CACpE,GAAIgrB,GAAgB/tB,EAAK3N,GAAG0Q,cAAc,4CAC1C0D,GAAc1L,KAAKwP,YAAcxP,KAAKpI,KAAK6F,wBAAwBwH,EAAK3N,GAAGuP,UACvE7G,KAAKpI,KAAKsc,oBAAoBjP,EAAK3N,GAAG8R,aAAa,aAAa3K,MAC/D9G,oBAAkBq7B,IAAkBtnB,EAAYtS,WACjDiR,eAAa2oB,GAAgB,oBAC7B5lB,YAAU4lB,GAAgB,sBAI9B,KAAK,GAFDC,MACAC,EAAQlzB,KAAKnB,UACRs0B,EAAM,EAAGA,EAAMD,EAAM17B,OAAQ27B,IAC9BD,EAAMC,GAAKnrB,cAAc,kBAAoB0D,EAAYvR,MAAQ,SAAWuR,EAAYtR,MAAQ,KAChG64B,EAAKx6B,KAAKy6B,EAAMC,GAGpBF,GAAKz7B,QAAUkU,EAAYtS,UAC3B4G,KAAKqyB,qBAAsB15B,OAAQ+S,EAAazG,KAAMguB,IAAQ,MAQ9E5Y,EAASpZ,UAAUghB,YAAc,WAC7BjiB,KAAKqH,GAAG,gBAAiBrH,KAAKozB,kBAAmBpzB,MACjDA,KAAKpI,KAAKyP,GAAG,cAAerH,KAAK2iB,gBAAiB3iB,OAEtDqa,EAASpZ,UAAUmyB,kBAAoB,SAAUC,GAC7CrzB,KAAK6Q,YAAcwiB,GAKvBhZ,EAASpZ,UAAUorB,eAAiB,WAC5BrsB,KAAK2H,cAGT3H,KAAK4H,IAAI,gBAAiB5H,KAAKozB,mBAC/BpzB,KAAKpI,KAAKgQ,IAAI,cAAe5H,KAAK2iB,mBAgBtCtI,EAASpZ,UAAUqyB,eAAiB,SAAU9F,EAAW+F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzI7zB,KAAKpI,KAAK07B,eAAe9F,EAAW+F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5HxZ,EAASpZ,UAAU6yB,eAAiB,WAChC9zB,KAAKpI,KAAKk8B,kBASdzZ,EAASpZ,UAAU8yB,0BAA4B,SAAU1vB,EAAO2vB,GAC5Dh0B,KAAKpI,KAAKm8B,0BAA0B1vB,EAAO2vB,IAQ/C3Z,EAASpZ,UAAUud,UAAY,SAAUrkB,EAAO85B,GAC5Cj0B,KAAKpI,KAAK4mB,UAAUrkB,EAAO85B,IAO/B5Z,EAASpZ,UAAUizB,WAAa,SAAUtpB,GACtC5K,KAAKpI,KAAKs8B,WAAWtpB,IAMzByP,EAASpZ,UAAUyd,eAAiB,WAChC1e,KAAKpI,KAAK8mB,kBAMdrE,EAASpZ,UAAU0F,KAAO,SAAU9B,GAChC7E,KAAK4iB,gBAAgBjc,KAAK9B,IAQ9BwV,EAASpZ,UAAU2F,MAAQ,SAAUnI,EAAMoI,EAAUC,GACjD9G,KAAK4iB,gBAAgBhc,MAAMnI,EAAMoI,EAAUC,IAQ/CuT,EAASpZ,UAAUkzB,WAAa,SAAU1V,EAAWwV,GACjDj0B,KAAKpI,KAAKu8B,WAAW1V,EAAWwV,IAMpC5Z,EAASpZ,UAAUmzB,gBAAkB,WACjC,MAAOp0B,MAAKpI,KAAKw8B,mBAQrB/Z,EAASpZ,UAAUozB,wBAA0B,SAAUxtB,EAAUkC,GAC7D,MAAO/I,MAAKpI,KAAKy8B,wBAAwBxtB,EAAUkC,IAMvDsR,EAASpZ,UAAUmL,mBAAqB,WACpC,MAAOpM,MAAKpI,KAAKwU,sBAOrBiO,EAASpZ,UAAU/B,qBAAuB,SAAU/E,GAChD,MAAO6F,MAAKpI,KAAKsH,qBAAqB/E,IAM1CkgB,EAASpZ,UAAUwxB,eAAiB,WAChC,MAAOzyB,MAAKpI,KAAK66B,kBAKrBpY,EAASpZ,UAAUhC,iBAAmB,WAClC,MAAOe,MAAKs0B,eAAet0B,KAAKzI,QAAS,GAAKyI,KAAKyO,eAEvD4L,EAASpZ,UAAUqzB,eAAiB,SAAUnE,EAAMoE,GAChD,IAAK,GAAIv6B,GAAI,EAAG3B,EAAM83B,EAAK34B,OAAQwC,EAAI3B,EAAK2B,IACpCm2B,EAAKn2B,GAAGzC,QACRg9B,EAAMv0B,KAAKs0B,eAAenE,EAAKn2B,GAAGzC,QAASg9B,GAGvCpE,EAAKn2B,GAAGw6B,UACRD,GAIZ,OAAOA,IAMXla,EAASpZ,UAAUmE,sBAAwB,WACvC,MAAOpF,MAAKpI,KAAKwN,yBAMrBiV,EAASpZ,UAAUwzB,0BAA4B,WAC3C,MAAOz0B,MAAKpI,KAAK68B,6BAOrBpa,EAASpZ,UAAU2E,mBAAqB,WACpC,MAAO5F,MAAKpI,KAAKgO,sBAMrByU,EAASpZ,UAAUuT,cAAgB,WAC/B,OAASkgB,WAAY10B,KAAKpI,KAAK4c,gBAAiBmgB,WAAY30B,KAAK2hB,aAKrEtH,EAASpZ,UAAU2zB,YAAc,SAAUC,EAAaC,EAAS3H,GAC7DntB,KAAK+0B,qBAAqBH,YAAYC,EAAaC,EAAS3H,GAEhE,IAAIzS,EAqXJ,OApXAvZ,KACIc,WAAS,IACVoY,EAASpZ,UAAW,iBAAc,IACrCE,IACIc,WAAS,IACVoY,EAASpZ,UAAW,oBAAiB,IACxCE,IACIc,WAAS,aACVoY,EAASpZ,UAAW,eAAY,IACnCE,IACIc,gBACDoY,EAASpZ,UAAW,cAAW,IAClCE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,mBAAgB,IACvCE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,IACVoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,gBAAa,IACpCE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,yBAAsB,IAC7CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,0BAAuB,IAC9CE,IACIc,gBACDoY,EAASpZ,UAAW,iBAAc,IACrCE,IACIc,cACDoY,EAASpZ,UAAW,YAAS,IAChCE,IACIc,cACDoY,EAASpZ,UAAW,iBAAc,IACrCE,IACIc,WAAS,aACVoY,EAASpZ,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,oBAAiB,IACxCE,IACI6zB,aAAY3yB,IACbgY,EAASpZ,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,yBAAsB,IAC7CE,IACI6zB,aAAY1c,IACb+B,EAASpZ,UAAW,mBAAgB,IACvCE,IACI6zB,aAAYC,oBACb5a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,cACDoY,EAASpZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,wBAAqB,IAC5CE,IACI6zB,aAAY5a,KACbC,EAASpZ,UAAW,mBAAgB,IACvCE,IACIiB,gBAAe6X,IAChBI,EAASpZ,UAAW,iBAAc,IACrCE,IACI6zB,aAAY9a,KACbG,EAASpZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACIc,cACDoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACI6zB,aAAY7yB,IACbkY,EAASpZ,UAAW,qBAAkB,IACzCE,IACI6zB,aAAY1nB,IACb+M,EAASpZ,UAAW,qBAAkB,IACzCE,IACIc,cACDoY,EAASpZ,UAAW,cAAW,IAClCE,IACIc,cACDoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,YACVoY,EAASpZ,UAAW,gBAAa,IACpCE,IACIc,cACDoY,EAASpZ,UAAW,uBAAoB,IAC3CE,IACIc,cACDoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACIc,cACDoY,EAASpZ,UAAW,kBAAe,IACtCE,IACIc,WAAS,WACVoY,EAASpZ,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVoY,EAASpZ,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,0BAAuB,IAC9CE,IACIc,WAAS,SACVoY,EAASpZ,UAAW,aAAU,IACjCE,IACIc,WAAS,SACVoY,EAASpZ,UAAW,YAAS,IAChCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,2BAAwB,IAC/CE,IACIc,WAAS,QACVoY,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,cAAW,IAClCE,IACI+zB,WACD7a,EAASpZ,UAAW,WAAQ,IAC/BE,IACI+zB,WACD7a,EAASpZ,UAAW,gBAAa,IACpCE,IACI+zB,WACD7a,EAASpZ,UAAW,eAAY,IACnCE,IACI+zB,WACD7a,EAASpZ,UAAW,iBAAc,IACrCE,IACI+zB,WACD7a,EAASpZ,UAAW,gBAAa,IACpCE,IACI+zB,WACD7a,EAASpZ,UAAW,eAAY,IACnCE,IACI+zB,WACD7a,EAASpZ,UAAW,gBAAa,IACpCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,gBAAa,IACpCE,IACI+zB,WACD7a,EAASpZ,UAAW,eAAY,IACnCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,wBAAqB,IAC5CE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,eAAY,IACnCE,IACI+zB,WACD7a,EAASpZ,UAAW,oBAAiB,IACxCE,IACI+zB,WACD7a,EAASpZ,UAAW,gBAAa,IACpCE,IACI+zB,WACD7a,EAASpZ,UAAW,wBAAqB,IAC5CE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,wBAAqB,IAC5CE,IACI+zB,WACD7a,EAASpZ,UAAW,mBAAgB,IACvCE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,mBAAgB,IACvCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,oBAAiB,IACxCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,oBAAiB,IACxCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,mBAAgB,IACvCE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,eAAY,IACnCE,IACI+zB,WACD7a,EAASpZ,UAAW,iBAAc,IACrCE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,iBAAc,IACrCE,IACI+zB,WACD7a,EAASpZ,UAAW,iBAAc,IACrCE,IACI+zB,WACD7a,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,oBAAiB,IACxCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,mBAAgB,IACvCE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,uBAAoB,IAC3CE,IACI+zB,WACD7a,EAASpZ,UAAW,iBAAc,IACrCE,IACI+zB,WACD7a,EAASpZ,UAAW,kBAAe,IACtCE,IACI+zB,WACD7a,EAASpZ,UAAW,cAAW,IAClCE,IACI+zB,WACD7a,EAASpZ,UAAW,mBAAgB,IACvCE,IACI+zB,WACD7a,EAASpZ,UAAW,yBAAsB,IAC7CE,IACI+zB,WACD7a,EAASpZ,UAAW,cAAW,IAClCE,IACIc,YAAU,IACXoY,EAASpZ,UAAW,uBAAoB,IAC3CE,IACI6zB,aAAYznB,IACb8M,EAASpZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVoY,EAASpZ,UAAW,qBAAkB,IACzCE,IACI+zB,WACD7a,EAASpZ,UAAW,uBAAoB,IAC3CE,IACI+zB,WACD7a,EAASpZ,UAAW,6BAA0B,IACjDE,IACI+zB,WACD7a,EAASpZ,UAAW,yBAAsB,IAC7CE,IACI+zB,WACD7a,EAASpZ,UAAW,+BAA4B,IACnDE,IACI+zB,WACD7a,EAASpZ,UAAW,wBAAqB,IAC5CE,IACI+zB,WACD7a,EAASpZ,UAAW,0BAAuB,IAC9CE,IACI+zB,WACD7a,EAASpZ,UAAW,sBAAmB,IAC1CE,IACI+zB,WACD7a,EAASpZ,UAAW,wBAAqB,IAC5CoZ,EAAWK,EAAavZ,IACpBg0B,yBACD9a,IAEL+a,aC9xGEC,GAAyB,WAIzB,QAASA,GAAQ1+B,EAAQ8Y,GACrBhN,OAAKC,OAAO4yB,WACZt1B,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBA4CT,MAtCAiuB,GAAQp0B,UAAU4B,cAAgB,WAC9B,MAAO,WAKXwyB,EAAQp0B,UAAUmG,iBAAmB,WACjCpH,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKu1B,cAAev1B,OAEzDq1B,EAAQp0B,UAAUyG,oBAAsB,WAChC1H,KAAKrJ,OAAOgR,aAGhB3H,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKu1B,gBAO3CF,EAAQp0B,UAAU8F,QAAU,WACxB/G,KAAK0H,uBAET2tB,EAAQp0B,UAAUs0B,cAAgB,WAK9B,IAAK,GAFDC,GADA/lB,EAAazP,KAAKrJ,OAAkB,YAAEqJ,KAAKrJ,OAAOyI,iBAElDq2B,EAAcz1B,KAAKrJ,OAAOiJ,aACrB81B,EAAI,EAAGA,EAAID,EAAYj+B,OAAQk+B,IAGpC,GAFsBl9B,YAAU,QAASiX,KACjBjX,YAAU,QAASi9B,EAAYC,IACZ,CACvCF,EAAYE,CACZ,OAGR11B,KAAKrJ,OAAOqjB,eAAgB5a,gBAAiBo2B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,QAASA,GAAOh/B,GACZ8L,OAAKC,OAAOkzB,UACZ51B,KAAKrJ,OAASA,EA4BlB,MArBAg/B,GAAO10B,UAAU+b,eAAiB,SAAU6Y,GACxC71B,KAAKrJ,OAAOiB,KAAKolB,eAAe6Y,IAMpCF,EAAO10B,UAAU4B,cAAgB,WAC7B,MAAO,UAOX8yB,EAAO10B,UAAU8F,QAAU,WACnB/G,KAAKrJ,OAAOgR,aAGhB3H,KAAKrJ,OAAOiB,KAAKslB,aAAanW,WAE3B4uB,KC5BPG,GAAuB,WAKvB,QAASA,GAAMn/B,GAEXqJ,KAAK+1B,SAAU,EAEf/1B,KAAKg2B,oBAAqB,EAE1Bh2B,KAAKi2B,eAAgB,EACrBxzB,OAAKC,OAAOwzB,SACZl2B,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAwhCT,MAthCA0uB,GAAM70B,UAAUk1B,0BAA4B,SAAUjmB,GAYlD,OATIlQ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QAC3CqJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAGvCsE,KAAKrJ,OAAOiB,KAAKhB,YAEVwG,OAAO,SAAUC,GAC7C,MAAOA,GAAEpE,WAAaiX,KAO9B4lB,EAAM70B,UAAUmG,iBAAmB,WAC/BpH,KAAKrJ,OAAO0Q,Gf8EI,ce9EkBrH,KAAKo2B,WAAYp2B,MACnDA,KAAKrJ,OAAO0Q,Gf+EI,ce/EkBrH,KAAKq2B,WAAYr2B,MACnDA,KAAKrJ,OAAO0Q,GfwEC,WexEkBrH,KAAKs2B,UAAWt2B,MAC/CA,KAAKrJ,OAAO0Q,GfyEI,cezEkBrH,KAAKu2B,YAAav2B,OAKxD81B,EAAM70B,UAAU2zB,YAAc,SAAUC,EAAaC,EAAS3H,GAC1D,GAAIqJ,GAAOx2B,KAAKrJ,MAChB,IAAIk+B,EAAY,IAAZA,EAAJ,CACqB,UAAb1H,IACAntB,KAAKy2B,aAAe,cAEP,UAAbtJ,IACAntB,KAAKy2B,aAAe,iBAEP,UAAbtJ,IACAntB,KAAKy2B,aAAe,gBAGxB,KAAK,GADDh4B,MACKnH,EAAI,EAAGA,EAAIu9B,EAAYr9B,OAAQF,IACpCmH,EAAKnH,GAAK0I,KAAKrJ,OAAO8G,wBAAwBo3B,EAAYv9B,GAE9D,IACI0L,IACAvE,KAAMA,EACNi4B,UAAW5B,EAEV19B,GAAgB4I,KAAKrJ,SACtBqJ,KAAK22B,SAAS3zB,GAND,GASbwzB,EAAK1f,cACL0f,EAAKr5B,SAAW6C,KAAK42B,aAAaJ,EAAKr5B,WAE3C6C,KAAKrJ,OAAOiB,KAAKu0B,YAMzB2J,EAAM70B,UAAU21B,aAAe,SAAUzgB,GAUrC,IAAK,GAAI7e,GAAI,EAAGA,EAAI6e,EAAY3e,OAAQF,KAT1B,SAAUA,GAEpB,GADA6e,EAAY7e,GAAG6C,MAAQ7C,GAClBK,oBAAkBwe,EAAY7e,GAAGyB,YAAa,CAC/C,GAAI89B,GAAgB1gB,EAAY/Y,OAAO,SAAUqB,GAC7C,MAAOA,GAAKxF,WAAakd,EAAY7e,GAAGgH,iBACzC,EACH6X,GAAY7e,GAAGyB,WAAWoB,MAAQ08B,EAAc18B,QAI5C7C,EAEZ,OAAO6e,IAEX2f,EAAM70B,UAAUq1B,UAAY,SAAUj5B,GAGlC,IAAK,GAFDy5B,GACAC,EAAc15B,EAAElF,QACXb,EAAI+F,EAAElF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAw/B,EAAgBC,EAAYz/B,IACVgH,eAAgB,CAC9B,GAAI3F,GAASo+B,EAAY35B,OAAO,SAAUqB,GACtC,MAAOA,GAAKxF,WAAa69B,EAAcx4B,gBAE3C,IAAI3F,EAAOnB,OAAQ,CACf,GAAI2C,GAAQxB,EAAO,GAAGY,aAAaiF,QAAQs4B,GACvCh+B,EAAeH,EAAO,IACX,IAAXwB,IACIxC,oBAAkBqI,KAAKrJ,OAAOkG,aAC9B/D,EAAaS,aAAauD,OAAO3C,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAaiW,yBAA0B,IAG/C/O,KAAKg2B,oBAAqB,IAK1C,GAAIr+B,oBAAkBqI,KAAKrJ,OAAOC,cAAgBoJ,KAAKrJ,OAAOC,WAAWY,OAAQ,CAK7E,IAAK,GAHDw/B,GADAR,EAAOx2B,KAAKrJ,OAEZsgC,EAAgB55B,EAAElF,QAEbb,EADQ+F,EAAElF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtC0/B,EAAkBC,EAAc3/B,EAShC,IAPKK,oBAAkB6+B,EAAK55B,mBACxB45B,EAAKz5B,aAAe,MAEnBpF,oBAAkBq/B,EAAgB38B,WAClC28B,EAAgB38B,SAASmC,eAAeg6B,EAAKz5B,gBAC9Ci6B,EAAgB38B,SAASm8B,EAAKz5B,kBAE9Bi6B,EAAgBx6B,eAAeg6B,EAAKz5B,eACnCi6B,EAAgBR,EAAKz5B,cAAevF,SAAWwI,KAAKg2B,qBACpDr+B,oBAAkB6+B,EAAK55B,iBAExB,IAAK,GADDoK,GAAagwB,EAAgBR,EAAKz5B,cAC7B/C,EAAI,EAAGA,EAAIgN,EAAUxP,OAAQwC,KACW,IAAzCi9B,EAAcz4B,QAAQwI,EAAUhN,MAChCi9B,EAAcn6B,OAAO9C,EAAG,EAAGgN,EAAUhN,IACrCgN,EAAUhN,GAAGK,SAAWgC,YAAW2K,EAAUhN,IAC7C1C,GAAK,EAIb0/B,GAAgBx6B,eAAeg6B,EAAK55B,kBAA6D,MAAzCo6B,EAAgBR,EAAK55B,mBACzEoD,KAAKg2B,qBACTgB,EAAgB38B,SAASm8B,EAAK55B,iBAAmB,WAC1Co6B,GAAgBj+B,iBAChBi+B,GAAgB14B,gBAEvB3G,oBAAkB6+B,EAAK5/B,cACvB4/B,EAAK5/B,eAET4/B,EAAK5/B,WAAWkG,OA7BG,EA6BkB,EAAGk6B,EAAgB38B,UAE5Dm8B,EAAKxc,eAAgBpjB,WAAY4/B,EAAK5/B,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIy/B,EAAYv/B,OAAQF,IACpCgb,WAAS,sBAAwBykB,EAAYz/B,GAAG2B,SAAU89B,EAAYz/B,GAAI0I,KAAKrJ,OAEnF,IAAIqM,IAASvE,KAAMpB,EAAElF,QAASu+B,UAAWr5B,EAAEy3B,QACvC90B,MAAKrJ,OAAOC,qBAAsBC,gBAClCmJ,KAAKkW,aAAelW,KAAKrJ,OAAOC,WAAWA,WAAW8E,KACtDsE,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAAWA,WAAW8E,OAGlDsE,KAAKkW,aAAelW,KAAKrJ,OAAOiB,KAAKhB,WACrCoJ,KAAKvE,SAAWuE,KAAKrJ,OAAOC,YAEhCoJ,KAAK22B,SAAS3zB,KAGtB8yB,EAAM70B,UAAUs1B,YAAc,SAAUl5B,GACpC,IAAK,GAAI/F,GAAI,EAAGA,EAAI+F,EAAElF,QAAQX,OAAQF,IAClC0I,KAAK82B,cAAgBz5B,EAAElF,QAAQb,IAC3B0I,KAAK82B,cAAcx9B,iBAAmB0G,KAAK82B,cAAc/9B,aAE8B,IADvFiH,KAAKrJ,OAAOiB,KAAKhB,WACb4H,QAAQwB,KAAKm2B,0BAA0Bn2B,KAAK82B,cAAcx4B,gBAAgB,KACjD,IAA7B0B,KAAK82B,cAAc18B,QACnB4F,KAAKk3B,iBAIjBpB,EAAM70B,UAAUk2B,sBAAwB,WACpC,GAGIC,GACAC,EAJAP,EAAgB92B,KAAK82B,cACrBQ,EAAgBt3B,KAAKs3B,cACrBC,EAAQv3B,KAAKrJ,MASjB,MALIygC,EADAp3B,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QAC/C4gC,EAAM3gC,WAAWA,WAAW8E,KAG5B67B,EAAM3gC,aAEHe,oBAAkB2/B,IAAmBA,EAAcv+B,YAiBtE,IAAKiH,KAAKrJ,OAAOiG,kBAAqBjF,oBAAkB2/B,IAAkBA,EAAcv+B,aAC/D,eAAtBiH,KAAKy2B,cAAuD,kBAAtBz2B,KAAKy2B,cAG3C,IAAK,GADDl9B,GADSyG,KAAKm2B,0BAA0BmB,EAAch5B,gBAAgB,GAChD/E,aACjBjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCggC,EAAcv+B,WAAWsB,SAAS2F,KAAKrJ,OAAOoG,cAAczF,GAAKiC,EAAajC,GAAG+C,aAtBL,CACpF,IAAS/C,EAAI,EAAGA,EAAIgB,OAAOC,KAAK6+B,GAAgB5/B,OAAQF,IAChD8/B,EAAe9/B,GAAG0I,KAAKrJ,OAAOoG,gBAAkBu6B,EAAcj9B,SAAS2F,KAAKrJ,OAAOoG,gBACnFs6B,EAAM//B,EAGY,gBAAtB0I,KAAKy2B,aACAz2B,KAAKrJ,OAAOkG,WACbu6B,EAAet6B,OAAOu6B,EAAK,EAAGP,EAAcz8B,UAGrB,kBAAtB2F,KAAKy2B,eACLz2B,KAAKrJ,OAAOkG,WACbu6B,EAAet6B,OAAOu6B,EAAM,EAAG,EAAGP,EAAcz8B,WAaxD2F,KAAKrJ,OAAOiG,kBACRk6B,EAAc/9B,WACY,eAAtBiH,KAAKy2B,cAAuD,kBAAtBz2B,KAAKy2B,cAC3CK,EAAc92B,KAAKrJ,OAAOiG,iBAAmB06B,EAAct3B,KAAKrJ,OAAOiG,iBACvEk6B,EAAcz8B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB06B,EAAct3B,KAAKrJ,OAAOiG,mBAGhFk6B,EAAc92B,KAAKrJ,OAAOiG,iBAAmB06B,EAAct3B,KAAKrJ,OAAOkG,WACvEi6B,EAAcz8B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB06B,EAAct3B,KAAKrJ,OAAOkG,aAIpFi6B,EAAcz8B,SAAS2F,KAAKrJ,OAAOiG,iBAAmB,KACtDk6B,EAAc92B,KAAKrJ,OAAOiG,iBAAmB,QAIzDk5B,EAAM70B,UAAUu2B,qBAAuB,SAAUvnB,EAASwnB,GACtD,GAAIC,GAAkC,kBAAtB13B,KAAKy2B,YACjBz2B,MAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqBzc,OAAS,GAAKyY,IACxD,IAArBA,EAAQpJ,UAAkB6wB,IAC3B13B,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,GAAGsN,UAG3EuU,EAAM70B,UAAU02B,oBAAsB,SAAU1nB,EAASwnB,GACrD,GAAIG,GAAa3nB,IAAYA,EAAQ1K,UAAUC,SAAS,eAAiByK,EAAQ1K,UAAUC,SAAS,mBAChGqyB,EAAiB5nB,IAAY2nB,GAC7B53B,KAAKrJ,OAAOiI,cAAcoB,KAAKrJ,OAAOkI,UAAUrH,OAAS,GAAG4R,aAAa,cACrE6G,EAAQ7G,aAAa,YACzBsuB,EAAYG,GAAwC,eAAtB73B,KAAKy2B,YACnCz2B,MAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoBzc,OAAS,GAAKyY,IAAY4nB,GAAkBH,IAC3G13B,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,GAAGsN,UAG1EuU,EAAM70B,UAAU62B,WAAa,SAAUn5B,EAAKxE,EAAO6I,GAC/C,GAAI+0B,GAAS/0B,EAAK3B,OAAS4G,UAAQjF,EAAK3B,OAAQ,MAAQ,IACxDrB,MAAKy2B,iBAAend,EACpB,IAAI0e,GAAoB,CACxBh4B,MAAKw3B,qBAAqBO,GAC1B/3B,KAAK23B,oBAAoBI,EACzB,KAAK,GAAIzgC,GAAI,EAAGA,EAAI0L,EAAKiC,KAAKzN,OAAQF,KAC7BK,oBAAkBogC,IAAWA,EAAO3uB,aAAa,cAAgBpG,EAAKiC,KAAK3N,GAAG8R,aAAa,cACxFrB,eAAa/E,EAAK3B,OAAQ,mBAC9BrB,KAAKy2B,aAAe,UACpBz2B,KAAKi4B,eAIb,IAAIzB,GAAOx2B,KAAKrJ,OACZuhC,EAAS,EAETC,EAAa3B,EAAKhW,SAAWgW,EAAKhW,QAAQhpB,OAC1C4gC,SAASC,eAAe7B,EAAKvmB,QAAQC,GAAK,6BAA6BooB,aAAe,EAEtFC,EAAiBv4B,KAAKw4B,UAAUhC,EAAKvmB,SAErCwoB,EAAgBjC,EAAKrtB,mBAAmBmvB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAK7G,aAAaiJ,kBAAkBD,SAC/ChhC,qBAAkBogC,KACnBC,EAAoBD,EAAOc,UAAYF,EAI3C,IAEIG,KAHJZ,EAASF,EAAoBS,EAZd,GAaU95B,EAAI,GAAG25B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACT3gC,YAAU,sBAAuBwK,GAC5Bo2B,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,CAC7D,IAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBr5B,KAAKy2B,eACrBz2B,KAAKw5B,oBACLx5B,KAAKy2B,aAAe,aACpBz2B,KAAKy5B,0BACLz5B,KAAK05B,kBAAkB3B,GACvB/3B,KAAK25B,kBACL35B,KAAK23B,oBAAoBI,GACzB/3B,KAAK45B,kBAAkB52B,EAAK3B,SAE5Bi4B,GAA4C,YAAtBt5B,KAAKy2B,aAA4B,CACvDz2B,KAAKy5B,yBACL,IAAIxpB,OAAU,GACVxH,IACJwH,GAAUhI,UAAQjF,EAAK3B,OAAQ,OAC/BoH,KAAgBhD,MAAM7C,KAAKqN,EAAQvK,iBAAiB,oDACrClO,OAAS,GACpBwI,KAAK65B,iBAAiBpxB,GAAY,EAAM,iBAE5CzI,KAAK85B,iBAAiB/B,GACtB/3B,KAAK05B,kBAAkB3B,GACvB/3B,KAAKy2B,aAAe,gBAEpB8C,GAA4C,YAAtBv5B,KAAKy2B,eAC3Bz2B,KAAK25B,kBACL35B,KAAKy5B,0BACLz5B,KAAKw5B,oBACLx5B,KAAKy2B,aAAe,gBACpBz2B,KAAK85B,iBAAiB/B,GACtB/3B,KAAKw3B,qBAAqBO,GAC1B/3B,KAAK45B,kBAAkB52B,EAAK3B,SAGpC,MAAOrB,MAAKy2B,cAEhBX,EAAM70B,UAAUu4B,kBAAoB,WAChC,GAAIO,OACJA,KAAgBt0B,MAAM7C,KAAK5C,KAAKrJ,OAAOsZ,QAAQvK,iBAAiB,oBACjDlO,OAAS,GACpBwI,KAAK65B,iBAAiBE,GAAY,EAAO,kBAGjDjE,EAAM70B,UAAUy4B,kBAAoB,SAAU/a,GAC1C,GAAIqb,GAAOh6B,KAAKrJ,OAAOsZ,QACnBumB,EAAOx2B,KAAKrJ,MAChB,IAAIgoB,GAAoC,IAAvBA,EAAU9X,WAAmB8X,EAAUpZ,UAAUC,SAAS,cAAe,CACtF,GAAIy0B,GAAMj6B,KAAKrJ,OAAO4S,cAAc,OAASC,UAAW,sBACpD0wB,EAAgBl6B,KAAKrJ,OAAOwS,mBAC5BgxB,EAAgB,CAChB3D,GAAKhW,UACL2Z,EAAgB3D,EAAK3I,cAAcuM,aAAa9B,aAEpD,IAAI+B,IAAgB1iC,oBAAkBqI,KAAKrJ,OAAOorB,gBAAgBC,SAC9DqY,KACAJ,EAAIx/B,MAAMi+B,IAAM14B,KAAKrJ,OAAOiB,KAAKqY,QAAQgE,uBAAuB,gBAAgB,GAAGqkB,aAC7E6B,EAAgB,MAE1BF,EAAIx/B,MAAMoP,MAAQwwB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAct6B,KAAKu6B,iBAAmB,KAC1CL,EAAcx0B,iBAAiB,sBAAsBlO,QACtD0iC,EAAcvvB,YAAYsvB,KAItCnE,EAAM70B,UAAU64B,iBAAmB,SAAUU,GACzC,GAAI5C,GAAa4C,IAAcA,EAAUj1B,UAAUC,SAAS,eACxDg1B,EAAUj1B,UAAUC,SAAS,kBACjC,IAAIg1B,IAAc5C,GAAc53B,KAAKrJ,OAAOiI,cAAcoB,KAAKrJ,OAAOkI,UAAUrH,OAAS,GAAG4R,aAAa,cACrGoxB,EAAUpxB,aAAa,YAAa,CACpC,GAAIqxB,GAAez6B,KAAKrJ,OAAO4S,cAAc,OAASC,UAAW,qBAC7DkxB,EAAiB16B,KAAKrJ,OAAOg5B,YACjC8K,GAAahgC,MAAMoP,MAAQ7J,KAAKrJ,OAAOsZ,QAAQqqB,YAAct6B,KAAKu6B,iBAAmB,KAChFG,EAAeh1B,iBAAiB,qBAAqBlO,SACtDkjC,EAAen1B,UAAUqE,IAAI,uBAC7B8wB,EAAe/vB,YAAY8vB,GAC3BA,EAAahgC,MAAMkgC,OAAS36B,KAAKu6B,iBAAmB,QAIhEzE,EAAM70B,UAAUs5B,eAAiB,WAC7B,GAAIK,GAAa56B,KAAKrJ,OAAOg5B,aAAaiJ,iBAC1C,OAAOgC,GAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FjF,EAAM70B,UAAUg3B,aAAe,WAC3B,GAAI+C,GAAW5C,SAASnkB,uBAAuB,qBAAqB,EAEpE,KADgB+mB,EAASt1B,iBAAiB,gBAAgBlO,SACvCwI,KAAKrJ,OAAOorB,gBAAgBC,SAAU,CACrD,GAAIiZ,GAAM7C,SAAS7uB,cAAc,MACjChE,aAAU01B,GAAM,wBAChB11B,YAAU01B,GAAM,UAAW,kBAC3B,IAAIC,GAAWF,EAAShzB,cAAc,eAClCmzB,EAAUH,EAAShzB,cAAc,cAAcyC,SAC/CywB,KACAC,EAAUD,EAASzwB,UACnBywB,EAASE,WAAWC,YAAYH,IAEpCF,EAAShzB,cAAc,cAAcyC,UAAY,EACjD,IAAI6wB,GAAclD,SAAS7uB,cAAc,OACzC+xB,GAAY9xB,UAAY,aACxB8xB,EAAY7gC,MAAM8gC,YAAc,OAChCD,EAAY7wB,UAAY0wB,EACxBH,EAAShzB,cAAc,cAAc2C,YAAYswB,GACjDD,EAAShzB,cAAc,cAAc2C,YAAY2wB,KAGzDxF,EAAM70B,UAAU04B,gBAAkB,WAC9B,GAAI6B,GAAYpD,SAASpwB,cAAc,eACnCwzB,IACAA,EAAUja,UAGlBuU,EAAM70B,UAAU24B,kBAAoB,SAAUv4B,GAEtB1J,oBAAkBqI,KAAKrJ,OAAOorB,gBAAgBC,SADlE,IAAI/R,GAEAxH,MAEJA,GADAwH,EAAUhI,UAAQ5G,EAAQ,UACAoE,MAAM7C,KAAKqN,EAAQvK,iBAAiB,uDAC/ClO,SACe,eAAtBwI,KAAKy2B,eACLz2B,KAAK65B,iBAAiBpxB,GAAY,EAAM,aACpCzI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,wBAAwBzc,OAAS,GAC5EwI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,wBAAwB,GAAGsN,UAGpD,kBAAtBvhB,KAAKy2B,cACLz2B,KAAK65B,iBAAiBpxB,GAAY,EAAM,kBAIpDqtB,EAAM70B,UAAUw4B,wBAA0B,WACtC,GAAIgC,OACJA,KAAYh2B,MAAM7C,KAAK5C,KAAKrJ,OAAOsZ,QAAQvK,iBAAiB,+BACjDlO,SACPwI,KAAK65B,iBAAiB4B,GAAQ,EAAO,gBACrCz7B,KAAK65B,iBAAiB4B,GAAQ,EAAO,eAG7C3F,EAAM70B,UAAU44B,iBAAmB,SAAUn6B,EAAOkK,EAAKJ,GACrD,IAAK,GAAIlS,GAAI,EAAGe,EAAMqH,EAAMlI,OAAQF,EAAIe,EAAKf,IACrCsS,EACAlK,EAAMpI,GAAGiO,UAAUqE,IAAIJ,GAGvB9J,EAAMpI,GAAGiO,UAAUgc,OAAO/X,IAItCssB,EAAM70B,UAAUu3B,UAAY,SAAUvoB,GAClC,GAAIyrB,GAAMzrB,EAAQ0rB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAYj+B,OAAOqhC,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAathC,OAAOuhC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,CACnC,QAASzD,IAAKllB,KAAK4oB,MAAM1D,GAAMS,KAAM3lB,KAAK4oB,MAAMjD,KAEpDrD,EAAM70B,UAAUm1B,WAAa,SAAUpzB,GACnC,GAAIwzB,GAAOx2B,KAAKrJ,OACZ0lC,EAAer8B,KAAKrJ,OAAOsZ,QAAQjI,cAAc,qBACrDq0B,GAAa5hC,MAAM6hC,OAAS,EAC5B,IAAIvE,GAAS/0B,EAAK3B,OAAS4G,UAAQjF,EAAK3B,OAAQ,MAAQ,KACpDk7B,EAASxE,EAASA,EAAOlxB,UAAY,EACrCkwB,KACAO,EAAgBd,EAAK/4B,wBAAwB8+B,EA0BjD,IAzBAv8B,KAAK25B,kBACL35B,KAAK+1B,SAAU,EACV/yB,EAAKvE,KAAK,GAIXs4B,EAAc/zB,EAAKvE,KAHnBs4B,EAAYt+B,KAAKuK,EAAKvE,OAKV,IAAZ89B,EACAv8B,KAAKw8B,mBAAmBzF,EAAaO,IAGrCt3B,KAAK+1B,SAAU,EACf/1B,KAAKi4B,iBAEJzB,EAAKzU,gBAAgBC,UAAYhiB,KAAK+1B,SACvCS,EAAKzB,qBAAqB+C,WAAW90B,EAAKiC,KAAMs3B,EAAQv5B,GAExDwzB,EAAKzU,gBAAgBC,WACjBya,EAAc10B,eAAa/E,EAAK3B,OAAQ,gBACzBo7B,EAAYvsB,KAAOlQ,KAAKrJ,OAAOorB,gBAAgBC,UAC7Cya,EAAYC,cAAc,GAChC3H,qBAAqB+C,WAAW90B,EAAKiC,KAAMs3B,EAAQv5B,GAGlEA,EAAK3B,QAAU4G,UAAQjF,EAAK3B,OAAQ,IAAMm1B,EAAKzU,gBAAgBC,UAAW,CAC1E,GAAIya,GAAc10B,eAAa/E,EAAK3B,OAAQ,aACvCo7B,KACDJ,EAAa5hC,MAAM6hC,OAAS,aAIxCxG,EAAM70B,UAAUo1B,WAAa,SAAUrzB,GACnC,GAAIwzB,GAAOx2B,KAAKrJ,MA6ChB,IA3CK6/B,EAAKzU,gBAAgBC,UAuBlBhf,EAAK3B,QAAU4G,UAAQjF,EAAK3B,OAAQ,IAAMm1B,EAAKzU,gBAAgBC,WAAaja,eAAa/E,EAAK3B,OAAQ,eACtG0G,eAAa/E,EAAK3B,OAAQ,cAAc6O,KAAOsmB,EAAKzU,gBAAgBC,YACpE1P,WAAS,eAAgBtS,KAAKy2B,aAAczzB,GAC5CwzB,EAAKpwB,QfpaA,UeoawBpD,IACxBA,EAAKmD,QAAUqwB,EAAKzU,gBAAgBC,WACrChiB,KAAK28B,aAAa35B,GACdwzB,EAAK1f,cACL0f,EAAKr5B,SAAW6C,KAAK42B,aAAaJ,EAAKr5B,aA7B/C4K,eAAa/E,EAAK3B,OAAQ,eACtBrB,KAAKrJ,OAAOsZ,QAAQjI,cAAc,kBAClChI,KAAKy2B,aAAe,WAExBnkB,WAAS,eAAgBtS,KAAKy2B,aAAczzB,GAC5CA,EAAK0zB,UAAY1zB,EAAK0zB,YAAc1zB,EAAK45B,UAAY58B,KAAK68B,aAAa75B,EAAK3B,OAAOgd,eAAiBrb,EAAK0zB,UACzGF,EAAKpwB,QfjZA,UeiZwBpD,GACxBA,EAAKmD,SACD/O,EAAgB4I,KAAKrJ,SACtBqJ,KAAK22B,SAAS3zB,GAEdwzB,EAAK1f,cACL0f,EAAKr5B,SAAW6C,KAAK42B,aAAaJ,EAAKr5B,WAE3Cq5B,EAAK5+B,KAAKu0B,UACLx0B,oBAAkB6+B,EAAKrtB,mBAAmBnB,cAAc,wBACzDwuB,EAAKrtB,mBAAmBnB,cAAc,sBAAsBuZ,WAkB5EvhB,KAAKy5B,0BACLz5B,KAAKw5B,oBACA7hC,oBAAkBqI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,IAG7Etc,oBAAkBqI,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,KACvFjU,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,oBAAoB,GAAGsN,SAHlEvhB,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,qBAAqB,GAAGsN,SAKnEvhB,KAAKrJ,OAAO2I,sBAAwBU,KAAKrJ,OAAOkX,cAAgBlW,oBAAkBqL,EAAKvE,KAAK,GAAa,YAAI,CAC7G,GAAItE,GAAQ6F,KAAKrJ,OAAOyI,eACxBjF,IAAgB,CAChB,IAAIq4B,GAAkBxyB,KAAKrJ,OAAO6E,0BAA0B,GACxDqL,EAAW7G,KAAKrJ,OAAOiB,KAAKkH,wBAAwBkE,EAAKvE,KAAK,GAAG+zB,IACjE7zB,EAAMqB,KAAKrJ,OAAOkI,UAAUgI,GAC5BpI,EAAOuE,EAAKvE,KAAK,EACrB,IAA0B,kBAAtBuB,KAAKy2B,aAAkC,CACvC,GAAI99B,MACAsM,IACJtM,GAAOF,KAAKgG,GACZwG,EAAKxM,KAAKkG,GACVF,EAAOuE,EAAKvE,KAAK,GAAa,WAC9BoI,EAAW7G,KAAKrJ,OAAOiB,KAAKkH,wBAAwBL,EAAK+zB,GACzD,IAAIsK,GAAY98B,KAAKrJ,OAAOkI,UAAUgI,EACtClO,GAAOF,KAAKgG,GACZwG,EAAKxM,KAAKqkC,EACV,KAAK,GAAIxlC,GAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B0I,KAAKrJ,OAAO4I,aAAaC,YACrBf,KAAM9F,EAAOrB,GAAImI,KAAMwF,EAAK3N,GAAGoI,MAAMvF,GACrCwF,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,iBAClDS,YAAa,kBAGrB,IAAImU,GAAY8oB,EAAU7oB,uBAAuB,sBAAsB,EAClEtc,qBAAkBqc,KACnB3J,eAAa2J,GAAY,sBACzB5G,YAAU4G,GAAY,yBAI1BhU,MAAKrJ,OAAO4I,aAAaC,YACrBf,KAAMA,EAAMgB,KAAMd,EAAIe,MAAMvF,GAC5BwF,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,iBAClDS,YAAa,qBAK7Bi2B,EAAM70B,UAAU07B,aAAe,SAAU35B,GACrC,GAKI+5B,GALAvG,EAAOx2B,KAAKrJ,OAEZgoB,EAAY1W,UAAQjF,EAAK3B,OAAQ,MACjC27B,EAAcC,MAAMj9B,KAAK68B,aAAale,IAAc,EAAI3e,KAAK68B,aAAale,GAC1E8d,EAAc10B,eAAa/E,EAAK3B,OAAQ,aAE5C,IAAIo7B,GAAeA,EAAYvsB,KAAOlQ,KAAKrJ,OAAOorB,gBAAgBC,WAAatrB,EAAasJ,KAAKrJ,UACzFS,EAAgB4I,KAAKrJ,QAAS,CAClComC,EAAaN,EAAYC,cAAc,EAGvC,KAAK,GAFDvkC,GAAUq+B,EAAK5wB,qBACf2qB,KACKj5B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCi5B,EAAQj5B,GAAKa,EAAQb,GAAG6C,KAE5B,IAA6B,MAAzB6F,KAAKrJ,OAAOkG,YAAsBlF,oBAAkBqI,KAAKy2B,eAAuC,kBAAtBz2B,KAAKy2B,cAE/E,IAAK,GADDyG,MACK5lC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC,GAAIa,EAAQb,GAAGgC,gBAAiB,CAC5B4jC,EAAWzkC,KAAKN,EAAQb,GAExB,KAAK,GADD0G,GAAQ7F,EAAQb,GAAGiC,aACd45B,EAAM,EAAGA,EAAMn1B,EAAMxG,OAAQ27B,IAClC+J,EAAWzkC,KAAKuF,EAAMm1B,GAE1Bh7B,GAAU+kC,EAItB1G,EAAKpnB,OflfO,eekfqBmhB,QAASA,EAASp4B,QAASA,IAC5D4kC,EAAW3tB,OfrfF,Yeqf2B0lB,QAASkI,EAAa7kC,QAASA,GACnE,IAAIglC,GAAqBJ,EAAWhI,qBAAqB7e,YACzD,KAAKve,oBAAkBwlC,GACnB,IAAS7lC,EAAI,EAAGA,EAAI6lC,EAAmB3lC,OAAQF,IAE3C,GADA6lC,EAAmB7lC,GAAG6C,MAAQ7C,GACzBK,oBAAkBwlC,EAAmB7lC,GAAGyB,YAAa,CACtD,GAAIqkC,GAAc/+B,WAAS,sBAAwB8+B,EAAmB7lC,GAAGgH,eAAiB,SAAUy+B,EACpGI,GAAmB7lC,GAAGyB,WAAWoB,MAAQijC,EAIrD5G,EAAK5+B,KAAKu0B,UACV4Q,EAAWnlC,KAAKu0B,UACZ4Q,EAAWnlC,KAAKhB,WAAWY,OAAS,IACpCulC,EAAWnlC,KAAKu0B,UACXx0B,oBAAkBolC,EAAW5zB,mBAAmBnB,cAAc,wBAC/D+0B,EAAW5zB,mBAAmBnB,cAAc,sBAAsBuZ,SAEjE5pB,oBAAkBolC,EAAWpN,aAAa3nB,cAAc,uBACzD+0B,EAAWpN,aAAa3nB,cAAc,qBAAqBuZ,UAInEnqB,EAAgB4I,KAAKrJ,UACrBomC,EAAaN,EAAYC,cAAc,GACvClG,EAAK5+B,KAAKu0B,UACV4Q,EAAWnlC,KAAKu0B,YAGxB2J,EAAM70B,UAAU47B,aAAe,SAAUle,GACrC,MAAOA,GAAYrP,SAASqP,EAAUvV,aAAa,iBAAkB,IAAM,GAE/E0sB,EAAM70B,UAAUjI,cAAgB,SAAUL,GACtC,GAAII,GAAaJ,EAAOI,UACxB,IAA0B,kBAAtBiH,KAAKy2B,aAAkC,CACvC,GAAI4G,GAAiBr9B,KAAKrJ,OAAOiP,qBAAqB,EACtD5F,MAAKs3B,cAAgBt+B,EAAcgH,KAAKrJ,OAAQ0mC,EAAetkC,WAAWE,UAEpD,kBAAtB+G,KAAKy2B,eACOz2B,KAAKrJ,OAAOiP,qBAAqB,GAAGxL,QAClCrB,EAAWqB,MACrB4F,KAAKs3B,cAAgBt+B,EAAcgH,KAAKrJ,OAAQoC,EAAWE,UAG3D+G,KAAKhH,cAAcD,KAI/B+8B,EAAM70B,UAAU01B,SAAW,SAAU3zB,EAAMs6B,GACvC,GAA0B,YAAtBt9B,KAAKy2B,eAA+B//B,EAAasJ,KAAKrJ,QAAS,CAC/D,GAAI6/B,GAAOx2B,KAAKrJ,OACZmgC,MAAgB,GAChBQ,MAAgB,EACpB,IAAI3/B,oBAAkBqL,EAAK0zB,WAAY,CACnC,GAAI7vB,GAAW2vB,EAAKpxB,wBAAwB,GAAK,EAC7CzM,EAAS69B,EAAK/4B,wBAAwBoJ,EAC1C7G,MAAKhH,cAAcL,OAGnBqK,GAAK0zB,UAAY1zB,EAAK0zB,YAAc1zB,EAAK45B,UAAY58B,KAAK68B,aAAa75B,EAAK3B,OAAOgd,eAAiBrb,EAAK0zB,UACzG12B,KAAKs3B,cAAgBd,EAAK/4B,wBAAwBuF,EAAK0zB,UAE3D,IAAIK,KACJO,GAAgBt3B,KAAKs3B,cAChBt0B,EAAKvE,KAAK,GAIXs4B,EAAc/zB,EAAKvE,KAHnBs4B,EAAYt+B,KAAKuK,EAAKvE,KAK1B,IAAI4M,GAAQ,EACRgvB,EAAer6B,KAAKrJ,OAAOorB,gBAAgBC,QAC/ChiB,MAAKu9B,eAAiBlD,CAEjBA,GAIDr6B,KAAKi2B,cAA8BoE,GAAgBr6B,KAAKg2B,mBAHxDh2B,KAAKw8B,mBAAmBzF,EAAaO,EAKzC,IAAIkG,GAAazG,EAAYv/B,MACxBG,qBAAkBqI,KAAKrJ,OAAOkG,YAC/Bk6B,EAAY0G,SAEhB,KAAK,GAAInmC,GAAI,EAAGA,EAAIkmC,EAAYlmC,IAAK,CACjCw/B,EAAgBC,EAAYz/B,GAC5B0I,KAAK82B,cAAgBA,CACrB,IAAI9qB,GAAchJ,EAAK0zB,UACnBz7B,GAAmBtD,oBAAkB6+B,EAAK55B,gBAC9C,IAA0B,YAAtBoD,KAAKy2B,aAA4B,CAIjC,GAHKD,EAAKzU,gBAAgBC,WAAYsb,GAClCt9B,KAAKk3B,gBAELl3B,KAAK82B,gBAAkB92B,KAAKs3B,cAAe,CAC3C,GAAIoG,GAAe19B,KAAK68B,aAAa75B,EAAK3B,OAAOs8B,aAAatf,cAC1D4e,OAAMS,KACNA,EAAe19B,KAAK68B,aAAa75B,EAAK3B,OAAOgd,gBAEjDrS,EAAchJ,EAAK0zB,UAAYgH,EAC/BpG,EAAgBt3B,KAAKs3B,cAAgBt3B,KAAKrJ,OAAO8G,wBAAwBuF,EAAK0zB,WAElF,GAAIkH,GAAe59B,KAAKkW,aAAa1X,QAAQ84B,EAE7C,IADAt3B,KAAK69B,UAAUD,EAAc3iC,EAAiB3D,GACpB,kBAAtB0I,KAAKy2B,aAAkC,CAcvC,GAbKa,EAAch+B,iBAOf+R,EAAQrL,KAAK89B,cAAcxG,EAAe,GACtCt3B,KAAKrJ,OAAOiG,iBACZoD,KAAKvE,SAASqB,OAAO8gC,EAAevyB,EAAQ,EAAG,EAAGrL,KAAK82B,cAAcz8B,UAEzE2F,KAAKkW,aAAapZ,OAAO8gC,EAAevyB,EAAQ,EAAG,EAAGrL,KAAK82B,iBAVvD92B,KAAKrJ,OAAOiG,iBACZoD,KAAKvE,SAASqB,OAAO8gC,EAAe,EAAG,EAAG59B,KAAK82B,cAAcz8B,UAEjE2F,KAAKkW,aAAapZ,OAAO8gC,EAAe,EAAG,EAAG59B,KAAK82B,gBASnDA,EAAcx9B,iBAAmB3B,oBAAkBqI,KAAKrJ,OAAOkG,WAAY,CAE3EmD,KAAK+9B,uBAAuBjH,EADhB,GAEZ92B,KAAKg+B,kBAAkBlH,EAAe8G,EAAevyB,EAAQ,GAEjE,GAAIisB,EAAcv+B,WAAY,CAC1B,GACIQ,GADMyG,KAAKm2B,0BAA0BmB,EAAch5B,gBAChC,GAAG/E,aACtB0kC,EAAqB1kC,EAAaiF,QAAQ84B,GAAiB,CAC/D/9B,GAAauD,OAAOmhC,EAAoB,EAAGnH,IAGnD92B,KAAKk+B,WAAWlyB,EAAa4xB,EAAc56B,EAAMs6B,EAAYriC,EAAiB3D,GAElF,GAAIK,oBAAkBm/B,EAAc/9B,YAAa,CAC7C,GAAIkd,GAAgBugB,EAAKt5B,WACrBihC,EAAiBloB,EAAczX,QAAQwB,KAAKs3B,cACtB,mBAAtBt3B,KAAKy2B,aACLxgB,EAAcnZ,OAAOqhC,EAAiB,EAAG,EAAGrH,GAEjB,eAAtB92B,KAAKy2B,cACVxgB,EAAcnZ,OAAOqhC,EAAgB,EAAGrH,GAGhDN,EAAKzB,qBAAqBoC,2BAItCrB,EAAM70B,UAAUi9B,WAAa,SAAUlyB,EAAa4xB,EAAc56B,EAAM/H,EAAiBqiC,EAAYhmC,GACjG,GAAIk/B,GAAOx2B,KAAKrJ,OACZ4C,EAAeF,EAAoB2G,KAAKs3B,eACxC8G,EAAsBzmC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBomC,EAAe,EAC5CrkC,EAAa/B,OAASomC,EAAe,CACf,mBAAtB59B,KAAKy2B,eACDD,EAAK55B,iBACLoD,KAAKvE,SAASqB,OAAOshC,EAAoB,EAAGp+B,KAAK82B,cAAcz8B,UAC/D2F,KAAKkW,aAAapZ,OAAOshC,EAAoB,EAAGp+B,KAAK82B,gBAGrD92B,KAAKkW,aAAapZ,OAAOshC,EAAoB,EAAGp+B,KAAK82B,eAEzD92B,KAAKq+B,cACDr+B,KAAK82B,cAAcx9B,iBACnB0G,KAAKg+B,kBAAkBh+B,KAAK82B,cAAesH,EAAoBp+B,KAAKs3B,cAAcl+B,YAI9F08B,EAAM70B,UAAU48B,UAAY,SAAUD,EAAc3iC,EAAiB3D,GACjE,GAAIk/B,GAAOx2B,KAAKrJ,MAChB,IAA0B,eAAtBqJ,KAAKy2B,aAA+B,CAQpC,GAPID,EAAK55B,iBACLoD,KAAKvE,SAASqB,OAAO8gC,EAAc,EAAG59B,KAAK82B,cAAcz8B,UAE7D2F,KAAK82B,cAAc/9B,WAAaiH,KAAKkW,aAAa0nB,GAAc7kC,WAChEiH,KAAK82B,cAAcx4B,eAAiB0B,KAAKkW,aAAa0nB,GAAct/B,eACpE0B,KAAK82B,cAAc18B,MAAQ4F,KAAKkW,aAAa0nB,GAAcxjC,MAC3D4F,KAAKkW,aAAapZ,OAAO8gC,EAAc,EAAG59B,KAAK82B,eAC3C92B,KAAK82B,cAAcx9B,gBAAiB,CAEpC0G,KAAKg+B,kBAAkBh+B,KAAK82B,cAAe8G,GAC3C59B,KAAK+9B,uBAAuB/9B,KAAK82B,cAFrB,GAIhB,GAAI92B,KAAKs3B,cAAcv+B,WAAY,CAC/B,GACIQ,GADMyG,KAAKm2B,0BAA0Bn2B,KAAKs3B,cAAch5B,gBACrC,GAAG/E,aACtB0kC,EAAqB1kC,EAAaiF,QAAQwB,KAAKs3B,cACnD/9B,GAAauD,OAAOmhC,EAAoB,EAAGj+B,KAAK82B,kBAI5DhB,EAAM70B,UAAUo9B,YAAc,WAC1B,GAAI7H,GAAOx2B,KAAKrJ,OACZmgC,EAAgB92B,KAAK82B,cACrBQ,EAAgBt3B,KAAKs3B,cACrBgH,EAAY9H,EAAKz5B,YAWrB,IAVKu6B,EAAch+B,kBACfg+B,EAAch+B,iBAAkB,EAChCg+B,EAAcvoB,yBAA0B,GACpCpX,oBAAkB2/B,EAAc/9B,eAAuD,IAAtC+9B,EAAc/9B,aAAa/B,UAC5E8/B,EAAc/9B,iBACTi9B,EAAK55B,iBAAmBjF,oBAAkB2/B,EAAcj9B,SAASikC,MAClEhH,EAAcj9B,SAASikC,SAIT,kBAAtBt+B,KAAKy2B,aAAkC,CACvC,GAAI19B,GAAasD,YAAWi7B,EAQ5B,UAPOv+B,GAAWQ,aAClBu9B,EAAc/9B,WAAaA,EAC3B+9B,EAAcx4B,eAAiBg5B,EAAcr+B,SAC7Cq+B,EAAc/9B,aAAauD,OAAOw6B,EAAc/9B,aAAa/B,OAAQ,EAAGs/B,GACnEn/B,oBAAkBm/B,IAAmBN,EAAK55B,iBAAoBjF,oBAAkB2/B,EAAcj9B,SAASikC,KACxGhH,EAAcj9B,SAASm8B,EAAKz5B,cAAcD,OAAOw6B,EAAc/9B,aAAa/B,OAAQ,EAAGs/B,EAAcz8B,UAEpGy8B,EAAcx9B,gBAGd,CAEDw9B,EAAc18B,MAAQk9B,EAAcl9B,MAAQ,EAC5C4F,KAAK+9B,uBAAuBjH,EAFhB,OAHZA,GAAc18B,MAAQk9B,EAAcl9B,MAAQ,CAOhDk9B,GAAcl+B,UAAW,IAGjC08B,EAAM70B,UAAUi2B,cAAgB,WACxBl3B,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,SAChEqJ,KAAKkW,aAAelW,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAC3DsE,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAAWA,WAAW8E,OAGlDsE,KAAKkW,aAAelW,KAAKrJ,OAAOiB,KAAKhB,WACrCoJ,KAAKvE,SAAWuE,KAAKrJ,OAAOC,WAEhC,IAAI2nC,EACJA,GAAavlC,EAAcgH,KAAKrJ,OAAQqJ,KAAK82B,cAAc79B,UAC3D+G,KAAKw+B,cAAcD,IAEvBzI,EAAM70B,UAAU+8B,kBAAoB,SAAUrlC,EAAQ0S,EAAOjS,GACzD,GAAIuS,GACA6qB,EAAOx2B,KAAKrJ,OACZa,EAAS,CACb,KAAKmB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IACxBqU,EAAgBhT,EAAOY,aAAajC,GACpC+T,IACAmrB,EAAKr5B,SAASL,OAAOuO,EAAO,EAAGM,GAC/B2G,WAAS,sBAAwB3G,EAAc1S,SAAU0S,EAAe3L,KAAKrJ,QACzE6/B,EAAK55B,iBACLoD,KAAKvE,SAASqB,OAAOuO,EAAO,EAAGM,EAActR,UAE7CsR,EAAcrS,kBACd+R,EAAQrL,KAAKg+B,kBAAkBryB,EAAeN,GAGtD,OAAOA,IAEXyqB,EAAM70B,UAAU88B,uBAAyB,SAAUplC,EAAQyB,GACvD,GACIuR,GADAnU,EAAS,CAGb,IADA4C,KACKzB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BqU,EAAgBhT,EAAOY,aAAajC,EACpC,IAAI4F,OAAa,EACbvE,GAAOI,aACPmE,EAAalE,EAAcgH,KAAKrJ,OAAQgC,EAAOI,WAAWE,WAE9D0S,EAAcvR,MAAQzB,EAAOI,WAAamE,EAAW9C,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFuR,EAAcrS,kBACdc,IACAA,EAAQ4F,KAAK+9B,uBAAuBpyB,EAAevR,IAG3D,MAAOA,IAEX07B,EAAM70B,UAAUu9B,cAAgB,SAAU7lC,GACtC,GACI/B,GADA4/B,EAAOx2B,KAAKrJ,MAGZC,GADAoJ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACnDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE7B,IAAI2nC,GAAa5lC,EAGbsC,GAAmBtD,oBAAkB6+B,EAAK55B,iBAC1C6hC,EAAiBz+B,KAAKm2B,0BAA0BoI,EAAWjgC,gBAAgB,EAC/E,IAAIigC,EAAY,CACZ,GAAIA,EAAWxlC,WAAY,CACvB,GAAIQ,GAAeklC,EAAiBA,EAAellC,gBAC/CmlC,EAAa,CACbnlC,IAAgBA,EAAa/B,OAAS,IACtCknC,EAAanlC,EAAaiF,QAAQ+/B,GAClCE,EAAellC,aAAauD,OAAO4hC,EAAY,GAC1C1+B,KAAKrJ,OAAOiG,iBACb9B,GAAaZ,MAAOqkC,EAAYhjC,OAAQ,UAAYyE,KAAKrJ,OAAQsE,EAAiBsjC,EAAWpkC,MAAOokC,EAAWpkC,QAI3H,GAAIq8B,EAAK55B,gBAAiB,CAClB2hC,EAAWjlC,iBAAmBilC,EAAWhlC,aAAa/B,OAAS,GAC/DwI,KAAK2+B,gBAAgBJ,EAKzB,KAAK,GAHDlH,OAAM,GACNuH,MAAM,GACN1oB,EAAetf,EACVU,EAAI,EAAGA,EAAI4e,EAAa1e,OAAQF,IACjC4e,EAAa5e,GAAG0I,KAAKrJ,OAAOkG,aAAe0hC,EAAWlkC,SAAS2F,KAAKrJ,OAAOkG,aAC3Ew6B,EAAM//B,EAGd,KAASA,EAAI,EAAGA,EAAI0I,KAAKkW,aAAa1e,OAAQF,IACtC0I,KAAKkW,aAAa5e,GAAG0I,KAAKrJ,OAAOkG,aAAe0hC,EAAWlkC,SAAS2F,KAAKrJ,OAAOkG,aAChF+hC,EAAMtnC,IAGD,IAAT+/B,IAAuB,IAATuH,IACdhoC,EAAWkG,OAAOu6B,EAAK,GACvBr3B,KAAKkW,aAAapZ,OAAO8hC,EAAK,IAGtC,GAAIC,GAAgB7+B,KAAKkW,aAAa1X,QAAQ+/B,EAC9C,KAAK/H,EAAK55B,gBAAiB,CACvB,GAAIkiC,GAAc9+B,KAAKrJ,OAAOuG,WAAWsB,QAAQ+/B,IAC5B,IAAjBO,IACAtI,EAAKt5B,WAAWJ,OAAOgiC,EAAa,GACpCloC,EAAWkG,OAAOgiC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyBrI,EAAK55B,gBAE9B,IAAK,GADD41B,GAAkBgE,EAAKh7B,0BAA0B,GAC5CxB,EAAI,EAAGA,EAAIgG,KAAKkW,aAAa1e,OAAQwC,IACtCgG,KAAKkW,aAAalc,GAAGw4B,KAAqB+L,EAAW/L,KACrDqM,EAAgB7kC,EAI5B,KAAKw8B,EAAK55B,gBAAiB,CACvB,GAAImiC,GAAqB/+B,KAAK89B,cAAcS,EAAY,EACxDv+B,MAAKkW,aAAapZ,OAAO+hC,EAAeE,EAAqB,GAE7DR,EAAWxlC,YAAc0lC,GAAkBA,EAAellC,eAAiBklC,EAAellC,aAAa/B,SACvGinC,EAAerlC,UAAW,EAC1BqlC,EAAenlC,iBAAkB,EACjCmlC,EAAe1vB,yBAA0B,KAIrD+mB,EAAM70B,UAAU09B,gBAAkB,SAAUhmC,GACxC,GACIgT,GACA0rB,EACAuH,EACAhoC,CAJOoJ,MAAKrJ,MAMZC,GADAoJ,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACnDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE7B,KAAK,GAAIU,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDqU,EAAgBhT,EAAOY,aAAajC,EACpC,IAAI4e,OAAe,EAEfA,GADAlW,KAAKrJ,OAAOC,qBAAsBC,gBAAe4C,EAAUuG,KAAKrJ,QACjDqJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KAGlCsE,KAAKrJ,OAAOC,UAE/B,KAAK,GAAIooC,GAAM,EAAGA,EAAM9oB,EAAa1e,OAAQwnC,IACrC9oB,EAAa8oB,GAAKh/B,KAAKrJ,OAAOkG,aAAe8O,EAActR,SAAS2F,KAAKrJ,OAAOkG,aAChFw6B,EAAM2H,EAGd,KAAK,GAAIC,GAAM,EAAGA,EAAMj/B,KAAKkW,aAAa1e,OAAQynC,IAC9C,GAAIj/B,KAAKkW,aAAa+oB,GAAKj/B,KAAKrJ,OAAOkG,aAAe8O,EAActR,SAAS2F,KAAKrJ,OAAOkG,WAAY,CACjG+hC,EAAMK,CACN,QAGK,IAAT5H,IAAuB,IAATuH,IACdhoC,EAAWkG,OAAOu6B,EAAK,GACvBr3B,KAAKkW,aAAapZ,OAAO8hC,EAAK,IAE9BjzB,EAAcrS,iBACd0G,KAAK2+B,gBAAgBhzB,KAIjCmqB,EAAM70B,UAAU68B,cAAgB,SAAUnlC,EAAQ0S,GAC9C,GAAIM,EACJ,KAAKhT,EAAOW,gBACR,MAAO,EAEX,KAAK,GAAIhC,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C+T,KADAM,EAAgBhT,EAAOY,aAAajC,IAElBgC,kBACd+R,EAAQrL,KAAK89B,cAAcnyB,EAAeN,GAGlD,OAAOA,IAEXyqB,EAAM70B,UAAUu7B,mBAAqB,SAAU0C,EAAgBvzB,GAChD3L,KAAKrJ,MAAhB,IACIwoC,GAAiBn/B,IACrBk/B,GAAe9hC,OAAO,SAAUC,GAC5B,GAAIA,EAAE/D,kBAAoB3B,oBAAkB0F,EAAE9D,cAAe,CAEzD,IAAe,IADH8D,EAAE9D,aAAaiF,QAAQmN,GAQ/B,MAHAwzB,GAAe1I,aAAe,UAC9B0I,EAAelH,oBACfkH,EAAepJ,SAAU,EALzBoJ,GAAe3C,mBAAmBn/B,EAAE9D,aAAcoS,OAWlEmqB,EAAM70B,UAAU8F,QAAU,WACtB/G,KAAK0H,uBAKTouB,EAAM70B,UAAUyG,oBAAsB,WAC9B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,Ifv6BI,ceu6BmB5H,KAAKo2B,YACxCp2B,KAAKrJ,OAAOiR,Ift6BI,ces6BmB5H,KAAKq2B,YACxCr2B,KAAKrJ,OAAOiR,If76BC,We66BmB5H,KAAKs2B,WACrCt2B,KAAKrJ,OAAOiR,If56BI,ce46BmB5H,KAAKu2B,eAS5CT,EAAM70B,UAAU4B,cAAgB,WAC5B,MAAO,kBAEJizB,KCjjCPr1B,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,OACpH,KAAK,GAAIhK,GAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASqJ,EAAIS,EAAW9J,MAAImK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQvJ,EAAK2J,GAAKd,EAAEU,EAAQvJ,KAAS2J,EAChJ,OAAOF,GAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DwzB,GAAiC,SAAUlzB,GAE3C,QAASkzB,KACL,MAAkB,QAAXlzB,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,MAPAS,IAAUw0B,EAAiBlzB,GAI3BZ,IACIc,cACDgzB,EAAgBh0B,UAAW,eAAY,IACnCg0B,GACT/yB,iBChCEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAYnFq+B,GAA8C,SAAUr9B,GAExD,QAASq9B,GAA6BzoC,GAClC,GAAI6N,GAAQzC,EAAOa,KAAK5C,KAAMrJ,IAAWqJ,IAEzC,OADAwE,GAAM4C,mBACC5C,EAkDX,MAtDA/D,IAAU2+B,EAA8Br9B,GAMxCq9B,EAA6Bn+B,UAAUmG,iBAAmB,WACtDpH,KAAKrJ,OAAO0Q,GjBqEM,gBiBrEkBrH,KAAKq/B,SAAUr/B,OAEvDo/B,EAA6Bn+B,UAAUo+B,SAAW,SAAUr8B,GACxDhD,KAAKs/B,WAAat8B,EAAKvE,MAE3B2gC,EAA6Bn+B,UAAUs+B,aAAe,SAAU9gC,EAAM+gC,GAClE,GAAKx/B,KAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACvC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAeroC,EAAgB4I,KAAKrJ,QACzE,MAAOoL,GAAOd,UAAUs+B,aAAa38B,KAAK5C,KAAMvB,EAAM+gC,EAGjD7nC,qBAAkB6nC,EAAW3/B,cAAsD,gBAAtC2/B,EAAW3/B,YAAYkF,aACrEy6B,EAAW3/B,YAAc,UAG7B,KAAK,GADDoF,GAAOlD,EAAOd,UAAUs+B,aAAa38B,KAAK5C,KAAMvB,EAAM+gC,GACjD/9B,EAAI,EAAGA,EAAIwD,EAAKzN,OAAQiK,IAC7BwD,EAAKxD,GAAGtH,MAAS6F,gBAAiBxB,QAAQyG,EAAKxD,GAAGhD,KAEtD,OAAOwG,IAGfm6B,EAA6Bn+B,UAAUy+B,mBAAqB,SAAUnkC,GAClE,GAAIokC,IAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAUxe,KAAK,SAAUjnB,GAAS,MAAOqB,KAAWrB,GAChE,IAAK8F,KAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACvC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAeroC,EAAgB4I,KAAKrJ,QAAS,CAClF,GACImf,GAAc9V,KAAU,MAAE8V,WAC1B6pB,IACA3/B,KAAK4/B,SACL5/B,KAAKvB,QACLuB,KAAK6/B,WAEW,kBAAXtkC,GAA8ByE,KAAK4/B,MAAM9pB,IAC9C9V,KAAK4/B,MAAM9pB,GAAate,OAAUwI,KAAKrJ,qBAAsBmpC,sBACtD9/B,MAAK4/B,MAAM9pB,QAIlB6pB,GAAoB,kBAAXpkC,KACTyE,KAAK4/B,SACL5/B,KAAKvB,QACLuB,KAAK6/B,UAGb,OAAOF,IAEJP,GACTW,4BCvEEC,GAAwB,WAIxB,QAASA,GAAOrpC,GACZ8L,OAAKC,OAAOu9B,UACZjgC,KAAKrJ,OAASA,EACdqJ,KAAKkgC,mBAAoB,EACzBlgC,KAAKmL,kBACLnL,KAAKmgC,oBACLngC,KAAKogC,sBACLpgC,KAAKoH,mBAyMT,MAnMA44B,GAAO/+B,UAAU4B,cAAgB,WAC7B,MAAO,UAOXm9B,EAAO/+B,UAAU8F,QAAU,WACvB/G,KAAK0H,uBAKTs4B,EAAO/+B,UAAUmG,iBAAmB,WAChCpH,KAAKrJ,OAAO0Q,GAAG,mBAAoBrH,KAAKqgC,sBAAuBrgC,MAC/DA,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKsgC,iBAAkBtgC,OAK1DggC,EAAO/+B,UAAUyG,oBAAsB,WAC/B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAKqgC,uBACzCrgC,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKsgC,oBAMzCN,EAAO/+B,UAAUo/B,sBAAwB,SAAUE,GAC/CjuB,WAAS,8BAAgCtS,KAAKrJ,QAC9CqJ,KAAKmgC,iBAAmBI,EAAY9hC,KACpCuB,KAAKogC,sBACLpgC,KAAKmL,kBACLnL,KAAKkgC,mBAAoB,CACzB,KAAK,GAAIxK,GAAI,EAAGA,EAAI11B,KAAKmgC,iBAAiB3oC,OAAQk+B,IAAK,CACnD,GAAI5pB,GAAM9L,KAAKmgC,iBAAiBzK,EAChC11B,MAAKwgC,gBAAgB10B,EACrB,IAAI/T,GAAwD,KAAxCiI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAakI,KAAKrJ,OAAOsB,eAAeF,cACtFiI,KAAKrJ,OAAOkB,eAAeE,aACT,WAAlBA,GAA+C,SAAlBA,GACqB,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,MACzFkI,KAAKkgC,mBAAoB,EAE7B,IAAIO,GAAUjoC,YAAU,eAAgBsT,IACnCnU,oBAAkB8oC,IAAYA,EAAQjpC,QACvC8a,WAAS,0BAA2BtS,KAAK0gC,iBAAiB50B,GAAMA,EAEpE,IAAI60B,GAAWnoC,YAAU,aAAcsT,EACvC,KAAKnU,oBAAkBgpC,GAAW,CAC9B,GAAIC,GAAY5nC,EAAcgH,KAAKrJ,OAAQmV,EAAI/S,WAAWE,UAAU,EAGpEqZ,YAAS,2BAA2B,EAAMsuB,GACtCA,GAAaA,EAAU7nC,YACvBiH,KAAK6gC,2BAA2BD,IAIxC5gC,KAAKmgC,iBAAiB3oC,OAAS,GAAKwI,KAAKkgC,mBACzClgC,KAAK8gC,oBAET9gC,KAAKrJ,OAAOyY,OAAO,gBAAkBgB,OAAQpQ,KAAKmL,kBAEtD60B,EAAO/+B,UAAU4/B,2BAA6B,SAAUloC,GACpD,GAAIioC,GAAY5nC,EAAcgH,KAAKrJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnE8nC,EAAgB1iC,WAAS,2BAA4B2B,KAAKrJ,OAC1DiqC,IAAaG,EAAcvkC,eAAeokC,EAAU3nC,WACpDqZ,WAAS,2BAA2B,EAAMsuB,GAE1CA,GAAaA,EAAU7nC,YACvBiH,KAAK6gC,2BAA2BD,IAIxCZ,EAAO/+B,UAAUu/B,gBAAkB,SAAU7nC,GACzC,GAAIhC,GAASqC,EAAcgH,KAAKrJ,OAAQgC,EAAO2F,eAI/C,IAAsB,UAFsC,KAAxC0B,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAAakI,KAAKrJ,OAAOsB,eAAeF,cACtFiI,KAAKrJ,OAAOkB,eAAeE,gBACmD,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IA4B9BH,oBAAkBhB,KAGK,WAFsC,KAAxCqJ,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAClDkI,KAAKrJ,OAAOsB,eAAeF,cAAgBiI,KAAKrJ,OAAOkB,eAAeE,gBACa,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAMnCkI,KAAKwgC,gBAAgB7pC,IAL0B,IAA3CqJ,KAAKmgC,iBAAiB3hC,QAAQ7H,IAC9BqJ,KAAKwgC,gBAAgB7pC,KAOY,IAAzCqJ,KAAKmL,eAAe3M,QAAQ7F,KAC5BqH,KAAKmL,eAAe1S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,aA1CzE,IAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CqJ,KAAKmgC,iBAAiB3hC,QAAQ7F,GAM9B,aAL6C,IAAzCqH,KAAKmL,eAAe3M,QAAQ7F,KAC5BqH,KAAKmL,eAAe1S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,QACrEgC,EAAOoW,yBAA0B,QAMzC/O,MAAKwgC,gBAAgB7pC,IAC0B,IAA3CqJ,KAAKmgC,iBAAiB3hC,QAAQ7H,KAA2D,IAAzCqJ,KAAKmL,eAAe3M,QAAQ7H,IAC/B,IAAzCqJ,KAAKmL,eAAe3M,QAAQ7F,KAC5BqH,KAAKmL,eAAe1S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,UAI5B,IAAzCqJ,KAAKmL,eAAe3M,QAAQ7F,KAA6D,IAA3CqH,KAAKmgC,iBAAiB3hC,QAAQ7F,KAC5EqH,KAAKmL,eAAe1S,KAAKE,GACzB2Z,WAAS,4BAA8B3Z,EAAOM,SAAUN,EAAQqH,KAAKrJ,UAyBzFqpC,EAAO/+B,UAAUy/B,iBAAmB,SAAUvoC,GAG1C,IAAK,GAFD6oC,GAAWxoC,YAAU,eAAgBL,GACrC8oC,GAAU,EACL51B,EAAQ,EAAGA,EAAQ21B,EAASxpC,OAAQ6T,IAAS,CAClD,GAAIo1B,GAAUO,EAAS31B,GAAO9R,aAC1BxB,EAAwD,KAAxCiI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IAChDkI,KAAKrJ,OAAOsB,eAAeF,cAAgBiI,KAAKrJ,OAAOkB,eAAeE,aAU1E,IATwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,KACfuG,WAAS,2BAA4B2B,KAAKrJ,QAC3C6F,eAAewkC,EAAS31B,GAAOpS,YAC9C+G,KAAKmL,eAAe1S,KAAKuoC,EAAS31B,IAClCiH,WAAS,4BAA8B0uB,EAAS31B,GAAOpS,SAAU+nC,EAAS31B,GAAQrL,KAAKrJ,QACvFsqC,GAAU,GAGK,SAAlBlpC,IACsD,IAAnDiI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApDkI,KAAKmgC,iBAAiB3hC,QAAQwiC,EAAS31B,IAAgB,CACvD41B,GAAU,CACV,QAGHtpC,oBAAkB8oC,IAAYA,EAAQjpC,SACvCypC,EAAUjhC,KAAK0gC,iBAAiBM,EAAS31B,KAEtB,UAAlBtT,GAA+C,SAAlBA,IAA6BipC,EAASxpC,SACpEypC,GAAU,GAGlB,MAAOA,IAEXjB,EAAO/+B,UAAU6/B,kBAAoB,WAGjC,IAAK,GAFDnoC,GAASqH,KAAKmL,eACd9S,EAAM2H,KAAKmL,eAAe3T,OACrB+J,EAAI,EAAGA,EAAIlJ,EAAKkJ,IAAK,CAC1B,GAAI2/B,GAAWloC,EAAcgH,KAAKrJ,OAAQgC,EAAO4I,GAAGjD,eAEpD,KAD2C,IAA9B3F,EAAO6F,QAAQ0iC,GAChB,CACR,GAAIC,GAAWnoC,EAAcgH,KAAKrJ,OAAQgC,EAAO4I,GAAGjD,gBAAgB,EACpE3F,GAAO4I,GAAG8M,YAAc8yB,EAAS9yB,YAAc,MAG/C1V,GAAO4I,GAAG8M,YAAc,EACxBrO,KAAKogC,mBAAmB3nC,KAAKE,EAAO4I,MAIhDy+B,EAAO/+B,UAAUq/B,iBAAmB,SAAU7hC,GAC1C,GAGIkN,GAHAN,EAAQ,EACRlO,EAAWsB,EAAKtB,SAChB9E,EAAM8E,EAAS3F,MAEnB,KAAK6T,EAAOA,EAAQhT,EAAKgT,IAAS,CAE9B,GAAI+1B,IADJz1B,EAAgBxO,EAASkO,IACEgD,aACvB+yB,GAAqB,IAAXA,GAAiBzpC,oBAAkBgU,EAAcoD,2BAC3DpD,EAAcoD,wBAA0B,KACxCpD,EAAc0C,YAAc,MAGpCrO,KAAKmL,kBACLnL,KAAKrJ,OAAOyY,OAAO,iBAAmBgB,OAAQjT,EAAUkO,MAAOlO,EAAS3F,UAErEwoC,KClNPqB,GAA6B,WAI7B,QAASA,GAAY1qC,GACjBqJ,KAAKshC,yBAA0B,EAC/B7+B,OAAKC,OAAO6+B,eACZvhC,KAAKrJ,OAASA,EACdqJ,KAAK6Q,eACL7Q,KAAKoH,mBAyKT,MAnKAi6B,GAAYpgC,UAAU4B,cAAgB,WAClC,MAAO,eAKXw+B,EAAYpgC,UAAUmG,iBAAmB,WACrCpH,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAKwhC,uBAAwBxhC,MAC7DA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAK4kB,mBAAoB5kB,MACzDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,sBAAuBrH,KAAKyhC,mBAAoBzhC,MACpEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,iBAAkBrH,KAAK0hC,eAAgB1hC,OAO/DqhC,EAAYpgC,UAAU8F,QAAU,WAC5B/G,KAAK0H,uBAKT25B,EAAYpgC,UAAUyG,oBAAsB,WACpC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAKwhC,wBACtCxhC,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAK4kB,oBACtC5kB,KAAKrJ,OAAOiB,KAAKgQ,IAAI,sBAAuB5H,KAAKyhC,oBACjDzhC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,iBAAkB5H,KAAK0hC,kBAEhDL,EAAYpgC,UAAUugC,uBAAyB,SAAUnO,GACrDrzB,KAAK6Q,YAAcwiB,GAEvBgO,EAAYpgC,UAAUma,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQymB,GAChC,GAAIn9B,GAAQxE,KACRpJ,EAAaoJ,KAAKrJ,OAAOC,WACzBgjB,EAAWthB,QAMf,OALAga,YAAS,QAASqvB,EAAO/nB,GACzBtH,WAAS,UAAU,EAAOsH,GACrBjiB,oBAAkBojB,KACnB/a,KAAKshC,wBAA0BvmB,EAAsBumB,yBAElD,GAAIM,SAAQ,SAAUna,EAASoa,GAClC,GAAInoC,IAAK8K,EAAMs9B,WAAelrC,YAAsBC,eAC9C2N,EAAM7N,OAAOC,WADgD,GAAIC,eAAYD,GAE/Eya,EAAQ,GAAIC,QAMhB,IALK9M,EAAMs9B,YACPzwB,EAAQ7M,EAAMiQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOuI,IAE7BpV,EAAM7N,OAAOyP,QnBjDM,oBmBiD2B/J,SAAOud,EAAUmB,IAC3DviB,YAAU,SAAUohB,GACpB,MAAO,KAEXlgB,GAAGsY,aAAaX,GAAOY,KAAK,SAAU5U,GAClC,GAAI0kC,GAAa,IAKjB,OAJKpqC,qBAAkBojB,IAA2BpjB,oBAAkBojB,EAAsBnkB,cACtFmrC,EAAahnB,EAAsBnkB,YAEvCmkB,EAAwBvW,EAAMw9B,2BAA2BjnB,EAAuBnkB,EAAYyG,GACrFmH,EAAM7N,OAAOiB,KAAKujB,kBAAkBC,IAAI5W,EAAM7N,OAAOiB,KAAMmjB,EAAuBC,EAAkBC,EAAU0mB,EAAOzmB,GAAQjJ,KAAK,SAAUgwB,GAC7H,MAAdF,EACAhnB,EAAsBnkB,WAAamrC,QAG5BhnB,GAAsBnkB,WAEjC6wB,EAAQwa,UAKxBZ,EAAYpgC,UAAUwT,cAAgB,SAAUpD,EAAOuI,GAQnD,OAPKjiB,oBAAkBiiB,IAAqC,gBAAxBA,EAASrD,YACtCvW,KAAKrJ,OAAOkX,cACf+L,EAASrD,WAAa,WACtBlF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS,MAClDyU,EAAQ7Y,YAAU,mCAAoCwH,KAAKrJ,QAAQ0a,IAEhEA,GAEXgwB,EAAYpgC,UAAU+gC,2BAA6B,SAAUpoB,EAAUsoB,EAAOC,GAE1E,GAAIn/B,GAAO1K,QAkBX,IAjBAga,WAAS,QAAStS,KAAKrJ,OAAOiB,KAAK4c,gBAAgBC,eAAc,GAAOzR,GACxEsP,WAAS,YAAY,EAAMtP,GACtBrL,oBAAkBiiB,IAAcjiB,oBAAkBiiB,EAASrD,aAC5DjE,WAAS,aAAcsH,EAASrD,WAAYvT,GAE3ChD,KAAK8hC,YACN9hC,KAAKrJ,OAAOuG,cACZ8C,KAAKrJ,OAAOgrB,WAAWvQ,kBAAkB5Y,YAAU,SAAU2pC,IAC7D7vB,WAAS,aAActS,KAAKrJ,OAAOwG,SAAU6F,IAEjDhD,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,GAEpCA,EAAOhD,KAAK6Q,YACZqxB,EAAQvqC,oBAAkBqL,EAAKoN,QAAUpQ,KAAKrJ,OAAOwG,SAASsI,MAAM,GAAKzC,EAAKoN,OACzEpQ,KAAK8hC,YACN9hC,KAAKrJ,OAAOwG,aAEZyc,GAAYA,EAAShjB,YAAcoJ,KAAK8hC,UAAW,CACnD,GAAIM,GAAYpiC,KAAKrJ,OAAOwG,SACxBklC,EAAUzoB,EAAShjB,qBAAsBC,eAAc+iB,EAAShjB,WAAWA,WAAW8E,KAAOke,EAAShjB,UAC1GoJ,MAAKrJ,OAAOgrB,WAAWvQ,kBAAkBixB,GACzCH,EAAQliC,KAAKrJ,OAAOwG,SACpB6C,KAAKrJ,OAAOwG,SAAWilC,EAI3B,MAFAxoB,GAAWjiB,oBAAkBiiB,GAAYthB,SAAWshB,EACpDA,EAAShjB,WAAa,GAAIC,gBAAc6E,KAAMwmC,IACvCtoB,GAMXynB,EAAYpgC,UAAU2jB,mBAAqB,SAAU5hB,GACjD,GAAIhD,KAAKrJ,OAAOiB,KAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAAiB,CACvF,GAAI3E,MACAgE,EAAOuE,EAAKvE,KAEZ2P,EADczW,oBAAkB8G,EAAK4P,aACjB5P,EAAKrE,MAAQqE,EAAK4P,WAC1C5T,GAAM6nC,OAASl0B,EACfpL,EAAKvI,MAAQA,EAEjBuF,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,GACpChD,KAAKrJ,OAAOyP,QAAQ,qBAAsBpD,IAE9Cq+B,EAAYpgC,UAAUwgC,mBAAqB,SAAUc,GACjD,GAAsB,UAAlBA,EAASt/B,KAAkB,CAC3B,GAAIu/B,GAAcD,EAASE,OAAOhkC,KAC9BikC,EAAqB1iC,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,MACjE,IAAIgrC,EAAYzpC,YAAcC,EAAcgH,KAAKrJ,OAAQ6rC,EAAYzpC,WAAWE,SAAU0pC,QAAQD,IAAsB,CACpH,GAAIE,GAAYL,EAASM,UAAUrrC,OAC/BsrC,EAAWN,EAAYpoC,MACvB2oC,GAAiB,EACjBC,GAAgB,EAChBC,EAAQvqC,EAAgBsH,KAAKrJ,OAAQ6rC,EAAaxiC,KAAKrJ,OAAOuG,aAC9D8C,KAAKshC,yBAA6B2B,GAAUjjC,KAAKrJ,OAAOmgB,cACxDisB,GAAiB,EACjBC,GAAgBR,EAAYppC,UAEhCmpC,EAASM,UAAUD,EAAY,GAAGM,UAAaC,aAAcL,EAAUM,YAAaJ,EAChFzoC,SAAUwoC,MAK1B1B,EAAYpgC,UAAUygC,eAAiB,SAAgDzmB,GACnF,IAAK,GAAI3jB,GAAI,EAAGA,EAAI2jB,EAASooB,WAAW7rC,OAAQF,IACxC2jB,EAASooB,WAAW/rC,GAAG2N,OACvBgW,EAASooB,WAAW/rC,GAAGgsC,WAAcC,mBAAmB,KAIpElC,EAAYpgC,UAAU6gC,QAAU,WAC5B,OAAQprC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,SAEjD0qC,KClLPmC,GAA2B,WAI3B,QAASA,GAAU7sC,GACf8L,OAAKC,OAAO+gC,aACZzjC,KAAKrJ,OAASA,EACdqJ,KAAK6Q,eACL7Q,KAAKoH,mBAqIT,MA/HAo8B,GAAUviC,UAAU4B,cAAgB,WAChC,MAAO,aAKX2gC,EAAUviC,UAAUmG,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAK6kB,iBAAkB7kB,MACrDA,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAK0jC,qBAAsB1jC,OAK/DwjC,EAAUviC,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAK6kB,kBACpC7kB,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAK0jC,wBAO1CF,EAAUviC,UAAU8F,QAAU,WAC1B/G,KAAK0H,uBAET87B,EAAUviC,UAAUyiC,qBAAuB,SAAUrQ,GACjDrzB,KAAK6Q,YAAcwiB,GAEvBmQ,EAAUviC,UAAUma,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,GAAI1W,GAAQxE,KACRkiC,EAAQliC,KAAKrJ,OAAOC,WACpBmjB,EAAOzhB,SACPwpC,GAAWprC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,OAE3D,OADA2b,YAAS,UAAU,EAAOyH,GACnB,GAAI6nB,SAAQ,SAAUna,EAASoa,GAClC,GAAInoC,IAAKooC,GAAaI,YAAiBrrC,eAAwC2N,EAAM7N,OAAOC,WAAtC,GAAIC,eAAYqrC,GAClE7wB,EAAQ,GAAIC,QAMhB,IALKwwB,IACDzwB,EAAQ7M,EAAMiQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAO0I,IAE7BvV,EAAM7N,OAAOyP,QpBtCI,kBoBsC2B/J,SAAO0d,EAAMwB,IACrD/iB,YAAU,SAAUuhB,GACpB,MAAO,KAEXrgB,GAAGsY,aAAaX,GAAOY,KAAK,SAAU5U,GAClC,GAAIsmC,GAAc,IAKlB,OAJKhsC,qBAAkB4jB,IAAyB5jB,oBAAkB4jB,EAAoB3kB,cAClF+sC,EAAcpoB,EAAoB3kB,YAEtC2kB,EAAsB/W,EAAMo/B,wBAAwBroB,EAAqB2mB,EAAO7kC,GACzEmH,EAAM7N,OAAOiB,KAAK6jB,gBAAgBL,IAAI5W,EAAM7N,OAAOiB,KAAM2jB,EAAqBP,EAAkBQ,EAAQN,GAAQjJ,KAAK,SAAUmmB,GAC/G,MAAfuL,EACApoB,EAAoB3kB,WAAa+sC,QAG1BpoB,GAAoB3kB,WAE/B6wB,EAAQ2Q,UAKxBoL,EAAUviC,UAAUwT,cAAgB,SAAUpD,EAAO0I,GAQjD,OAPKpiB,oBAAkBoiB,IAA6B,gBAApBA,EAAKxD,YAC9BvW,KAAKrJ,OAAOkX,cACfkM,EAAKxD,WAAa,WAClBlF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1R,KAAKrJ,OAAOiG,gBAAiB,QAAS,MAClDyU,EAAQ7Y,YAAU,mCAAoCwH,KAAKrJ,QAAQ0a,IAEhEA,GAEXmyB,EAAUviC,UAAU2iC,wBAA0B,SAAU7pB,EAAMmoB,EAAOC,GACjE,GAAIn/B,MAEA8+B,GAAWprC,EAAasJ,KAAKrJ,SAAW8C,EAAUuG,KAAKrJ,OAmB3D,IAlBA2b,WAAS,QAAStS,KAAKrJ,OAAOiB,KAAK4c,gBAAgBC,eAAc,GAAOzR,GACxEsP,WAAS,YAAY,EAAMtP,GAC3BsP,WAAS,eAAe,EAAMtP,GACzBrL,oBAAkBoiB,IAAUpiB,oBAAkBoiB,EAAKxD,aACpDjE,WAAS,aAAcyH,EAAKxD,WAAYvT,GAEvC8+B,IACD9hC,KAAKrJ,OAAOuG,cACZ8C,KAAKrJ,OAAOgrB,WAAWvQ,kBAAkB/S,WAAS,SAAU8jC,IAC5D7vB,WAAS,aAActS,KAAKrJ,OAAOwG,SAAU6F,IAEjDhD,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,GAEpCA,EAAOhD,KAAK6Q,YACZqxB,EAAQvqC,oBAAkBqL,EAAKoN,QAAUpQ,KAAKrJ,OAAOwG,SAASsI,MAAM,GAAKzC,EAAKoN,OACzE0xB,IACD9hC,KAAKrJ,OAAOwG,aAEZ4c,GAAQA,EAAKnjB,YAAckrC,EAAS,CACpC,GAAI+B,GAAY7jC,KAAKrJ,OAAOwG,SACxBklC,EAAUtoB,EAAKnjB,qBAAsBC,eAAckjB,EAAKnjB,WAAWA,WAAW8E,KAAOqe,EAAKnjB,UAC9FoJ,MAAKrJ,OAAOgrB,WAAWvQ,kBAAkBixB,GACzCH,EAAQliC,KAAKrJ,OAAOwG,SACpB6C,KAAKrJ,OAAOwG,SAAW0mC,EAI3B,MAFA9pB,GAAOpiB,oBAAkBoiB,MAAaA,EACtCA,EAAKnjB,WAAa,GAAIC,gBAAc6E,KAAMwmC,IACnCnoB,GAMXypB,EAAUviC,UAAU4jB,iBAAmB,SAAU7hB,GAC7C,GAAIhD,KAAKrJ,OAAOiB,KAAK8W,oBAAoB1L,EAAKrD,OAAOsJ,OAASjJ,KAAKrJ,OAAOyI,gBAAiB,CACvF,GAAI3E,MACAgE,EAAOjG,YAAU,OAAQwK,GAEzBoL,EADczW,oBAAkB8G,EAAK4P,aACjB5P,EAAKrE,MAAQqE,EAAK4P,WAC1C5T,GAAMqpC,gBAAwB,EAAN11B,EACxBpL,EAAKvI,MAAQA,EAEjBuF,KAAKrJ,OAAOyY,OAAO,gBAAiBpM,GACpChD,KAAKrJ,OAAOyP,QAAQ,mBAAoBpD,IAErCwgC,KC5IPO,GAAsB,WACtB,QAASA,GAAKptC,GACV8L,OAAKC,OAAOshC,QACZhkC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAkKT,MA7JA28B,GAAK9iC,UAAUmG,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,GrByBkB,2BqBzBkBrH,KAAKikC,0BAA2BjkC,MAChFA,KAAKrJ,OAAO0Q,GrB0BO,gBqB1BkBrH,KAAKkkC,WAAYlkC,OAK1D+jC,EAAK9iC,UAAUyG,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IrBekB,2BqBfmB5H,KAAKikC,2BACtDjkC,KAAKrJ,OAAOiR,IrBgBO,gBqBhBmB5H,KAAKkkC,cAM/CH,EAAK9iC,UAAU4B,cAAgB,WAC3B,MAAO,SAMXkhC,EAAK9iC,UAAUkrB,QAAU,WACrBnsB,KAAKrJ,OAAOiB,KAAK62B,YAAYtC,WAOjC4X,EAAK9iC,UAAU8F,QAAU,WACrB/G,KAAK0H,uBAOTq8B,EAAK9iC,UAAUstB,SAAW,SAAUC,GAChCxuB,KAAKrJ,OAAOiB,KAAK62B,YAAYF,SAASC,IAO1CuV,EAAK9iC,UAAUytB,sBAAwB,SAAUnrB,GAC7CvD,KAAKrJ,OAAOiB,KAAK62B,YAAYC,sBAAsBnrB,IAKvDwgC,EAAK9iC,UAAUgjC,0BAA4B,SAAUtwB,GACjDA,EAAWhb,OAAOS,SAAiC,aAAtBua,EAAWpY,OACpCmB,eACAsD,KAAKrJ,OAAOwG,SAASC,OAAO,SAAUC,GAClC,MAAOA,GAAEpE,WAAa0a,EAAWhb,OAAOM,WACzC,GAAGG,SAAiC,aAAtBua,EAAWpY,OAEhC,IAAI4oC,IACA/zB,OAAQpQ,KAAKrJ,OAAOwG,SACpBwB,IAAKgV,EAAWhV,IAChBpD,OAAQoY,EAAWpY,OACnB5C,OAAQgb,EAAWhb,OACnB0S,MAAOrL,KAAKrJ,OAAOwG,SAAS3F,OAGhC,IADA6G,WAAS,oBAAqB2B,KAAKrJ,QAAQ6b,mBAAmB2xB,GAC1DnkC,KAAKrJ,OAAO2I,oBAAqB,CACjC,GAEI0U,OAAY,EACI,cAAhBmwB,EAAU,QACVnwB,EAAYmwB,EAAO,IAAElwB,uBAAuB,oBAAoB,GAC3Dtc,oBAAkBqc,KACnB3J,eAAa2J,GAAY,oBACzB5G,YAAU4G,GAAY,wBAGL,WAAhBmwB,EAAU,SACfnwB,EAAYmwB,EAAO,IAAElwB,uBAAuB,sBAAsB,GAC7Dtc,oBAAkBqc,KACnB3J,eAAa2J,GAAY,sBACzB5G,YAAU4G,GAAY,wBAKtC+vB,EAAK9iC,UAAUmjC,SAAW,SAAUC,EAActsB,EAAM3H,GAapD,IAAK,GAZDk0B,GAAa3sC,oBAAkByY,MAAeA,EAW9C3E,EAASzL,KACJukC,EAAI,EAAGA,EAAIxsB,EAAKvgB,OAAQ+sC,KAXnB,SAAUA,GACpBD,EAAW7rC,KAAKsf,EAAKwsB,GACrB,IAAIC,KACAzsB,GAAKwsB,GAAGjrC,kBACRkrC,EAAMH,EAAajnC,OAAO,SAAUC,GAChC,MAAO0a,GAAKwsB,GAAGtrC,WAAaoE,EAAEiB,iBAElCgmC,EAAa74B,EAAO24B,SAASC,EAAcG,EAAKF,KAK5CC,EAEZ,OAAOD,IAEXP,EAAK9iC,UAAUijC,WAAa,SAAUO,GAClC,GAAIjgC,GAAQxE,KACRtG,EAAK,GAAI7C,eAAY4tC,EAAer0B,OACxC,IAA8C,SAA1CpQ,KAAKrJ,OAAOmX,aAAaC,aAAyB,CAClD,GAAIgK,MACA2sB,EAAY1kC,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CwI,KAAKrJ,OAAOsB,eAAeF,eAA0E,SAA7CiI,KAAKrJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBsZ,GAAQ,GAAIC,UAAQI,MAAMgzB,EAAU,QAAS,EACjD3sB,GAAOre,EAAGoZ,aAAazB,GACvBozB,EAAep5B,MAAQ0M,EAAKvgB,MAGxBmtC,IAFAC,EAAO5kC,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,YACrCC,EAAU9kC,KAAKrJ,OAAOiB,KAAKkW,aAAagI,aACf,EAC7BzE,GAAQA,EAAMszB,KAAKA,GAAMI,KAAKH,GAC9B7sB,EAAOre,EAAGoZ,aAAazB,EACvB,IAAIizB,GAAatkC,KAAKokC,SAASK,EAAer0B,OAAQ2H,EACtD0sB,GAAer0B,OAASk0B,MAEvB,CACD,GAAI7a,GAAO,GAAI5yB,eAAY4tC,EAAer0B,QACtChX,EAAW,GAAI0I,aAAU,WAAY,WAAY,MAAMkjC,GAAG,WAAY,eAAY1rB,IAClF2rB,EAAYxb,EAAK3W,cAAa,GAAIxB,UAAQI,MAAMtY,IAChDkmC,MAAa,EAMbA,IALA5nC,EAAuBsI,KAAKrJ,SAAaqJ,KAAKrJ,OAAOkB,eAAeC,MAAQkI,KAAKrJ,OAAOiB,KAAKC,eAAeC,KAC3GkI,KAAKrJ,OAAOsB,eAAeV,QAAQC,SAAWwI,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAI1EytC,EAAU7nC,OAAO,SAAUC,GACpC,MAAO3E,GAAgB8L,EAAM7N,OAAQ0G,EAAG4nC,KAJ/BA,EAOjBR,EAAep5B,MAAQi0B,EAAW9nC,MAClC,IAAI6Z,GAAQ,GAAIC,SACZszB,EAAO5kC,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,SACrCC,EAAU9kC,KAAKrJ,OAAOiB,KAAKkW,aAAagI,WACxCwpB,GAAW9nC,OAAUstC,EAAUF,IAE/BE,GADAA,EAAWtxB,KAAK0xB,MAAM5F,EAAW9nC,OAASotC,IAAWtF,EAAW9nC,OAASotC,EAAQ,EAAI,KACvD,EAC9B5kC,KAAKrJ,OAAOiB,KAAKoiB,eAAgBlM,cAAgBgI,YAAagvB,KAAa,GAE/E,IAAIH,GAAOC,GAAQE,EAAU,EAC7BzzB,GAAQA,EAAMszB,KAAKA,GAAMI,KAAKH,GAC9Bnb,EAAK7yB,WAAW8E,KAAO4jC,EACvBmF,EAAer0B,OAASqZ,EAAK3W,aAAazB,GAE9CrR,KAAKrJ,OAAOyY,OAAO,eAAgBq1B,IAEhCV,KCzKPoB,GAAyB,WACzB,QAASA,GAAQxuC,GACb8L,OAAKC,OAAO0iC,WACZplC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBA4HT,MAtHA+9B,GAAQlkC,UAAU4B,cAAgB,WAC9B,MAAO,WAKXsiC,EAAQlkC,UAAUmG,iBAAmB,WACjCpH,KAAKrJ,OAAO0Q,GtBHK,csBGkBrH,KAAKqlC,eAAgBrlC,MACxDA,KAAKrJ,OAAO0Q,GtBEM,esBFkBrH,KAAKslC,oBAAqBtlC,OAKlEmlC,EAAQlkC,UAAUyG,oBAAsB,WAChC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,ItBbK,csBamB5H,KAAKqlC,gBACzCrlC,KAAKrJ,OAAOiR,ItBRM,esBQmB5H,KAAKslC,uBAE9CH,EAAQlkC,UAAUokC,eAAiB,SAAUriC,GACzC,GAAIwzB,GAAOx2B,KAAKrJ,MAEU,KAAtBqM,EAAKrE,IAAIkI,UAAkB2vB,EAAK5wB,qBAAqBpO,OAAS,EAC9DwI,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,sBAAuBsmB,EAAKvmB,QAAQC,GAAK,yBAAyB,GAGjGvY,oBAAkB6+B,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,cACpDlP,oBAAkB6+B,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,YACxD2vB,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,UAAUzM,MAC7Co8B,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,SAAW,GAAGzM,MACxD4F,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,wBAAwB,GAG5DlQ,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,wBAAwB,GAE5DsmB,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,UAAUzM,QAChDo8B,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,SAAW,GAAGzM,OACpD4F,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DsmB,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,UAAUzM,OAChD4F,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DsmB,EAAK/4B,wBAAwBuF,EAAKrE,IAAIkI,UAAUzM,OAChD4F,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBlN,EAAKrE,IAAIkI,UAAmBlP,oBAAkBqL,EAAKvE,KAAK1F,aACxDiH,KAAK8tB,aAAa0I,EAAKvmB,QAAQC,GAAK,yBAAyB,IAGrEi1B,EAAQlkC,UAAUqkC,oBAAsB,SAAUtiC,GAC9C,GAAIwzB,GAAOx2B,KAAKrJ,MAYhB,IAXsC,SAAlCqJ,KAAKrJ,OAAOmF,aAAaC,MAA0D,UAAvCiE,KAAKrJ,OAAOiB,KAAKkE,aAAaC,MAC1EiH,EAAKE,KAAKgN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,YAC/ClN,EAAKmD,QAAS,EACdnG,KAAKrJ,OAAOiB,KAAKoE,WAAWoxB,YAE5BpqB,EAAKE,KAAKgN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,cAC/ClQ,KAAKrJ,OAAOmnB,YAEZ9a,EAAKE,KAAKgN,KAAOlQ,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAK,gBAC/ClQ,KAAKrJ,OAAOonB,cAEZ/a,EAAKE,KAAKgN,KAAOsmB,EAAK5+B,KAAKqY,QAAQC,GAAK,WAAasmB,EAAK5wB,qBAAqBpO,OAAQ,CACvF,GAAImB,GAAS69B,EAAK/4B,wBAAwB+4B,EAAKpxB,wBAAwB,GAAK,GACxEsxB,MAAY,EAChB,IAAI/9B,EAAOyB,MAAQo8B,EAAK5wB,qBAAqB,GAAGxL,MAC5C,IAAS9C,EAAI,EAAGA,EAAIk/B,EAAK/4B,wBAAwBjG,OAAQF,IACjDk/B,EAAK/4B,wBAAwBnG,GAAG+C,WAAa1B,EAAOI,WAAWsB,WAC/Dq8B,EAAYp/B,OAKpBo/B,GAAYF,EAAKpxB,wBAAwB,GAAK,CAElDoxB,GAAK5B,aAAa4B,EAAKpxB,wBAAwB,IAAKsxB,EAAW,SAEnE,GAAI1zB,EAAKE,KAAKgN,KAAOsmB,EAAK5+B,KAAKqY,QAAQC,GAAK,YAAcsmB,EAAK5wB,qBAAqBpO,OAAQ,CAIxF,IAAK,GAHD2C,GAAQq8B,EAAKpxB,wBAAwB,GACrCsxB,MAAY,GACZ39B,EAAay9B,EAAK5wB,qBAAqB,GAAG7M,WACrCzB,EAAI,EAAGA,EAAIk/B,EAAK/4B,wBAAwBjG,OAAQF,IACjDk/B,EAAK/4B,wBAAwBnG,GAAG+C,WAAatB,EAAWsB,WACxDq8B,EAAYp/B,EAGpBk/B,GAAK5B,aAAaz6B,GAAQu8B,EAAW,WAQ7CyO,EAAQlkC,UAAUm5B,WAAa,WAC3B,MAAOp6B,MAAKrJ,OAAOiB,KAAKi2B,cAAcuM,cAS1C+K,EAAQlkC,UAAU6sB,YAAc,SAAU7a,EAAO2a,GAC7C5tB,KAAKrJ,OAAOiB,KAAKi2B,cAAcC,YAAY7a,EAAO2a,IAOtDuX,EAAQlkC,UAAU8F,QAAU,WACxB/G,KAAK0H,uBAEFy9B,KC/HPI,GAA2B,WAI3B,QAASA,GAAU5uC,GACf8L,OAAKC,OAAO8iC,aACZxlC,KAAKrJ,OAASA,EACdqJ,KAAKylC,oBACLzlC,KAAKmV,gBAiOT,MA3NAowB,GAAUtkC,UAAU4B,cAAgB,WAChC,MAAO,WAEX0iC,EAAUtkC,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,aAQpB49B,EAAUtkC,UAAUqU,sBAAwB,SAAUH,EAAckC,EAAcquB,GAC9E1lC,KAAKmV,aAAeA,CACpB,IAAIrc,GAEAoE,CACJA,KACA,KAAK,GAAII,GAAI,EAAGjF,EAHOC,OAAOC,KAAK8e,GAAc7f,OAGT8F,EAAIjF,EAAKiF,IAC5B9E,YAAU,eAAgB6e,EAAa/Z,KAEpDJ,EAAWzE,KAAK4e,EAAa/Z,GAGrC,IACIqoC,GADA1vB,EAAgB/d,EAAkBgF,EAEtCyoC,GAAczoC,EAAWuI,OACzB,IAGI24B,GAHAwH,EAAettC,OAAOC,KAAKyH,KAAKrJ,OAAOY,SAASC,OAChDquC,EAAgBvtC,OAAOC,KAAKyH,KAAKrJ,OAAOqe,YAAYxd,OACpDsuC,EAAaxtC,OAAOC,KAAK0d,GAAeze,MAE5C,IAAIwI,KAAKrJ,OAAOqe,WAAW5X,OAAO,SAAU6wB,GAAK,MAAOA,GAAE8X,mBAAqBvuC,QAC3E,IAAK,GAAIF,GAAI,EAAGe,EAAMytC,EAAYxuC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAemd,EAAc3e,GAC7B8mC,EAAqBp+B,KAAKgmC,sBAAsBltC,EAAc6sC,GACtC,CAyCpB,IAAK,GADDl6B,GAASzL,KACJimC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,KAxCjE,SAAUA,EAAiBC,GACrC,GAAIhjC,OAAO,EACXA,KACA,KAAK,GAAI6F,GAAc,EAAGo9B,EAAQP,EAAc78B,EAAco9B,EAAOp9B,IAGjE7F,EAFYvL,oBAAkBa,YAAU,QAASiT,EAAO9U,OAAOY,QAAQwR,KACnE0C,EAAO9U,OAAOY,QAAQwR,GAAevQ,YAAU,QAASiT,EAAO9U,OAAOY,QAAQwR,KACpE,IAGlB,IADA7F,EAAOuI,EAAO26B,kBAAkBljC,EAAMuI,EAAO9U,OAAOqe,WAAWixB,EAAkB,KAC7Ex6B,EAAO9U,OAAOqe,WAAWixB,EAAkB,GAAGF,iBA2B9C,MAAO,UA1BP,IAAIM,EACJV,GAAYxnC,IAAI,SAAUd,EAAG/F,GACzB,GAAI+F,EAAEpE,WAAaH,EAAaG,SAE5B,YADAotC,EAAQ/uC,IAIhB,IAAIgvC,GAAeD,EAAQjI,EAAqB6H,EAC5CM,EAAgBlqC,YAAWvD,SACxBytC,GAAchtC,mBACdgtC,GAAc96B,EAAO9U,OAAOoG,cACnCuV,WAAS,aAAci0B,EAAerjC,EACtC,IAAI9I,GAAQ5B,YAAU,QAAS+tC,EAC/Bj0B,YAAS,QAASlY,EAAQ,EAAG8I,EACjB1K,aAAU,QAAS+tC,EAG/B,IAFAj0B,WAAS,gBAAgB,EAAMpP,GAC/BoP,WAAS,iBAAkBi0B,EAActtC,SAAUiK,GAC/CwiC,EAAQ,CACR,GAAInsC,GAAef,YAAU,eAAgBM,EACzCS,GAAa/B,QACb+B,EAAad,KAAKyK,GAG1ByiC,EAAY7oC,OAAOwpC,EAAc,EAAGpjC,IAQhC+iC,EAEZjmC,MAAKylC,yBAIZ,CACD,GAAIxyB,OAAQ,EACZA,KACA,KAAK,GAAIlK,GAAc,EAAGmpB,EAAW0T,EAAc78B,EAAcmpB,EAAUnpB,IAGvEkK,EAFatb,oBAAkBa,YAAU,QAASwH,KAAKrJ,OAAOY,QAAQwR,KAClE/I,KAAKrJ,OAAOY,QAAQwR,GAAevQ,YAAU,QAASwH,KAAKrJ,OAAOY,QAAQwR,KAC9D,IAEpB,KAAK,GAAIk9B,GAAkB,EAAGO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjFjmC,KAAKomC,kBAAkBnzB,EAAOjT,KAAKrJ,OAAOqe,WAAWixB,EAAkB,IAG/E,MAAON,IAEXJ,EAAUtkC,UAAU+kC,sBAAwB,SAAU9oC,EAAYC,GAG9D,IAAK,GADDxE,GACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAK4E,GAAU3F,OAELF,EAAIe,EAAKf,IAIzC,GAHAqB,EAASwE,EAAS7F,GAGd4F,KAFWvF,oBAAkBgB,EAAOI,YAAc,KAClDoE,EAASC,OAAO,SAAUC,GAAK,MAAOA,GAAEpE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CAGzB,GAFA+G,KAAKylC,iBAAiBhtC,KAAKE,IACZH,YAAU,kBAAmBG,GAKxC,QAHAqH,MAAKgmC,sBAAsBrtC,EAAQwE,GAO/C,MAAO6C,MAAKylC,iBAAiBjuC,QAEjC+tC,EAAUtkC,UAAUmlC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,GAAIpvC,GAAI,EAAGe,EADUC,OAAOC,KAAKmuC,EAAQnvC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,GAHDqvC,GAAgBhvC,oBAAkB+uC,EAAQnvC,QAAQD,GAAG8D,YAAcsrC,EAAQnvC,QAAQD,GAAG+M,MACtFqiC,EAAQnvC,QAAQD,GAAG8D,WAEdmwB,EAAK,EAAGqb,EADNtuC,OAAOC,KAAKkuC,GACSlb,EAAKqb,EAAOpvC,OAAQ+zB,IAAM,CACtD,GAAIzzB,GAAM8uC,EAAOrb,EACjB,IAAIzzB,IAAQ6uC,EACR,GAAI3mC,KAAKylC,iBAAiBjuC,OACtBivC,EAAS3uC,GAAOkI,KAAK6mC,iBAAiBH,EAAQnvC,QAAQD,GAAI0I,KAAKylC,sBAE9D,IAAIzlC,KAAKrJ,OAAOmgB,YAAa,CAC9B,GAAIrY,GAAOuB,KAAKrJ,OAAOC,qBAAsBC,eAAcmJ,KAAKrJ,OAAOC,WAAWA,WAAW8E,KACvFsE,KAAKrJ,OAAOwG,QAClBspC,GAAS3uC,GAAOkI,KAAK6mC,iBAAiBH,EAAQnvC,QAAQD,GAAImH,IAQ1E,MAAOgoC,IAEXlB,EAAUtkC,UAAU4lC,iBAAmB,SAAUC,EAAev3B,GAC5D,GACIw3B,GADAl1B,EAAM,GAAIP,QAEdy1B,KACA,IAAI1tB,MACApW,EAAQtL,oBAAkBmvC,EAAcziC,WACiBiV,GAAzDtZ,KAAKrJ,OAAO6gB,iBAAiBsvB,EAAcziC,OAAOpB,IACtD6jC,GAAchtB,qBAAsBjB,OAAQ7Y,KAAKgnC,kBAAkBF,EAAcjuB,OAAQ5V,KACzF6jC,EAAcnuB,aAAa3Y,KAAKrJ,OAAOiB,KAAK2kB,OAC5C,IAAIxD,GAAW+tB,EAAc3tB,gBAAkB,WAAe,MAAO,UAAU7T,GAAK,MAAOA,MAC3FwhC,GAAc1tB,YAAYC,EAC1B,IAAI4tB,GAAUH,EAAcjtB,YAAY,EACxChI,GAAIE,QAAU/R,KAAKmV,aACnBtD,EAAIq1B,eACJ,IAEIC,GAFAC,EAAU,GAAIvwC,eAAY0Y,GAAauD,aAAajB,GACpD9O,EAAQ+jC,EAAc7jC,IAE1BF,IAAS+jC,EAAc7jC,KACvB,KAAK,GAAI3L,GAAI,EAAGA,EAAIyL,EAAMvL,OAAQF,IAAK,CACnC6vC,EAAapkC,EAAMzL,EACnB,IAAIQ,GAAMgvC,EAAcziC,MAAQ,MAAQtB,EAAMzL,GAAG+vC,cAC7CC,EAAmB,WAAbvkC,EAAMzL,GAAkBkB,YAAU,aAAc4uC,GACtDG,qBAAmBxkC,EAAMzL,GAAI8vC,EAASN,EAAe9mC,KAAKrJ,QAC1D6wC,EAAOV,EAAc1rC,WACrBqsC,EAAuB,WAAb1kC,EAAMzL,GAAkBgwC,EAAIxvC,GAAOwvC,CACjDP,GAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAM1vC,GAAO2vC,EACpBV,EAAOS,GAAMzkC,EAAMzL,IAAOK,oBAAkB2vC,GAA2B,IAApBvuB,EAAS0uB,GAEhEpuB,EAAOR,OAASiuB,EAAc3tB,cAC9B,IAAIhL,GAAc5E,gBAAc,MAC5BC,UAAW,aAEf,IAAIxJ,KAAKrJ,OAAOwZ,QAAS,CAErB82B,EAAQtyB,GAAGoyB,EAAOD,EAAc1rC,YAAa4E,KAAKrJ,OAAQswC,EAAQrtB,SAAU,GAAI,KAAM,KAAMzL,GAC5FnO,KAAKrJ,OAA2B,2BAGhCmZ,kBAAe3B,EAAa84B,EAAQtyB,GAAGoyB,EAAOD,EAAc1rC,YAAa4E,KAAKrJ,OAAQswC,EAAQrtB,UAElG,IAAI1f,GAAQ6sC,EAAOD,EAAc1rC,YAAY+rC,EAE7C,QAA8C,IAA1Ch5B,EAAY1D,UAAUjM,QAAQtE,GACfiU,EAAY1D,UAAYvQ,EAIhCiU,EAAY1D,WAG3B86B,EAAUtkC,UAAU+lC,kBAAoB,SAAUU,EAAezkC,GAC7D,GAAItL,oBAAkBsL,IAAkC,gBAAlBykC,GAClC,MAAOA,EAEX,IAAI5tC,EACJ,QAAQmJ,GACJ,IAAK,SACDnJ,GAAQ+e,OAAQ6uB,EAChB,MACJ,KAAK,WACD5tC,GAAQmJ,KAAM,WAAY6V,SAAU4uB,EACpC,MACJ,KAAK,OACD5tC,GAAQmJ,KAAMA,EAAM6V,SAAU4uB,GAGtC,MAAO5tC,IAOXyrC,EAAUtkC,UAAU8F,QAAU,WAC1B/G,KAAK0H,uBAEF69B,KCzOPoC,GAAsB,WACtB,QAASA,GAAK/vC,GACV6K,OAAKC,OAAOklC,QACZ5nC,KAAKrJ,OAASiB,EACdoI,KAAKwQ,WACLxQ,KAAK6nC,kBACL7nC,KAAK0Q,aAAe,EACpB1Q,KAAK/E,iBAAmBtD,oBAAkBqI,KAAKrJ,OAAOiG,iBACtDoD,KAAKoH,mBAyFT,MAnFAugC,GAAK1mC,UAAU4B,cAAgB,WAC3B,MAAO,QAKX8kC,EAAK1mC,UAAUmG,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAK8nC,YAAa9nC,MAChDA,KAAKrJ,OAAO0Q,GAAG,aAAcrH,KAAK+nC,qBAAsB/nC,OAK5D2nC,EAAK1mC,UAAUyG,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAK8nC,aACpC9nC,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAK+nC,wBAEvCJ,EAAK1mC,UAAU8mC,qBAAuB,SAAUC,GAC5C,GAAIvpC,GAAOupC,EAAWrsC,aAClB2b,EAAS0wB,EAAW1wB,MACxBtX,MAAKioC,YAAYxpC,EAAM6Y,GACvBtX,KAAK0Q,aAAe,EACpBs3B,EAAWrsC,aAAeqE,KAAK6nC,eAC/B7nC,KAAK6nC,mBAETF,EAAK1mC,UAAUgnC,YAAc,SAAUxpC,EAAM6Y,GACzC,IAAK,GAAI3W,GAAI,EAAGA,EAAIlC,EAAKjH,OAAQmJ,IAW7B,GAVIX,KAAKrJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCwI,KAAKrJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAcgH,KAAKrJ,OAAQ8H,EAAKkC,GAAG1H,UAAU,MAChE+G,KAAK0Q,cACL1Q,KAAK6nC,eAAe7nC,KAAK0Q,aAAejS,EAAKkC,KAIjDX,KAAK0Q,cACL1Q,KAAK6nC,eAAe7nC,KAAK0Q,aAAejS,EAAKkC,IAE7ClC,EAAKkC,GAAGrH,gBAAiB,CACzB,GAAI4uC,GAAa,GAAIrxC,eAAY4H,EAAKkC,GAAGpH,cAAcuZ,aAAawE,EACpEtX,MAAKioC,YAAYC,EAAW5wB,KAWxCqwB,EAAK1mC,UAAU0b,WAAa,SAAUvhB,EAAYwc,EAAW6E,GACzDzc,KAAKrJ,OAAOiB,KAAK+kB,WAAWvhB,EAAYwc,EAAW6E,IAEvDkrB,EAAK1mC,UAAU4b,iBAAmB,SAAUxY,GACxCrE,KAAKrJ,OAAOiB,KAAKilB,iBAAiBxY,IAOtCsjC,EAAK1mC,UAAU6mC,YAAc,WACzB9nC,KAAKrJ,OAAOqjB,eAAgBzb,aAAcilB,sBAAoBxjB,KAAKrJ,OAAOiB,KAAK2G,gBAAiB,IAMpGopC,EAAK1mC,UAAU2b,aAAe,WAC1B5c,KAAKrJ,OAAOiB,KAAKglB,eACjB5c,KAAK8nC,eAOTH,EAAK1mC,UAAU8F,QAAU,WACrB/G,KAAK0H,uBAEFigC,KCpGPQ,GAA4B,WAI5B,QAASA,GAAWxxC,GAChB8L,OAAKC,OAAO0lC,cACZpoC,KAAKrJ,OAASA,EAelB,MAbAwxC,GAAWlnC,UAAUonC,cAAgB,WACjC,MAAOroC,MAAKrJ,OAAOiB,KAAK0wC,iBAAiBD,iBAE7CF,EAAWlnC,UAAU8F,QAAU,aAO/BohC,EAAWlnC,UAAU4B,cAAgB,WACjC,MAAO,cAEJslC,KCpBPI,GAA6B,WAC7B,QAASA,GAAY5xC,GACjB8L,OAAKC,OAAO8lC,eACZxoC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAgET,MA3DAmhC,GAAYtnC,UAAUmG,iBAAmB,WACrCpH,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAKiqB,gBAAiBjqB,MACxDA,KAAKrJ,OAAO0Q,GAAG,mBAAoBrH,KAAKgqB,iBAAkBhqB,OAK9DuoC,EAAYtnC,UAAUyG,oBAAsB,WACpC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAKiqB,iBACxCjqB,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAKgqB,oBAE7Cue,EAAYtnC,UAAUgpB,gBAAkB,SAAUjnB,GAC9C,GAAIylC,GAAShiC,SAAO,IAAMzG,KAAKrJ,OAAOsZ,QAAQC,GAAK,4BAA6BlN,EAAKiN,SACjFy4B,EAAajiC,SAAO,IAAMzG,KAAKrJ,OAAOsZ,QAAQC,GAAK,0BAA2BlN,EAAKiN,QACnFw4B,MACkD,IAA9CzoC,KAAKrJ,OAAOiB,KAAKkE,aAAailB,YAC9B0nB,EAAOhuC,MAAMG,QAAU,OAGvB6tC,EAAOhuC,MAAMG,QAAU,SAGQ,SAAlCoF,KAAKrJ,OAAOmF,aAAaC,MAAqD,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,MACjEpE,oBAAkB+wC,IAAkBA,EAAWnjC,UAAUC,SAAS,iBACvEkjC,EAAWjuC,MAAMG,QAAU,SAGnC2tC,EAAYtnC,UAAU+oB,iBAAmB,SAAUhnB,GAC1B,UAAjBA,EAAKE,KAAKgN,IAAmC,UAAjBlN,EAAKE,KAAKgN,KACtClQ,KAAKrJ,OAAOyY,OAAO,0BAA2BpM,GAC9ChD,KAAKrJ,OAAOqjB,eAAgBle,cAAgBQ,eAAgB0G,EAAKE,KAAKgN,MAAQ,GAC9ElQ,KAAKrJ,OAAOu2B,cAOpBqb,EAAYtnC,UAAU4B,cAAgB,WAClC,MAAO,eAOX0lC,EAAYtnC,UAAU8F,QAAU,WAC5B/G,KAAK0H,uBAMT6gC,EAAYtnC,UAAUkjB,eAAiB,WACnC,MAAOnkB,MAAKrJ,OAAOiB,KAAK6wB,kBAAkBtE,kBAEvCokB,KChEPI,GAA2B,WAC3B,QAASA,GAAUhyC,GACfqJ,KAAK4oC,gBAAkB,EACvB5oC,KAAKsQ,aAAe,eACpBtQ,KAAKya,eAAiB,iBACtBza,KAAK6oC,qBACL7oC,KAAK8oC,uBACL9oC,KAAK+oC,qBACL/oC,KAAKrJ,OAASA,EACdqJ,KAAK/E,iBAAmBtD,oBAAkBhB,EAAOiG,iBACjDoD,KAAKgpC,gBACLhpC,KAAKxC,sBACLwC,KAAKipC,OAAQ,EACbjpC,KAAKoH,mBA4hBT,MA1hBAuhC,GAAU1nC,UAAUmG,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,G3B6CG,Y2B7CkBrH,KAAK6oB,UAAW7oB,MACjDA,KAAKrJ,OAAO0Q,G3BoDE,W2BpDkBrH,KAAK+oB,SAAU/oB,MAC/CA,KAAKrJ,OAAO0Q,G3BuDQ,iB2BvDkBrH,KAAKipB,eAAgBjpB,MAC3DA,KAAKrJ,OAAO0Q,G3B0DG,Y2B1DkBrH,KAAKkpC,UAAWlpC,MACjDA,KAAKrJ,OAAO0Q,G3BmDW,oB2BnDkBrH,KAAKmpB,kBAAmBnpB,MACjEA,KAAKrJ,OAAO0Q,G3BsDS,kB2BtDkBrH,KAAKgpB,gBAAiBhpB,MAC7DA,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAKmpC,gBAAiBnpC,MACxDA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAKopC,kBAAmBppC,MAC5DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,yBAA0BrH,KAAKqpC,qBAAsBrpC,MACzEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,kBAAmBrH,KAAKspC,cAAetpC,OAK/D2oC,EAAU1nC,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,I3B2BG,Y2B3BmB5H,KAAK6oB,WACvC7oB,KAAKrJ,OAAOiR,I3BkCE,W2BlCmB5H,KAAK+oB,UACtC/oB,KAAKrJ,OAAOiR,I3ByCG,Y2BzCmB5H,KAAKkpC,WACvClpC,KAAKrJ,OAAOiR,I3BoCQ,iB2BpCmB5H,KAAKipB,gBAC5CjpB,KAAKrJ,OAAOiR,I3BiCW,oB2BjCmB5H,KAAKmpB,mBAC/CnpB,KAAKrJ,OAAOiR,I3BoCS,kB2BpCmB5H,KAAKgpB,iBAC7ChpB,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAKmpC,iBACxCnpC,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAKopC,mBAC1CppC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,yBAA0B5H,KAAKqpC,sBACpDrpC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,kBAAmB5H,KAAKspC,iBAOjDX,EAAU1nC,UAAU8F,QAAU,WAC1B/G,KAAK0H,uBAKTihC,EAAU1nC,UAAUsoC,gBAAkB,WAClC,MAAOvpC,MAAKgpC,cAKhBL,EAAU1nC,UAAUuoC,eAAiB,WACjC,MAAOxpC,MAAK9E,aAKhBytC,EAAU1nC,UAAUwoC,iBAAmB,WACnC,MAAOzpC,MAAK7E,eAKhBwtC,EAAU1nC,UAAUyoC,mBAAqB,WACrC,MAAO1pC,MAAK4oC,iBAEhBD,EAAU1nC,UAAUkoC,gBAAkB,WAClC,GAGIhvC,GAHAsE,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D03B,EAAatuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EAE5D,KAAK7D,oBAAkBqI,KAAK6oC,oBAAsB7oC,KAAK6oC,kBAAkBrxC,OACrE,IAAK,GAAIF,GAAI,EAAGA,EAAI0I,KAAK6oC,kBAAkBrxC,OAAQF,IAC/C6C,EAAQsE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEixB,KAAgB9vB,QAAQwB,KAAK6oC,kBAAkBvxC,GAAGg3B,IAC3F7vB,EAAK3B,OAAO3C,EAAO,EAG3B6F,MAAK6oC,kBAAoB7oC,KAAKgpC,aAAehpC,KAAK+oC,kBAAoB/oC,KAAK8oC,oBAAsB9oC,KAAKxC,uBAE1GmrC,EAAU1nC,UAAU4nB,UAAY,SAAU7lB,GACtC,GAAI2mC,GAAkB3mC,EAAKvD,KAAKgf,UAC5BmrB,EAAa5pC,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,kBAS1D,IARI2qC,GAAc5mC,EAAK6mC,aAAa1vC,MAAQyvC,IACxCD,GAAoCC,GAEpCD,IAAoB3pC,KAAKrJ,OAAOyI,iBAChCY,KAAKrJ,OAAO4I,aAAaC,YAAaf,KAAMuE,EAAK2F,QAASlJ,KAAMuD,EAAKvD,KACjEE,OAAQK,KAAKrJ,OAAOiB,KAAKkyC,iBAAiB9mC,EAAKvD,KAAKgf,aAGxDze,KAAKipC,OAA2C,UAAlCjpC,KAAKrJ,OAAOmF,aAAaC,MAAgE,WAA5CiE,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACjH,GAAImC,GAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/DmzC,MAAQ,GAGRC,EAAehqC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAC1DyuC,MAAmB,GACnBnxC,MAAe,GACfoxC,MAAa,EAIjBpxC,GAAekH,KAAK7E,eAAiB,EAAI6E,KAAKgpC,aAAahpC,KAAK9E,aAAuB,WAAI,IAC3F,IAAI2B,OAAY,GACZyB,MAAiB,GACjB1B,MAAkB,GAClButC,EAA6D,QAA5CnqC,KAAKrJ,OAAOmF,aAAaQ,iBAAoD,IAAxB0D,KAAK7E,cAAuB,EACtD,UAA5C6E,KAAKrJ,OAAOmF,aAAaQ,eAA6B0D,KAAK9E,YACrD8E,KAAK9E,YAAc,CAE7B,IADAivC,EAAiBnqC,KAAKoqC,wBAAwBD,GAC1CnqC,KAAKqqC,iBAAkB,CAcvB,GAbIrqC,KAAKgpC,aAAaxxC,SAClBqF,EAAYmD,KAAKgpC,aAAahpC,KAAK9E,aAAa8E,KAAKrJ,OAAOkG,WAC5DD,EAAkBoD,KAAKgpC,aAAahpC,KAAK9E,aAAa8E,KAAKrJ,OAAOiG,iBAC9DoD,KAAKgpC,aAAahpC,KAAK9E,aAAuB,aAC9CoD,EAAiB0B,KAAKgpC,aAAahpC,KAAK9E,aAAuB,WAAU,WAGjF8E,KAAK6oC,kBAAoBjvC,EAAYoG,KAAK6oC,mBAC1C7oC,KAAK+oC,kBAAoBnvC,EAAYoG,KAAK+oC,mBAC1C/oC,KAAK+oC,kBAAkBtwC,KAAKuH,KAAKgpC,aAAahpC,KAAK9E,cACnD6uC,EAAQ/pC,KAAKrJ,OAAOiB,KAAKkd,gBAAgBq1B,GAAgBG,QACzDP,EAAM9wC,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwBy3B,EAAM9wC,SAAU8wC,EAAO/pC,KAAKrJ,SACxDozC,EAAMvtC,eAAe,SAAU,CAEhC,GADAwD,KAAKuqC,YAAqC,IAAxBvqC,KAAK7E,cAAuB,EAAI6E,KAAKuqC,WACP,UAA5CvqC,KAAKrJ,OAAOmF,aAAaQ,gBAEzB,GADAytC,EAAMS,cAAgB1xC,EAClBkH,KAAK7E,eAAiB,EAAG,CACzB4uC,EAAMhxC,WAAasD,YAAW2D,KAAKgpC,aAAahpC,KAAK9E,cACrD6uC,EAAMzrC,eAAiByrC,EAAMhxC,WAAWE,eACjC8wC,GAAMhxC,WAAWQ,mBACjBwwC,GAAMhxC,WAAWiH,KAAKrJ,OAAOoG,cACpCgtC,EAAM3vC,MAAQ2vC,EAAMhxC,WAAWqB,MAAQ,EACvC2vC,EAAM5vC,MAAQ6F,KAAKuqC,UACnB,IAAIE,GAAmBpxC,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAc1D,OAC5EmB,EAASU,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAcuvC,EAAmB,EACzF9xC,GAAShB,oBAAkBgB,GAAUqH,KAAKgpC,aAAahpC,KAAK9E,aAAevC,EAC3EsxC,EAAmBxrC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE2sC,KAAkBxrC,QAAQ7F,EAAOqxC,IACjFhqC,KAAK/E,kBACL8uC,EAAM/pC,KAAKrJ,OAAOiG,iBAAmBC,GAEzCG,EAAgBgtC,EAAcD,EAAMhxC,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB8uC,QAG7F,KAAiD,UAA5C/pC,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAClF3E,oBAAkBqI,KAAKgpC,aAAahpC,KAAK9E,cAAe,CAS5D,GARA6uC,EAAM3vC,MAAQ4F,KAAKgpC,aAAahpC,KAAK9E,aAAkB,MACnD6uC,EAAM3vC,OAAS4F,KAAK7E,eAAiB,IACrC4uC,EAAMhxC,WAAaD,EACnBixC,EAAMzrC,eAAiBA,QAChByrC,GAAMhxC,WAAWQ,mBACjBwwC,GAAMhxC,WAAWiH,KAAKrJ,OAAOoG,eAExCgtC,EAAM5vC,MAAoD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA6B0D,KAAKuqC,WAAavqC,KAAKuqC,WAAa,EACxD,UAA5CvqC,KAAKrJ,OAAOmF,aAAaQ,gBAA8B0D,KAAK7E,eAAiB,EAAG,CAChF,GAAIsvC,GAAmBpxC,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAc1D,OAC5EmB,EAASU,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAcuvC,EAAmB,EACzF9xC,GAAShB,oBAAkBgB,GAAUqH,KAAKgpC,aAAahpC,KAAK9E,aAAevC,EAC3EsxC,EAAmBxrC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE2sC,KAAkBxrC,QAAQ7F,EAAOqxC,IAEzF,GAAgD,UAA5ChqC,KAAKrJ,OAAOmF,aAAaQ,gBAA8B0D,KAAK7E,eAAiB,EAAG,CAC5ExC,EAASqH,KAAKgpC,aAAahpC,KAAK9E,YACpC+uC,GAAmBxrC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE2sC,KAAkBxrC,QAAQ7F,EAAOqxC,IAErFhqC,KAAK/E,kBACL8uC,EAAM/pC,KAAKrJ,OAAOiG,iBAAmBA,GAG7CmtC,EAAM5vC,OAAyB,IAAjB4vC,EAAM5vC,MAAe,EAAI4vC,EAAM5vC,MAC7C4vC,EAAMzwC,iBAAkB,EACxBywC,EAAMxwC,gBACNyG,KAAKgpC,aAAalsC,OAAOitC,EAAM5vC,MAAO,EAAG4vC,GACzC/pC,KAAKxC,mBAAmBV,OAAOitC,EAAM5vC,MAAO,EAAG4vC,GAE3CG,EADAD,GAIaF,EAAM5vC,MAEyB,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,iBACzB4tC,EAA6B,IAAhBH,EAAM5vC,MAAc+vC,EAAaA,EAAa,GAE/DzrC,EAAK3B,OAAOotC,EAAY,EAAGH,GAC3B/pC,KAAK6oC,kBAAkBpwC,KAAKsxC,GAEhC/pC,KAAKrJ,OAAOiB,KAAKkd,gBAAgBq1B,GAAgB1rC,KAAOsrC,EACxD/pC,KAAKqqC,kBAAmB,GAExBrqC,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,oBACoB,QAA1De,KAAKrJ,OAAOiB,KAAKkd,gBAAgBq1B,GAAgBjqC,OACpDM,QAAMR,KAAKxC,mBAAmB2sC,GAAiBnqC,KAAKrJ,OAAOiB,KAAKkd,gBAAgBq1B,GAAgBG,WAI5G3B,EAAU1nC,UAAUgoB,eAAiB,SAAU5rB,GAE3C,GAAsC,SAAlC2C,KAAKrJ,OAAOmF,aAAaC,MAAmBiE,KAAKrJ,OAAOqF,WAAuB,aAG/E,MAFAqB,GAAE8I,QAAS,OACXnG,KAAKrJ,OAAOqF,WAAuB,cAAI,EAG3CgE,MAAK7E,cAAgB6E,KAAKrJ,OAAOiB,KAAKssB,iBACtClkB,KAAK9E,YAAc8E,KAAKrJ,OAAOiB,KAAKssB,kBAAoB,EAAIlkB,KAAKrJ,OAAOiB,KAAKssB,iBAAmB,EAChGlkB,KAAK3E,aAAe2E,KAAKrJ,OAAOiP,qBAAqB,IAEzD+iC,EAAU1nC,UAAU8nB,SAAW,SAAU1rB,GACrC,GAAgD,WAA5C2C,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACtD0D,KAAKipC,OAAQ,EACbjpC,KAAKqqC,kBAAmB,CACxB,IAAIjN,GAAc,CAMlB,IALKp9B,KAAKgpC,aAAaxxC,SACnBwI,KAAK6oC,qBACL7oC,KAAKgpC,aAAepvC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,0BAEX,QAA5CuC,KAAKrJ,OAAOmF,aAAaQ,eAA0B,CACnD,GAAInE,GAAU6H,KAAKrJ,OAAOiB,KAAK6F,uBACO,WAAlCuC,KAAKrJ,OAAOmF,aAAaC,OAAqBiE,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACrGwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAKya,gBAAgBjjB,UACtDW,EAAU6H,KAAKgpC,cAEnBhpC,KAAK0qC,iBAAiBvyC,GACtB6H,KAAKrJ,OAAOyY,O3BpLN,e2BqLNpP,KAAK4oC,gBAAkB,EAE3B5oC,KAAK2qC,gBAEL,IAAIC,GAAcvsC,WAAS,cAAe2B,KAAKrJ,OAAOiB,MAClDizC,EAAQ7qC,KAAKrJ,OAAOmd,iBACpB9T,MAAKrJ,OAAOsF,kBAAkB+D,KAAKya,gBAAgBjjB,QAAsD,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,gBACtF8gC,EAAc//B,EAAEsB,IAAIkI,SACpB+jC,EAAYjb,aAAamb,OAAOA,OAAS9qC,KAAK8qC,QAG9C1N,EAAcyN,EAAM52B,uBAAuB,cAAc,GAAGpN,SAKhE+jC,EAAYjb,aAAamb,OAAOhG,SAAW1H,EAAawN,EAAYjb,aAAamb,OAAOhG,QAAQ,MAGxG6D,EAAU1nC,UAAUkoB,kBAAoB,SAAU9rB,GACzC2C,KAAKgpC,aAAaxxC,SACnBwI,KAAKgpC,aAAepvC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBAE3D,IAAImtC,GAAcvsC,WAAS,cAAe2B,KAAKrJ,OAAOiB,KACtDoI,MAAK8qC,OAASF,EAAYjb,aAAamb,OAAOA,OAC9C9qC,KAAKrJ,OAASqJ,KAAKrJ,MACnB,IACIwB,GACAsG,EAFAE,KAGAosC,EAAa/qC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAExDwvC,EAAS3xC,EADboF,EAAOuB,KAAKrJ,OAAOiB,KAAKgO,qBAAqB5F,KAAKrJ,OAAOiB,KAAKgO,qBAAqBpO,OAAS,GAE5F,IAAIwzC,EAAOxzC,OACP,IAASF,EAAI,EAAGA,EAAI0zC,EAAOxzC,OAAQF,IAAK,CACpC,GAAI6C,GAAQ6F,KAAKrJ,OAAOiB,KAAKkH,wBAAwBksC,EAAO1zC,GAAGyzC,GAC/DpsC,GAAIlG,KAAKuH,KAAKrJ,OAAOiB,KAAKiH,UAAU1E,KAChC6F,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAO8X,eAAiBzO,KAAKrJ,OAAOsI,qBACnEN,EAAIlG,KAAKuH,KAAKrJ,OAAOiB,KAAK66B,iBAAiBt4B,IAIvD,IAAKxC,oBAAkB8G,EAAK1F,YAAa,CACrC,GAAIA,GAAaC,EAAcgH,KAAKrJ,OAAQ8H,EAAK1F,WAAWE,SAC5D,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAIolC,GAAa3lC,EAAWQ,aAAaiF,QAAQC,EACjD1F,GAAWQ,aAAauD,OAAO4hC,EAAY,GAE/C1+B,KAAK8oC,oBAAsBlvC,EAAYoG,KAAK8oC,qBAC5C9oC,KAAK8oC,oBAAoBrwC,KAAKgG,GAElCusC,EAAOvyC,KAAKgG,GACZtG,EAAU6yC,CACV,KAAS1zC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,GAAI4yC,GAAalqC,KAAKgpC,aAAa7qC,IAAI,SAAUd,GAAK,MAAOA,GAAE0tC,KAAgBvsC,QAAQrG,EAAQb,GAAGyzC,KAC9E,IAAhBb,GACAlqC,KAAKgpC,aAAalsC,OAAOotC,EAAY,GAG7C,IAAK,GAAI5yC,GAAI,EAAGA,EAAIqH,EAAInH,OAAQF,IACvBK,oBAAkBgH,EAAIrH,KACvB0I,KAAKrJ,OAAOiB,KAAKorB,gBAAgBioB,gBAAgBxyC,KAAKkG,EAAIrH,KAItEqxC,EAAU1nC,UAAU0pC,eAAiB,WAEjC,IAAK,GADD1lC,GAAOjF,KAAKrJ,OAAOiB,KAAKk4B,cACnBx4B,EAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAC7B2N,EAAK3N,GAAG4S,aAAa,gBAAiB5S,EAAEyN,WAE5C,IAAI/E,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,cAExE,IAAK,GADDy8B,GAAQlrC,KAAKrJ,OAAOiB,KAAKwU,qBACpB9U,EAAI,EAAGA,EAAI4zC,EAAM1zC,OAAQF,IAC9B4zC,EAAM5zC,GAAG4S,aAAa,gBAAiB5S,EAAEyN,aAIrD4jC,EAAU1nC,UAAUypC,iBAAmB,SAAUvyC,GAK7C,IAAK,GAJDm2B,GAAatuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAGxDzC,EAAyD,UAA5CiH,KAAKrJ,OAAOmF,aAAaQ,eAA6B,gBAAkB,aAChFhF,EAAI,EAAGA,EAAI0I,KAAKrJ,OAAOsF,kBAA8B,aAAEzE,OAAQF,IAC/DK,oBAAkBqI,KAAKrJ,OAAOsF,kBAA8B,aAAE3E,GAAGyB,KAC9DiH,KAAKrJ,OAAOsF,kBAA8B,aAAE3E,GAAGyB,GAAYu1B,KAAgBn2B,EAAQ6H,KAAK9E,aAAaozB,KACrGtuB,KAAK4oC,gBAAkB5oC,KAAK4oC,gBAAkB,IAK9DD,EAAU1nC,UAAU+nB,gBAAkB,SAAU3rB,GAC5C,GAEImd,GAAiBnd,EAAE/B,aAA0B,cACjD,IAAI+B,EAAE/B,aAA0B,eAAE9D,OAE9B,IAASF,EAAI,EAAGA,EAAIkjB,EAAehjB,OAAQF,IACvCwD,GAAaZ,MAAOsgB,EAAeljB,GAAIiE,OAAQ,QAAUyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,kBAFtG,GAKrB,IAAIkC,EAAE/B,aAA0B,eAAE9D,OAG9B,IAAK,GADDmB,GADiB0E,EAAE/B,aAA0B,eAExChE,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC0I,KAAKmrC,eAAexyC,EAAOrB,GAAG2B,SAE9B,KAAK,GADD+xC,GAAS3xC,EAAoBV,EAAOrB,IAC/BiK,EAAI,EAAGA,EAAIypC,EAAOxzC,OAAQ+J,IAC/BvB,KAAKmrC,eAAeH,EAAOzpC,GAAGtI,SAElCoE,GAAE/B,aAA0B,eAAI+B,EAAE/B,aAA0B,eAAE9B,OAAOwxC,GAG7EhrC,KAAKipC,OAAQ,GAEjBN,EAAU1nC,UAAUkqC,eAAiB,SAAUjxC,SAEpC8F,MAAKrJ,OAAe,yBAAEuD,SAEtB8F,MAAKrJ,OAAS,mBAAEuD,IAE3ByuC,EAAU1nC,UAAUmoC,kBAAoB,WACpC,GACIjvC,GAGAqD,EAAqBwC,KAAKrJ,OAAOiB,KAAK6F,wBAEtCgB,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D03B,EAAatuB,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EAC5D,KAAK7D,oBAAkBqI,KAAKrJ,OAAoB,eAAI,CAChD,GAAIgI,GAAMqB,KAAKrJ,OAAoB,cAAEsR,QAAQ,KAC7CjI,MAAKrJ,OAAOsnB,YAAYtf,GACxBqB,KAAKrJ,OAAoB,cAAI,KAEjC,IAAKgB,oBAAkBqI,KAAK6oC,mBACxB,IAASvxC,EAAI,EAAGA,EAAI0I,KAAK6oC,kBAAkBrxC,OAAQF,IAG/C,GAFA6C,EAAQsE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEixB,KAAgB9vB,QAAQwB,KAAK6oC,kBAAkBvxC,GAAGg3B,IAC3F7vB,EAAK3B,OAAO3C,EAAO,GAC6B,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,iBACzBnC,EAAQqD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEixB,KAClD9vB,QAAQwB,KAAK6oC,kBAAkBvxC,GAAa,WAAI0I,KAAK6oC,kBAAkBvxC,GAAa,WAAEg3B,GACrFtuB,KAAK6oC,kBAAkBvxC,GAAGg3B,KAC3B32B,oBAAkB6F,EAAmBrD,KAEtC,IAAK,GADD4V,GAAWvS,EAAmBrD,GAAmB,aAC5CH,EAAI,EAAG+V,GAAY/V,EAAI+V,EAASvY,OAAQwC,IACzC+V,EAAS/V,GAAGs0B,KAAgBtuB,KAAK6oC,kBAAkBvxC,GAAGg3B,IACtD9wB,EAAmBrD,GAAmB,aAAE2C,OAAO9C,EAAG,EAO1E,KAAKrC,oBAAkBqI,KAAK8oC,qBACxB,IAAK,GAAIxxC,GAAI,EAAGA,EAAI0I,KAAK8oC,oBAAoBtxC,OAAQF,IACjD,IAAKK,oBAAkBqI,KAAK8oC,oBAAoBxxC,GAAa,YAAI,CAC7D6C,EAAQqD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEixB,KAClD9vB,QAAQwB,KAAK8oC,oBAAoBxxC,GAAa,WAAEg3B,GACrD,IAAI8c,GAA4D,IAA5CprC,KAAK8oC,oBAAoBxxC,GAAa,MAAU0I,KAAK8oC,oBAAoBxxC,GAAa,MACtG0I,KAAK8oC,oBAAoBxxC,GAAa,MAAI,CACzCK,qBAAkB6F,EAAmBrD,KACtCqD,EAAmBrD,GAAmB,aAAE2C,OAAOsuC,EAAe,EAAGprC,KAAK8oC,oBAAoBxxC,IAK1G0I,KAAK6oC,kBAAoB7oC,KAAKgpC,aAAehpC,KAAK+oC,kBAAoB/oC,KAAKxC,sBAC3EwC,KAAKgpC,aAAepvC,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACjDuC,KAAKuqC,WAAa,EAClBvqC,KAAKxC,mBAAqB5D,EAAYoG,KAAKrJ,OAAOiB,KAAK6F,yBACvDuC,KAAK8oC,uBACL9oC,KAAKrJ,OAAOiB,KAAK2H,aAAa4sB,WAElCwc,EAAU1nC,UAAUioC,UAAY,SAAUlmC,GACtC,GAAsC,UAAlChD,KAAKrJ,OAAOmF,aAAaC,KAAkB,CAC3C,GAAIzE,OAAI,GACJgE,EAAe0E,KAAKrJ,OAAOsF,kBAK3BwC,EAAQuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC/CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC/D4G,EAAqBwC,KAAKrJ,OAAOiB,KAAK6F,wBACtC4tC,EAAerrC,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GAE1D8vC,EAAahwC,EAAyB,aAEtCH,MAAgB,GAChBD,MAAc,GAEdG,MAAe,EAKnB,IAHIiwC,EAAW9zC,OAAS,GAAiD,WAA5CwI,KAAKrJ,OAAOmF,aAAaQ,gBAClDgvC,EAAW7N,UAEiC,WAA5Cz9B,KAAKrJ,OAAOmF,aAAaQ,eAEzB,GADAmC,EAAK3B,OAAO2B,EAAKjH,OAAS8zC,EAAW9zC,OAAQ8zC,EAAW9zC,QACnDwI,KAAKrJ,OAAOkX,YAKZ,CACD,GAAI09B,GAAe3xC,EAAY6E,GAC3B4yB,EAAaka,EAAaptC,IAAI,SAAUd,GAAK,MAAOA,GAAEguC,KACrD7sC,QAAQhB,EAAmB,GAAG6tC,IAC/BG,EAAWna,EAAarxB,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,QAC1DrnC,GAAqB+tC,EAAazuC,OAAOu0B,EAAYma,OATjDhuC,GAAmBhG,OAAS8zC,EAAW9zC,QACvCgG,EAAmBV,OAAOU,EAAmBhG,OAAS8zC,EAAW9zC,OAAQ8zC,EAAW9zC,OAWhG,KAAKF,EAAI,EAAGA,EAAIg0C,EAAW9zC,OAAQF,IAAK,CACpC,GAAI+C,GAAWgC,YAAWivC,EAAWh0C,GAgCrC,UA/BO+C,GAAStB,iBACTsB,GAASpB,eACToB,GAASF,YACTE,GAASD,YACTC,GAASf,sBACTe,GAASd,mBACTc,GAASiE,eACX3G,oBAAkB0C,EAASmwC,sBACrBnwC,GAASmwC,cAEpBc,EAAWh0C,GAAG+C,SAAWA,EACzBgB,EAAe2E,KAAK+oC,kBAAkBzxC,GAClCK,oBAAkB0D,KAClBA,EAAe2E,KAAK+oC,kBAAkBzxC,EAAI,IAE1C0I,KAAK/E,kBACAtD,oBAAkB2zC,EAAWh0C,GAAGyB,aACjCiE,EAAgBquC,EAAcC,EAAWh0C,GAAGyB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBqwC,EAAWh0C,KAGhHK,oBAAkB0D,KACnBH,EAAcG,EAAalB,OAEiB,QAA5C6F,KAAKrJ,OAAOmF,aAAaQ,gBAAwE,WAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBAC1E3E,oBAAkB2zC,EAAWh0C,GAAGyB,cAAuC,IAAxBiH,KAAK7E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaZ,MAAOoxC,EAAWh0C,GAAIiE,OAAQ,OAASyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBC,EAAaC,MApDvF,GAoDkHE,GAC/HF,EAAgB,KACgC,UAA5C6E,KAAKrJ,OAAOmF,aAAaQ,iBAA+B3E,oBAAkB2zC,EAAWh0C,GAAa,YAIlG,IAAK,GAHDm0C,GAAajuC,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEguC,KAC3D7sC,QAAQ8sC,EAAWh0C,GAAa,WAAE+zC,IACnCt7B,EAAWvS,EAAmBiuC,GAAwB,aACjDzxC,EAAI,EAAGA,EAAI+V,EAASvY,OAAQwC,IAC7B+V,EAAS/V,GAAGqxC,KAAkBC,EAAWh0C,GAAG+zC,IAC5C7tC,EAAmBiuC,GAAwB,aAAE3uC,OAAO9C,EAAG,GAKvE,GAAIsB,EAA2B,eAAE9D,OAC7B,IAAKF,EAAI,EAAGA,EAAIgE,EAA2B,eAAE9D,OAAQF,IACjDwD,GAAaZ,MAAOoB,EAA2B,eAAEhE,GAAIiE,OAAQ,UAAYyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBC,EAAaC,MAnEhH,GAmE2IE,EAG5J2E,MAAKrJ,OAAOuG,aACZ,KAAK,GAAIi2B,GAAM,EAAGA,EAAM10B,EAAKjH,OAAQ27B,IACjC10B,EAAK00B,GAAU,MAAIA,EACnB7gB,WAAS,sBAAwB7T,EAAK00B,GAAa,SAAI,SAAUA,EAAKnzB,KAAKrJ,QACtE8H,EAAK00B,GAAU,OAChBnzB,KAAKrJ,OAAOuG,WAAWzE,KAAKgG,EAAK00B,IAI7CnzB,KAAK+oC,kBAAoB/oC,KAAK6oC,kBAAoB7oC,KAAKgpC,aAAehpC,KAAK8oC,oBAAsB9oC,KAAKxC,uBAE1GmrC,EAAU1nC,UAAUmpC,wBAA0B,SAAUjwC,GACpD,GAAI8K,GAAOjF,KAAKrJ,OAAOiB,KAAKk4B,aAyB5B,QAxBiD,UAA5C9vB,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,iBAC9E0D,KAAK7E,eAAiB,KACpBxD,oBAAkBqI,KAAKgpC,aAAahpC,KAAK9E,eAAiB8E,KAAKgpC,aAAahpC,KAAK9E,aAAa9B,WAC3F4G,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACvDwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAKya,gBAAgBjjB,QACtD2C,GAASd,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAc1D,OAClB,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,iBAEzBnC,GADsB6F,KAAK0pC,uBAK/BvvC,GAASd,EAAoB2G,KAAKgpC,aAAahpC,KAAK9E,cAAc1D,QAGtE2C,GAAS8K,EAAKzN,SACd2C,EAAQ8K,EAAKzN,OAAS,GAE1BwI,KAAK0qC,iBAAiB1qC,KAAKrJ,OAAOiB,KAAK6F,yBACnCuC,KAAK4oC,kBACLzuC,GAAS6F,KAAK4oC,iBAElB5oC,KAAK4oC,gBAAkB,GAEpBzuC,GAEXwuC,EAAU1nC,UAAUooC,qBAAuB,SAAUhsC,GACjDA,EAAE2F,KAAKmD,QAAS,CAChB,IAAImkC,GAAUtqC,KAAKrJ,OAAOiB,KAAKqE,kBAC3BqU,IAEAhY,QAAOC,KAAK+xC,GAAS9yC,SACrB8Y,EAAeg6B,EAAQh6B,aAE3B,KAAK,GAAIhZ,GAAI,EAAGA,EAAIgZ,EAAa9Y,OAAQF,IACrC+F,EAAE4H,KAAKnI,OAAOwT,EAAahZ,GAAQ,MAAG,IAG9CqxC,EAAU1nC,UAAUqoC,cAAgB,SAAUtmC,GAG1CA,EAAU,MAAIhD,KAAKrJ,OAAOy9B,kBAAkB,GAAW,UAEpDuU,KCtiBP+C,GAAsB,WAItB,QAASA,GAAK/0C,GACVqJ,KAAKsQ,aAAe,eACpBtQ,KAAKya,eAAiB,iBACtBza,KAAK2rC,iBAAmB,KACxBlpC,OAAKC,OAAOkpC,QACZ5rC,KAAKrJ,OAASA,EACdqJ,KAAK/E,iBAAmBtD,oBAAkBhB,EAAOiG,iBACjDoD,KAAK6rC,uBAAyB,KAC9B7rC,KAAK8rC,sBACL9rC,KAAK+rC,gBAAkB,GAAIpD,IAAU3oC,KAAKrJ,QAC1CqJ,KAAKoH,mBAmxBT,MA7wBAskC,GAAKzqC,UAAU4B,cAAgB,WAC3B,MAAO,QAKX6oC,EAAKzqC,UAAUmG,iBAAmB,WAC9BpH,KAAKrJ,OAAO0Q,G5BqBI,a4BrBkBrH,KAAKgsC,WAAYhsC,MACnDA,KAAKrJ,OAAO0Q,G5BsBG,Y4BtBkBrH,KAAK0nB,UAAW1nB,MACjDA,KAAKrJ,OAAO0Q,G5BuBE,W4BvBkBrH,KAAKisC,SAAUjsC,MAC/CA,KAAKrJ,OAAO0Q,G5BwBW,oB4BxBkBrH,KAAKolB,kBAAmBplB,MACjEA,KAAKrJ,OAAO0Q,G5ByBE,W4BzBkBrH,KAAKkoB,SAAUloB,MAC/CA,KAAKrJ,OAAO0Q,G5BgCK,c4BhCkBrH,KAAKopB,YAAappB,MACrDA,KAAKrJ,OAAOiB,KAAKyP,G5B2CD,c4B3CuBrH,KAAKksC,WAAYlsC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,iBAAkBrH,KAAKmsC,YAAansC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,gBAAiBrH,KAAKosC,aAAcpsC,MACxDA,KAAKrJ,OAAO0Q,G5BwBE,W4BxBkBrH,KAAKioB,SAAUjoB,MAC/CA,KAAKrJ,OAAO0Q,GAAG,cAAerH,KAAKqsC,iBAAkBrsC,MACrDA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKqsC,iBAAkBrsC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,G5ByCF,a4BzCuBrH,KAAKolB,kBAAmBplB,MAC9DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,WAAYrH,KAAKssC,aAActsC,MACnDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,cAAerH,KAAKusC,eAAgBvsC,MACxDA,KAAKrJ,OAAO0Q,GAAG,0BAA2BrH,KAAKwsC,wBAAyBxsC,MAExEA,KAAKrJ,OAAOiB,KAAKyP,G5B8CI,Y4B9CuBrH,KAAKysC,gBAAiBzsC,MAClEA,KAAKrJ,OAAOiB,KAAKyP,G5B+CM,sB4B/CuBrH,KAAK0sC,kBAAmB1sC,MACtEA,KAAKrJ,OAAOiB,KAAKyP,GAAG,mBAAoBrH,KAAK2sC,eAAgB3sC,MAC7DA,KAAKrJ,OAAOiB,KAAKyP,GAAG,mBAAoBrH,KAAK4sC,eAAgB5sC,OAEjE0rC,EAAKzqC,UAAUqrC,aAAe,SAAUjvC,GACpC2C,KAAK6sC,kBAAoBxvC,EAAEgE,QAE/BqqC,EAAKzqC,UAAU2rC,eAAiB,SAAUE,GACtCA,EAAQxwC,eAAiB0D,KAAKrJ,OAAOmF,aAAaQ,eAClDwwC,EAAQ5xC,YAAc8E,KAAK9E,YAC3B4xC,EAAQC,cAAgB/sC,KAAK2rC,kBAEjCD,EAAKzqC,UAAUwrC,gBAAkB,SAAUzpC,GACvChD,KAAKrJ,OAAOyP,Q5B1DK,c4B0DuBpD,IAE5C0oC,EAAKzqC,UAAUyrC,kBAAoB,SAAU1pC,GACH,SAAlChD,KAAKrJ,OAAOmF,aAAaC,MACzBiE,KAAKrJ,OAAOyP,Q5B1DI,iB4B0D2BpD,IAMnD0oC,EAAKzqC,UAAUyG,oBAAsB,WAC7B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,I5BxBI,a4BwBmB5H,KAAKgsC,YACxChsC,KAAKrJ,OAAOiR,I5BvBG,Y4BuBmB5H,KAAK0nB,WACvC1nB,KAAKrJ,OAAOiR,I5BtBE,W4BsBmB5H,KAAKisC,UACtCjsC,KAAKrJ,OAAOiR,I5BrBW,oB4BqBmB5H,KAAKolB,mBAC/CplB,KAAKrJ,OAAOiR,I5BZK,c4BYmB5H,KAAKopB,aACzCppB,KAAKrJ,OAAOiB,KAAKgQ,I5BDD,c4BCwB5H,KAAKksC,YAC7ClsC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,iBAAkB5H,KAAKmsC,aAC5CnsC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,gBAAiB5H,KAAKosC,cAC3CpsC,KAAKrJ,OAAOiR,I5BpBE,W4BoBmB5H,KAAKioB,UACtCjoB,KAAKrJ,OAAOiR,IAAI,cAAe5H,KAAKqsC,kBACpCrsC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKqsC,kBACvCrsC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,cAAe5H,KAAKusC,gBACzCvsC,KAAKrJ,OAAOiB,KAAKgQ,I5BJF,a4BIwB5H,KAAKolB,mBAC5CplB,KAAKrJ,OAAOiR,IAAI,0BAA2B5H,KAAKwsC,yBAChDxsC,KAAKrJ,OAAOiB,KAAKgQ,I5BII,Y4BJwB5H,KAAKysC,iBAClDzsC,KAAKrJ,OAAOiB,KAAKgQ,I5BKM,sB4BLwB5H,KAAK0sC,mBACpD1sC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,WAAY5H,KAAKssC,cACtCtsC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,mBAAoB5H,KAAK2sC,gBAC9C3sC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,mBAAoB5H,KAAK4sC,kBAQlDlB,EAAKzqC,UAAU8F,QAAU,WACrB/G,KAAK0H,uBAKTgkC,EAAKzqC,UAAU+rC,oBAAsB,SAAU7c,GAC3CnwB,KAAKrJ,OAAOiB,KAAKoE,WAAWgxC,oBAAoB7c,IAEpDub,EAAKzqC,UAAUorC,iBAAmB,SAAUrpC,GACxC,GAAIiqC,GAAYz0C,YAAU,aAAcwK,GACpCmd,EAAY3nB,YAAU,OAAQy0C,GAC9BC,EAAUltC,KAAKrJ,OACfG,EAAUo2C,EAAQt2C,WAAWE,OACjC,KAAKJ,EAAaw2C,IAAYp2C,YAAmB8oB,uBAClB,SAA1BqtB,EAAUptC,aAA+C,QAArBotC,EAAU1xC,SACN,UAAxC2xC,EAAQpxC,aAAaQ,gBAAsE,UAAxC4wC,EAAQpxC,aAAaQ,gBAC1B,UAAxC4wC,EAAQpxC,aAAaQ,gBAC5B,GAAkB,gBAAd6jB,EAA6B,CAC7B,GAAItZ,GAAWlP,oBAAkBs1C,EAAUtuC,OAASrG,OAAOC,KAAK00C,EAAUtuC,KAAKnH,OAASwI,KAAK7E,cACzF8xC,EAAUtuC,IAAIkI,SAAW,EACzBsmC,EAAYx1C,oBAAkBkP,KAA2B,IAAdA,GACwC,EAAnFqmC,EAAQzvC,wBAAwBoJ,GAAUqmC,EAAQ1xC,0BAA0B,GAChF0xC,GAAQt1C,KAAKyZ,MAAMM,UAAU,gBAAiBw7B,OAE7C,IAAkB,mBAAdhtB,EAEL,IAAK,GADDitB,GAAeF,EAAQt1C,KAAKyZ,MAAMG,OAAOha,OACpCF,EAAI,EAAGA,EAAI81C,EAAc91C,IACW,kBAArC41C,EAAQt1C,KAAKyZ,MAAMG,OAAOla,GAAGQ,KAC7Bo1C,EAAQt1C,KAAKyZ,MAAMG,OAAO1U,OAAOxF,EAKX,WAAlC0I,KAAKrJ,OAAOmF,aAAaC,MAA8C,WAA1BkxC,EAAUptC,aACvDG,KAAKrJ,OAAOyY,OAAO,uBAG3Bs8B,EAAKzqC,UAAUmkB,kBAAoB,SAAUpiB,GACzC,GAAI3B,GAAS2B,EAAK3B,MAClB,KAAI1J,oBAAkB0J,EAAO4G,QAAQ,iBAArC,CAGA,GAAItI,GAASK,KAAKrJ,OAAOiB,KAAKkyC,kBAAkBzoC,EAAO4G,QAAQ,gBAAgBmB,aAAa,iBAC5F,IAAsC,SAAlCpJ,KAAKrJ,OAAOmF,aAAaC,OAAoBiE,KAAKqtC,WAAa1tC,IAAWA,EAAO2tC,cACjFttC,KAAKrJ,OAAOmF,aAAamE,cAAgBN,EAAOM,eAAkBoB,EAAOkE,UAAUC,SAAS,sBAC5FnE,EAAOkE,UAAUC,SAAS,uBAA0BxF,KAAKrJ,OAAOmF,aAAa0uB,oBAAqB,CAGlG,GAFAxqB,KAAKqtC,WAAY,EACjBrtC,KAAKrJ,OAAOiB,KAAKoiB,eAAgBkK,iBAAkBlhB,EAAK6D,WAAY,GAChE7G,KAAKrJ,OAAOyH,qBAAsB,CAClC,GAAI8N,GAAKnE,eAAa/E,EAAK3B,OAAQ,QACnCrB,MAAK2rC,iBAAmBz/B,EAAG9C,aAAa,iBACxC8C,EAAGhC,aAAa,gBAAiBgC,EAAGrF,SAAW,IAEnD7G,KAAKutC,mBAAmB,YAGhC7B,EAAKzqC,UAAUssC,mBAAqB,SAAUxxC,GAC1CiE,KAAKrJ,OAAOiB,KAAKoiB,eAAgBle,cAAgBC,KAAMA,KAAU,GAC9CvD,YAAU,gBAAiBwH,KAAKrJ,OAAOiB,KAAKoE,YAClDgG,MAAMhC,KAAKrJ,OAAOiB,KAAKoE,YACpCgE,KAAKrJ,OAAOiB,KAAKyyB,QAAS,GAE9BqhB,EAAKzqC,UAAU0rC,eAAiB,WACxB3sC,KAAKrJ,OAAOyH,sBAA0D,SAAlC4B,KAAKrJ,OAAOmF,aAAaC,OAC7DiE,KAAKqtC,WAAY,EACjBrtC,KAAKutC,mBAAmB,YAGhC7B,EAAKzqC,UAAUirC,WAAa,SAAUlpC,IAC9BhD,KAAKqtC,WAAgD,SAAlCrtC,KAAKrJ,OAAOmF,aAAaC,MAAmBW,cAAcsD,KAAKrJ,OAAOod,oBACzF/T,KAAKwtC,SAAWxqC,EAAKzH,QAEL,OAAhByH,EAAKzH,QACLyE,KAAKolB,kBAAkBpiB,IAG/B0oC,EAAKzqC,UAAUkqC,eAAiB,SAAUjxC,SAE/B8F,MAAKrJ,OAAe,yBAAEuD,SAEtB8F,MAAKrJ,OAAS,mBAAEuD,IAE3BwxC,EAAKzqC,UAAUgnB,SAAW,SAAUjlB,GAChC,GAAIwB,GAAQxE,KAERytC,EAAOzqC,EAAY,OAoBvB,UAnBOA,GAAY,QACfhD,KAAKrJ,OAAOyH,uBAAyBzG,oBAAkBqI,KAAK2rC,oBAC5D3oC,EAAKrE,IAAIuL,aAAa,gBAAiBlK,KAAK2rC,kBAC5C3rC,KAAK2rC,qBAAmBryB,IAEN,UAAlBtZ,KAAKwtC,UACLxtC,KAAKrJ,OAAOyP,Q5BnIF,W4BmI2BpD,EAAM,SAAU0qC,GAC5CA,EAAavnC,QAA6C,SAAnC3B,EAAM7N,OAAOmF,aAAaC,KAG7C2xC,EAAavnC,QAA6C,SAAnC3B,EAAM7N,OAAOmF,aAAaC,OACtDyI,EAAM6oC,WAAY,EAClB7oC,EAAM+oC,mBAAmB,WAJzB/oC,EAAMmpB,mBAAmB,QAMxBh2B,oBAAkB81C,IACnBA,EAAKhmB,QAAQimB,KAIrB1tC,KAAK6sC,oBAAsB7sC,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,qBACrExF,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,uBAAyBxF,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,kBAG7G,MAFAxC,GAAKmD,QAAS,OACdnG,KAAK6sC,kBAAoB,KAGS,UAAlC7sC,KAAKrJ,OAAOmF,aAAaC,OACH,QAAlBiE,KAAKwtC,UAAwC,aAAlBxtC,KAAKwtC,SAChCxtC,KAAKwtC,SAAW,KAEO,UAAlBxtC,KAAKwtC,WACVxqC,EAAKmD,QAAS,EACdnG,KAAKwtC,SAAW,QAO5B9B,EAAKzqC,UAAU0sB,mBAAqB,SAAUggB,GAC1C,IAAKh2C,oBAAkBqI,KAAKrJ,OAAOiB,KAAKi2B,eAAgB,CACpD,GAAI+f,GAAY5tC,KAAKrJ,OAAOsZ,QAAQC,GAAK,eACzClQ,MAAKrJ,OAAOiB,KAAKi2B,cAAcC,aAAa8f,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1G3tC,KAAKrJ,OAAOiB,KAAKi2B,cAAcC,aAAa8f,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGjC,EAAKzqC,UAAUmoB,YAAc,SAAU/rB,GACnC,GAAsC,SAAlC2C,KAAKrJ,OAAOmF,aAAaC,KAAiB,CAC1C,GAAI8xC,GAAcxvC,WAAS,yBAA0B2B,KAAKrJ,OAAOiB,KAAKoE,YAClE8xC,EAAW9tC,KAAKrJ,OAAOg4B,iBAAiBkf,EAAYhnC,SAAU7G,KAAKrJ,OAAOyI,gBAC9EY,MAAKrJ,OAAO4I,aAAaC,YACrBf,KAAMovC,EAAYllC,QAClBlJ,KAAMquC,EACNnuC,OAAQK,KAAKrJ,OAAOiB,KAAKgI,aAAaI,KAAKrJ,OAAOyI,mBAEtDY,KAAKutC,mBAAmB,UACxBvtC,KAAKqtC,WAAY,EAEiB,UAAlCrtC,KAAKrJ,OAAOmF,aAAaC,MACzBiE,KAAKrJ,OAAOyY,OAAO,yBAG3Bs8B,EAAKzqC,UAAUsrC,eAAiB,SAAUvpC,GAClC5L,EAAgB4I,KAAKrJ,SAA6C,SAAlCqJ,KAAKrJ,OAAOmF,aAAaC,MAAmC,SAAhBiH,EAAKzH,SACjFyE,KAAKqtB,WAAWrqB,EAAMA,EAAK6D,UAC3B7G,KAAK+tC,cAAc/qC,EAAMA,EAAKrE,IAAKqE,EAAK6D,YAGhD6kC,EAAKzqC,UAAUinB,SAAW,SAAUllB,GAChC,GAAIwB,GAAQxE,IACZ,IAAsC,SAAlCA,KAAKrJ,OAAOmF,aAAaC,MAAmBiE,KAAKrJ,OAAOsZ,QAAQjI,cAAc,QAAS,CACvFhF,EAAKmD,QAAS,CAEdmM,YAAS,UAAU,EAAOtS,KAAKrJ,OAAOiB,MACtC0a,WAAS,kBAAkB,EAAMtS,KAAKrJ,QACtCqM,EAAK2F,QAAQ3F,EAAK5H,YAAc4H,EAAK9I,KACrC,IAAI8zC,EAEAA,GADAr2C,oBAAkBqL,EAAKvD,MACfO,KAAKrJ,OAAOiB,KAAKoE,WAAqB,WAAEiyC,KAAK5vB,cAAc+c,WAG3Dp4B,EAAKvD,KAAK27B,UAEtB,IAAI8S,GACAC,EAAgBnuC,KAAKrJ,OAAO6E,yBAC5B7D,qBAAkBq2C,GAClBhuC,KAAKrJ,OAAOiB,KAAK6F,wBAAwBL,OAAO,SAAUC,EAAG/F,GACzD,GAAI+F,EAAE8wC,EAAc,MAAQnrC,EAAK2F,QAAQwlC,EAAc,IAEnD,YADAD,EAAa52C,KAMrB42C,GAAwD,IAA1CluC,KAAKrJ,OAAOkI,UAAUL,QAAQwvC,IAAkBhuC,KAAKrJ,OAAOsI,mBAAqB,EAC3Fe,KAAKrJ,OAAOiB,KAAK66B,iBAAiBj0B,QAAQwvC,GAAShuC,KAAKrJ,OAAOkI,UAAUL,QAAQwvC,EAEzF,IAAInb,KAMJ,IALAx2B,SAAOw2B,EAAK7vB,GACZ6vB,EAAI1sB,QAAS,EACb0sB,EAAI5vB,KAAO,OACX+qC,EAAQhuC,KAAKrJ,OAAOiB,KAAKiH,UAAUmvC,EAAMnnC,UACzC7G,KAAKrJ,OAAOyP,Q5B9RC,c4B8R2BysB,GACnCA,EAAI1sB,OAiCLnG,KAAKrJ,OAAOiB,KAAKyyB,QAAS,MA5B1B,IAJK2jB,EAAMnnC,WAAa7G,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAwB,QAAlBwI,KAAKwtC,WAC5ExtC,KAAKouC,cAAe,GAExBpuC,KAAKquC,gBAAgBrrC,GAChBtM,EAAasJ,KAAKrJ,SACjBqJ,KAAKrJ,OAAOC,qBAAsBC,gBAAemJ,KAAKrJ,OAAOC,WAAWE,kBAAmB8oB,sBAa5F,GAAIlpB,EAAasJ,KAAKrJ,SACtBqJ,KAAKrJ,OAAOC,qBAAsBC,gBAAemJ,KAAKrJ,OAAOC,WAAWE,kBAAmB8oB,qBAAoB,CAChH,GAAIvO,GAAQrR,KAAKrJ,OAAOiB,KAAKyZ,KAClBrR,MAAKrJ,OAAOiB,KAAKhB,WAAW03C,OAAOH,EAAc,GAAInrC,EAAK2F,QAAS0I,EAAMk9B,UAAWl9B,EAAOrO,EAAKwrC,eACtGv8B,KAAK,SAAU5U,GACX1F,oBAAkB0F,KACnB2F,EAAK2F,QAAQ3F,EAAK5H,YAAciC,EAAE2F,EAAK5H,aAE3CoJ,EAAM6oB,WAAWrqB,EAAMkrC,GACvB1pC,EAAMupC,cAAc/qC,EAAMgrC,EAAOE,UArBrC,IAAI92C,EAAgB4I,KAAKrJ,QAAS,CAC9B,GACI83C,IAAa5uC,YAAa,OAAQpB,KAAMuE,EAAK2F,QAASpN,OAAQ,OAAQoD,IAAKqvC,EAC3EnnC,SAAUqnC,EAAYvlC,QAAS3F,EAAK2F,QAASvN,WAAY4H,EAAK5H,WAC9DszC,kBAAmB,KAAMC,oBAAqB,KAClD3uC,MAAKrJ,OAAOiB,KAAK4c,gBAA4B,aAAEi6B,EAAUzuC,KAAKrJ,OAAOiB,KAAKyZ,WAG1ErR,MAAKqtB,WAAWrqB,EAAMkrC,GACtBluC,KAAK+tC,cAAc/qC,EAAMgrC,EAAOE,KAqBpDxC,EAAKzqC,UAAU8sC,cAAgB,SAAU/qC,EAAMrE,EAAKkI,GAChD,GAAI+nC,EACA5uC,MAAKrJ,OAAOiB,KAAKi3C,iBACjB7uC,KAAKrJ,OAAOiB,KAAKi3C,gBAAgB1iB,QAAQnpB,EAAK2F,SAElD3I,KAAKrJ,OAAOiB,KAAKoE,WAAW8yC,gBAAgB9uC,KAAKrJ,OAAOiB,KAAK4f,iBAAiBxU,EAAK5H,cACnF4E,KAAKrJ,OAAOiB,KAAKoE,WAAW+yC,QAAQhoC,UACd,QAAlB/G,KAAKwtC,UAAwC,aAAlBxtC,KAAKwtC,WAChCxtC,KAAKutC,mBAAmB,UACxBvtC,KAAKqtC,WAAY,GAErBrtC,KAAK2tB,mBAAmB,QACpB3tB,KAAKrJ,OAAOsI,mBAAqB,IACjC2vC,EAAO5uC,KAAKrJ,OAAOiB,KAAK66B,iBAAiB5rB,GACzCwD,eAAaukC,IAAQ,cAAe,eACpCvkC,cAAYukC,EAAKlpC,iBAAiB,eAAgB,oBAAqB,iBAE3E2E,eAAa1L,IAAO,cAAe,eACnC0L,cAAY1L,EAAI+G,iBAAiB,eAAgB,oBAAqB,gBACtE1F,KAAKrJ,OAAOiB,KAAKgzC,YAAYoE,eAC7Bl0C,GAAaZ,MAAO8I,EAAK2F,QAASpN,OAAQ,QAAUyE,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,cAAe6H,EAAK5H,YAC7HuD,EAAIkI,WAAa7G,KAAKrJ,OAAO8G,wBAAwBjG,OAAS,GAAwB,UAAlBwI,KAAKwtC,WAC1ExtC,KAAKwtC,SAAW,KAEpB,IAAIyB,IACAhsC,KAAM,OAAQtD,OAAQK,KAAKrJ,OAAO6gB,iBAAiBxU,EAAK5H,YAAaqD,KAAMuE,EAAK2F,QAChFumC,aAAclsC,EAAKwrC,cAAe7vC,IAAKA,EAAK0C,OAAQ2B,EAAKvD,KAE7DO,MAAKrJ,OAAOyP,Q5B5VQ,iB4B4VuB6oC,IAE/CvD,EAAKzqC,UAAUkrC,YAAc,SAAU4C,IAC9B/uC,KAAKrJ,OAAOiB,KAAKyyB,QAAUrqB,KAAKqtC,WAA+B,QAAlBrtC,KAAKwtC,UAAwD,SAAlCxtC,KAAKrJ,OAAOmF,aAAaC,OAClGiE,KAAKutC,mBAAmB,UACxBvtC,KAAKqtC,WAAY,EACjBrtC,KAAKwtC,SAAW,OAGxB9B,EAAKzqC,UAAUotC,gBAAkB,SAAUrrC,GACvC,GAAItG,cAAcsD,KAAKrJ,OAAOod,iBAK1B,IAAK,GAJDoc,GAAOnwB,KAAKrJ,OAAOiB,KAAKgI,aAExBqf,EAAcjf,KAAKrJ,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAI64B,EAAK34B,OAAQF,IAAK,CAClC,GAAI2nB,EAAY3nB,GAAGqY,SAAU,CACzB,GAAIw/B,GAAanvC,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAKigB,EAAK74B,GAAG2R,GACvDgW,GAAY3nB,GAAG83C,oBAAoB/yC,UAASlC,OAAU7C,IAAM0L,EAAK2F,SAAU3I,KAAKrJ,OAAOiB,KAAM,WAAYu3C,EAAYnvC,KAAKrJ,OAAOiB,KAAQ,iBAAG,MAE5Iu4B,EAAK74B,GAAG+3C,cACRC,uBAAqBtvC,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAKigB,EAAK74B,GAAG2R,IAAM,eAAgB,eAAgBknB,EAAK74B,IAEtG64B,EAAK74B,GAAGqY,UACR2/B,uBAAqBtvC,KAAKrJ,OAAOiB,KAAKqY,QAAQC,GAAKigB,EAAK74B,GAAG2R,IAAK,WAAYknB,EAAK74B,IAAI,KAKrGo0C,EAAKzqC,UAAUosB,WAAa,SAAUrqB,EAAM6D,GACxC7G,KAAKrJ,OAAOiB,KAAKoE,WAAWsxB,UAAUzmB,EAAU7D,EAAK2F,SACrD3I,KAAKrJ,OAAOiB,KAAKkd,gBAAgBjO,GAAUpI,KAAOuE,EAAK2F,SAE3D+iC,EAAKzqC,UAAU+qC,WAAa,SAAUjxC,EAASK,GAC3CN,EAAWC,EAASiF,KAAKrJ,OAAQqJ,KAAK/E,gBAAiB+E,KAAK9E,YAAa8E,KAAK7E,cAAeC,EAAY4E,KAAK3E,cAC9G2E,KAAKrJ,OAAOuG,aAGZ,KAAK,GAFDuB,GAAOuB,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eAC9CmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAAK,CAClCmH,EAAKnH,GAAG6C,MAAQ7C,CAChB,IAAIQ,GAAMkI,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,EACjDT,GAAQb,MAAMpC,KAAS2G,EAAKnH,GAAGQ,IACR,QAAnBiD,EAAQQ,SACRkD,EAAKnH,GAAG8C,MAAQ4F,KAAK8rC,mBAAmB1xC,MACxCqE,EAAKnH,GAAG+C,SAAW2F,KAAK8rC,mBAAmBzxC,SAC3CoE,EAAKnH,GAAG2B,SAAW+G,KAAK8rC,mBAAmB7yC,SACtCtB,oBAAkBqI,KAAK8rC,mBAAmB/yC,cAC3C0F,EAAKnH,GAAGyB,WAAaiH,KAAK8rC,mBAAmB/yC,WAC7C0F,EAAKnH,GAAGgH,eAAiB0B,KAAK8rC,mBAAmBxtC,gBAErDG,EAAKnH,GAAGiC,aAAeyG,KAAK8rC,mBAAmBvyC,cAGvD+Y,WAAS,sBAAwB7T,EAAKnH,GAAG2B,SAAW,SAAU3B,EAAG0I,KAAKrJ,QACjE8H,EAAKnH,GAAG8C,OACT4F,KAAKrJ,OAAOuG,WAAWzE,KAAKgG,EAAKnH,IAGlB,QAAnByD,EAAQQ,QAAmD,MAA/ByE,KAAK6rC,yBACjC7rC,KAAKrJ,OAAOqjB,eAAgBle,cAAgBQ,eAAgB0D,KAAK6rC,0BAA4B,GAC7F7rC,KAAK6rC,uBAAyB,OAGtCH,EAAKzqC,UAAUsuC,YAAc,SAAU9wC,EAAMwG,EAAM9M,GAC/C,IAAK,GAAI6B,GAAI,EAAGA,EAAIgG,KAAKrJ,OAAOm5B,cAAct4B,OAAQwC,IAAK,CACvD,GAAIw1C,GAAQr3C,EAAQ6B,GAChBG,EAAQkE,WAAS,sBAAwBmxC,EAAMv2C,SAAW,SAAU+G,KAAKrJ,OAE7E,IADA64C,EAAMr1C,MAAQA,GACTxC,oBAAkB63C,EAAMz2C,YAAa,CACtC,GAAI+lC,GAAczgC,WAAS,sBAAwBmxC,EAAMz2C,WAAWE,SAAW,SAAU+G,KAAKrJ,OAC9F64C,GAAMz2C,WAAWoB,MAAQ2kC,GAIjC,IAAK,GADDzzB,IAAS,EACJ9O,EAAI,EAAGA,EAAIyD,KAAKrJ,OAAOkI,UAAUrH,OAAQ+E,IAAK,CAC9C0I,EAAK1I,GAAGgJ,UAAUC,SAAS,gBAC5B6F,GAEJ,IAAIokC,GAAQt3C,EAAQkT,GAChBlR,EAAQs1C,EAAMt1C,MACdC,EAAQq1C,EAAMr1C,MACduE,EAAMsG,EAAK1I,EACV5E,qBAAkB83C,EAAM12C,cACzBoB,EAAQkE,WAAS,sBAAwBoxC,EAAM12C,WAAWE,SAAW,SAAU+G,KAAKrJ,QAExF,IAAI+4C,GAAW/wC,EAAIe,MAAMM,KAAKrJ,OAAOyI,gBACrC,KAAKzH,oBAAkB+3C,GAAW,CAC9B,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAASnqC,UAAU/N,OAAQm4C,IAAK,CAChD,GAAIz1C,GAAQw1C,EAASnqC,UAAUoqC,GAG3Bv/B,EAASlW,EAAMqM,MAFN,mBAGTyQ,EAAU9c,EAAMqM,MAFN,wBAGA,OAAV6J,GACA/F,eAAaqlC,GAAWx1C,GAEb,MAAX8c,GACA3M,eAAaqlC,GAAWx1C,GAG3B+K,EAAK1I,GAAGgJ,UAAUC,SAAS,eAI5B4H,YAAUsiC,GAAW,uBAAyBv1C,EAAQ,QAAUC,GAHhEgT,YAAUsiC,GAAW,iBAAmBv1C,EAAQ,QAAUC,MAQ1EsxC,EAAKzqC,UAAUgrC,SAAW,SAAUjpC,GAChC,GAAImqB,GACAhzB,EAAQ6F,KAAK9E,YACb/C,EAAU6H,KAAKrJ,OAAOiB,KAAK6F,uBACO,WAAlCuC,KAAKrJ,OAAOmF,aAAaC,OACzB5B,EAAQ6F,KAAK+rC,gBAAgBvC,iBAC7BxpC,KAAK7E,cAAgB6E,KAAK+rC,gBAAgBtC,oBACtCzpC,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACvDwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAKya,gBAAgBjjB,UACtDW,EAAU6H,KAAK+rC,gBAAgBxC,mBAGvC,IAAItkC,GAAOjF,KAAKrJ,OAAOiB,KAAKk4B,cACxB8f,EAAiB3qC,EAAKzN,QAAUyN,EAAK,GAAGmE,aAAa,iBAAmB,EACxEymC,EAAgB5qC,EAAKzN,QAAUyN,EAAKA,EAAKzN,OAAS,GAAG4R,aAAa,iBAAmB,EACrF0mC,EAAc9vC,KAAK7E,eAAiBy0C,GAAkB5vC,KAAK7E,eAAiB00C,EAC5EE,EAAmB/vC,KAAKrJ,OAAOyH,sBAAwB4B,KAAK9E,aAAe,GAA+B,OAA1B8E,KAAK2rC,gBACzF,IAAsC,WAAlC3rC,KAAKrJ,OAAOmF,aAAaC,OACuB,UAA5CiE,KAAKrJ,OAAOmF,aAAaQ,eACzB6wB,EAAW,UAEuC,UAA5CntB,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAClF0D,KAAK7E,eAAiB,GAAK40C,IAAqBD,IACpD3iB,EAAW,SACNx1B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,WACf,UAAlC4G,KAAKrJ,OAAOmF,aAAaC,OAAqBiE,KAAKrJ,OAAOsF,kBAAkB+D,KAAKsQ,cAAc9Y,OAAS,GACrGwI,KAAKrJ,OAAOsF,kBAAkB+D,KAAKya,gBAAgBjjB,SACtD2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CwI,KAAKrJ,OAAOmF,aAAaQ,iBAEzBnC,GADsB6F,KAAK+rC,gBAAgBrC,uBAK/CvvC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,UAIpDwI,KAAK7E,eAAiB,GAAK40C,IAAqBD,IAC7C31C,GAAsD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,gBACY,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,iBAA8B,CAC1DnC,GAAS8K,EAAKzN,SACd2C,EAAQ8K,EAAKzN,OAAS,EAE1B,IAAIiK,GAAI,OACJuuC,EAAehwC,KAAKrJ,OAAOiB,KAAK8d,cAAcjU,GAAG,GACjDwuC,EAAkB7X,SAAS8X,aAC/BjrC,GAAK9K,EAAQ,GAAGgzB,GAAUloB,EAAK,IAC/BqN,WAAS,aAAcnY,EAAQ,EAAG6F,KAAK+rC,gBACvC,IAAI5B,GAA6D,UAA5CnqC,KAAKrJ,OAAOmF,aAAaQ,eAA6BnC,EAAQA,EAAQ,CAK3F,IAJsC,UAAlC6F,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKrJ,OAAOiB,KAAK8d,cAAcjU,GAAG3E,OAAO,EAAG,GAC5CkD,KAAKrJ,OAAOiB,KAAK8d,cAAcjU,GAAG3E,OAAOqtC,EAAgB,EAAG6F,IAE5DhwC,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,cAAe,CACvF,GAAI6jB,GAActyB,KAAKrJ,OAAOyV,qBAE1B+jC,EAAqBnwC,KAAKrJ,OAAOiB,KAAKkd,gBAAgB,EAC1Dwd,GAAYn4B,EAAQ,GAAGgzB,GAAUmF,EAAY,IACP,UAAlCtyB,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKrJ,OAAOiB,KAAK8d,cAAmB,WAAE5Y,OAAO,EAAG,GAChDkD,KAAKrJ,OAAOiB,KAAK8d,cAAmB,WAAE5Y,OAAOqtC,EAAgB,EAAGgG,IAEpE79B,WAAS,aAAcnY,EAAQ,EAAG6F,KAAK+rC,iBAE3C,GAAsC,QAAlC/rC,KAAKrJ,OAAOmF,aAAaC,MAAoD,SAAlCiE,KAAKrJ,OAAOmF,aAAaC,KAAiB,CAErF,IAAK,GADDq0C,GAASpwC,KAAKrJ,OAAOiB,KAAKkc,kBAAkBpO,iBAAiB,gBACxDpO,EAAI,EAAGA,EAAI84C,EAAO54C,OAAQF,IAC/B84C,EAAO94C,GAAGiqB,QAEdjP,YAAS,gBAAkBtS,KAAKrJ,OAAOiB,KAAKoE,WAAW+yC,SAEvDgB,IACA/vC,KAAK2rC,iBAAmB,MAE5BsE,EAAgBI,UAsB5B3E,EAAKzqC,UAAUymB,UAAY,SAAU1kB,GACjC,GAAyB,YAArBA,EAAKnD,aAA6BG,KAAKqtC,UAEvC,YADArqC,EAAKmD,QAAS,EAGlB,IAAsC,SAAlCnG,KAAKrJ,OAAOmF,aAAaC,MAAwC,cAArBiH,EAAKnD,YAEjD,YADAmD,EAAKmD,QAAS,EAGlB,IAAInG,KAAK6sC,oBAAsB7sC,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,qBACrExF,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,uBAAyBxF,KAAK6sC,kBAAkBtnC,UAAUC,SAAS,YAG7G,MAFAxC,GAAKmD,QAAS,OACdnG,KAAK6sC,kBAAoB,KAG7B,IAAyB,WAArB7pC,EAAKnD,YAEL,IAAK,GADDpB,GAAOuE,EAAKvE,KACPnH,EAAI,EAAGA,EAAImH,EAAKjH,OAAQF,IAAK,CAClC0I,KAAKmrC,eAAe1sC,EAAKnH,GAAG2B,SAE5B,KAAK,GADD+xC,GAAS3xC,EAAoBoF,EAAKnH,IAC7BiK,EAAI,EAAGA,EAAIypC,EAAOxzC,OAAQ+J,IAC/BvB,KAAKmrC,eAAeH,EAAOzpC,GAAGtI,SAElC+J,GAAKvE,KAAOA,EAAKjF,OAAOwxC,GAGhC,GAAyB,QAArBhoC,EAAKnD,YAAuB,CAE5B,GADAG,KAAK7E,cAAgB6E,KAAKrJ,OAAOiB,KAAKssB,iBAClClkB,KAAKrJ,OAAOyH,qBAAsB,CAClC,GAAIkyC,GAAW,yBAA2BtwC,KAAK7E,cAAgB,KAC3DwD,MAAM,EACNqB,MAAK7E,eAAiB,GAAiD,QAA5C6E,KAAKrJ,OAAOmF,aAAaQ,gBACR,WAA5C0D,KAAKrJ,OAAOmF,aAAaQ,gBACzB0D,KAAK2rC,iBAAmB3rC,KAAK7E,cAAc4J,WAC3CpG,EAAMqB,KAAKrJ,OAAOg5B,aAAa3nB,cAAcsoC,GAC7CtwC,KAAK9E,YAAcyD,EAAMA,EAAIkI,SAAW,GAGpC7G,KAAK2rC,kBAA8C,OAA1B3rC,KAAK2rC,kBAC9B2E,EAAW,yBAA2BtwC,KAAK2rC,iBAAmB,KAC9DhtC,EAAMqB,KAAKrJ,OAAOg5B,aAAa3nB,cAAcsoC,GAC7CtwC,KAAK9E,YAAcyD,EAAMA,EAAIkI,SAAW,GAGxC7G,KAAK9E,YAAc,MAK3B8E,MAAK9E,YAAc8E,KAAKrJ,OAAOiB,KAAKssB,kBAAoB,EAAIlkB,KAAKrJ,OAAOiB,KAAKssB,iBAAmB,CAEpGlkB,MAAK3E,aAAe2E,KAAKrJ,OAAOiP,qBAAqB,GAEzD5C,EAAOhD,KAAKuwC,aAAavtC,IAU7B0oC,EAAKzqC,UAAUurC,wBAA0B,SAAUxpC,GACX,OAAhChD,KAAK6rC,yBACL7rC,KAAK6rC,uBAAyB7rC,KAAKrJ,OAAOmF,aAAaQ,iBAG/DovC,EAAKzqC,UAAUsvC,aAAe,SAAUvtC,GACpC,GAAI9I,GAAQ8I,EAAKvE,IACjB,IAAoB,QAAhBuE,EAAKzH,OAAkB,CACvB,GAAIzD,GAAMkI,KAAKrJ,OAAOiB,KAAK4D,0BAA0B,GACjD2xB,EAAW,IACfjzB,GAAMG,SAAW1C,oBAAkBuC,EAAMG,UAAYgC,YAAW2G,EAAKvE,MAAQvE,EAAMG,QACnF,IAAI8b,GAAcnW,KAAKrJ,OAAOiB,KAAK6F,wBAC/BtD,EAAQ6F,KAAK9E,WACjBhB,GAAMjB,SAAWsa,SAAOvT,KAAKrJ,OAAOsZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwBpY,EAAMjB,SAAUiB,EAAO8F,KAAKrJ,OAC7D,IAAIyD,GAAQ,EAERyC,MAAY,GACZyB,MAAiB,GACjBvF,MAAa,GACb6D,MAAkB,GAClBmzC,EAAmB/vC,KAAKrJ,OAAOyH,sBAAwB4B,KAAK9E,aAAe,GAA+B,OAA1B8E,KAAK2rC,iBACrF1mC,EAAOjF,KAAKrJ,OAAOkI,UACnB+wC,EAAiB3qC,EAAKzN,QAAUyN,EAAK,GAAGmE,aAAa,iBAAmB,EACxEymC,EAAgB5qC,EAAKzN,QAAUyN,EAAKA,EAAKzN,OAAS,GAAG4R,aAAa,iBAAmB,EACrF0mC,EAAc9vC,KAAK7E,eAAiBy0C,GAAkB5vC,KAAK7E,eAAiB00C,CAUhF,IATI15B,EAAY3e,SACA2e,EAAYnW,KAAK9E,aAAaf,MAC1C0C,EAAYsZ,EAAYnW,KAAK9E,aAAa8E,KAAKrJ,OAAOkG,WACtDD,EAAkBuZ,EAAYnW,KAAK9E,aAAa8E,KAAKrJ,OAAOiG,iBACxDuZ,EAAYnW,KAAK9E,aAAanC,aAC9BuF,EAAiB6X,EAAYnW,KAAK9E,aAAanC,WAAWE,UAE9DF,EAAaod,EAAYnW,KAAK9E,aAAanC,YAEC,QAA5CiH,KAAKrJ,OAAOmF,aAAaQ,gBAA4B6Z,EAAY3e,OAAQ,CAEzE,GADA4C,EAAQ+b,EAAYnW,KAAK9E,aAAad,MACU,UAA5C4F,KAAKrJ,OAAOmF,aAAaQ,eACzB6wB,EAAW,SACXhzB,EAAQgc,EAAYnW,KAAK9E,aAAaf,UAErC,IAAgD,UAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA4B,CAC1D6wB,EAAW,OACX,IAAIsd,GAAmBpxC,EAAoB8c,EAAYnW,KAAK9E,cAAc1D,OACtEyyC,EAAmB9zB,EAAYnW,KAAK9E,aAAaf,KACrDA,GAASswC,EAAmB,EAAMR,EAAmBQ,QAEpD,IAAgD,UAA5CzqC,KAAKrJ,OAAOmF,aAAaQ,eAA4B,CAC1D6wB,EAAW,SACNntB,KAAK7E,eAAiB,GAAK40C,IAAqBD,IACjD51C,EAAMnB,WAAasD,YAAW8Z,EAAYnW,KAAK9E,cAC/ChB,EAAMoE,eAAiBpE,EAAMnB,WAAWE,eACjCiB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAWiH,KAAKrJ,OAAOoG,cAExC,IAAIyzC,GAAoBn3C,EAAoB8c,EAAYnW,KAAK9E,cAAc1D,OACvEi5C,EAAoBt6B,EAAYnW,KAAK9E,aAAaf,KAClD6F,MAAKrJ,OAAOiB,KAAKssB,kBAAoB,IACrChqB,EAAME,MAAQA,EAAQ,GAE1BD,EAASq2C,EAAoB,EAAMC,EAAoBD,IACnDxwC,KAAK/E,kBACLf,EAAMG,SAAS2F,KAAKrJ,OAAOiG,iBAAmB1C,EAAM8F,KAAKrJ,OAAOiG,iBAAmBC,EAC9ElF,oBAAkBuC,EAAMnB,aACzBiE,EAAgBlF,EAAKoC,EAAMnB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBf,IAsB7F,GAlBgD,UAA5C8F,KAAKrJ,OAAOmF,aAAaQ,gBAA0E,UAA5C0D,KAAKrJ,OAAOmF,aAAaQ,kBAC3E0D,KAAK7E,eAAiB,GAAK40C,IAAqB31C,GAAS01C,IAC1D51C,EAAMoE,eAAiBA,EACvBpE,EAAMnB,WAAasD,YAAWtD,SACvBmB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAWiH,KAAKrJ,OAAOoG,eAExC7C,EAAME,MAAQA,EACV4F,KAAK/E,kBACLf,EAAMG,SAAS2F,KAAKrJ,OAAOiG,iBAAmB1C,EAAM8F,KAAKrJ,OAAOiG,iBAAmBA,EAC9EjF,oBAAkBuC,EAAMnB,aACzBiE,EAAgBlF,EAAKoC,EAAMnB,WAAY,MAAOiH,KAAKrJ,OAAQqJ,KAAK/E,gBAAiBf,KAI7E,MAAZizB,IAAqBntB,KAAK7E,eAAiB,GAAK40C,IAAqBD,IACrE9sC,EAAK7I,MAAqB,WAAbgzB,EAAwBhzB,EAAQA,EAAQ,GAET,WAA5C6F,KAAKrJ,OAAOmF,aAAaQ,eAA6B,CACtD,GAAI1F,GAAcoJ,KAAKrJ,OAAOiB,KAAKhB,qBAAsBC,eACrDmJ,KAAKrJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOsE,KAAKrJ,OAAOiB,KAAKhB,UACnEoM,GAAK7I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAElBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB6I,EAAKzH,SACLyE,KAAK8rC,oBAAuB1xC,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoB,SAAUH,EAAMG,SAAUiE,eAAgB3G,oBAAkBuC,EAAMnB,gBAAcugB,GAAYpf,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArByJ,EAAKnD,YAEL,IAAK,GADD6wC,GAAgB1tC,EAAKvE,KAChBnH,EAAI,EAAGA,EAAIo5C,EAAcl5C,OAAQF,IACtC,GAAIo5C,EAAcp5C,GAAGyB,WAAY,CACzBA,EAAaC,EAAcgH,KAAKrJ,OAAQ+5C,EAAcp5C,GAAGyB,WAAWE,SACxE,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAIolC,GAAa3lC,EAAWQ,aAAaiF,QAAQkyC,EAAcp5C,GAC/DyB,GAAWQ,aAAauD,OAAO4hC,EAAY,IAK3D,MAAO17B,IAMX0oC,EAAKzqC,UAAUisB,UAAY,SAAUzuB,EAAMtE,EAAOgzB,GAC9CntB,KAAK6rC,uBAAyB7rC,KAAKrJ,OAAOmF,aAAaQ,eACnDmC,GACItE,GAAS,GACT6F,KAAK7E,cAAgBhB,EACrB6F,KAAK9E,YAAcf,IAGnB6F,KAAK7E,cAAgB6E,KAAKrJ,OAAOutB,iBACjClkB,KAAK9E,YAAc8E,KAAKrJ,OAAOutB,kBAE/BiJ,GACAntB,KAAKrJ,OAAOqjB,eAAgBle,cAAgBQ,eAAgB6wB,KAAc,GAE9EntB,KAAKrJ,OAAOiB,KAAKoE,WAAWkxB,UAAUzuB,EAAMtE,IAG5C6F,KAAKrJ,OAAOiB,KAAKoE,WAAWkxB,UAAUzuB,EAAMtE,IAOpDuxC,EAAKzqC,UAAU0vC,iBAAmB,WAC9B,MAAO3wC,MAAKrJ,OAAOiB,KAAKoE,WAAW20C,oBAKvCjF,EAAKzqC,UAAU2vC,YAAc,WACzB5wC,KAAKrJ,OAAOiB,KAAKoE,WAAW40C,eAEhClF,EAAKzqC,UAAUmrC,aAAe,SAAU/uC,GAC/B1F,oBAAkB0F,EAAE2F,KAAKnD,cACY,WAAlCxC,EAAE2F,KAAKnD,YAAYkF,YAA6D,SAAlC1H,EAAE2F,KAAKnD,YAAYkF,aAC3B,UAAlC/E,KAAKrJ,OAAOmF,aAAaC,MAAsD,cAAlCsB,EAAE2F,KAAKnD,YAAYkF,cACxE/E,KAAKuvC,YAAYvvC,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOkI,UAAWmB,KAAKrJ,OAAO8G,0BAC7EuC,KAAKrJ,OAAOqI,YAAcgB,KAAKrJ,OAAOsI,oBAAsBe,KAAKrJ,OAAO8X,gBACpEzO,KAAKrJ,OAAOiB,KAAKhB,WAAWY,SAAWwI,KAAKrJ,OAAOyV,qBAAqB5U,QACxEwI,KAAKuvC,YAAYvvC,KAAKrJ,OAAOiB,KAAKhB,WAAYoJ,KAAKrJ,OAAOyV,qBAAsBpM,KAAKrJ,OAAO8G,2BAS5GiuC,EAAKzqC,UAAUysB,SAAW,SAAU7mB,EAAUxC,GACJ,SAAlCrE,KAAKrJ,OAAOmF,aAAaC,MAAqD,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,OAC/B,UAAlCiE,KAAKrJ,OAAOmF,aAAaC,OACzBiE,KAAKqtC,WAAY,EACjBrtC,KAAKutC,mBAAmB,UAE5BvtC,KAAKrJ,OAAOiB,KAAKoE,WAAW0xB,SAAS7mB,EAAUxC,KAGhDqnC,KCzyBPmF,GAA+B,WAC/B,QAASA,GAAcl6C,GACnB8L,OAAKC,OAAOouC,iBACZ9wC,KAAKrJ,OAASA,EAiBlB,MAXAk6C,GAAc5vC,UAAU4B,cAAgB,WACpC,MAAO,iBAOXguC,EAAc5vC,UAAU8F,QAAU,aAG3B8pC,KCjBPE,GAA2B,WAC3B,QAASA,GAAUp6C,GACf8L,OAAKC,OAAOsuC,aACZhxC,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAwGT,MA/FA2pC,GAAU9vC,UAAU4B,cAAgB,WAChC,MAAO,aAEXkuC,EAAU9vC,UAAUmG,iBAAmB,WACnCpH,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKixC,aAAcjxC,MAClDA,KAAKrJ,OAAO0Q,GAAG,kBAAmBrH,KAAKkxC,gBAAiBlxC,MACxDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,yBAA0BrH,KAAKmxC,oBAAqBnxC,MACxEA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKoxC,eAAgBpxC,MACtDA,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAKqxC,kBAAmBrxC,MAC5DA,KAAKrJ,OAAO0Q,GAAG,iBAAkBrH,KAAKsxC,eAAgBtxC,OAK1D+wC,EAAU9vC,UAAUyG,oBAAsB,WAClC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKixC,cACrCjxC,KAAKrJ,OAAOiR,IAAI,kBAAmB5H,KAAKkxC,iBACxClxC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKoxC,gBACvCpxC,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAKqxC,mBAC1CrxC,KAAKrJ,OAAOiR,IAAI,iBAAkB5H,KAAKsxC,gBACvCtxC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,yBAA0B5H,KAAKmxC,uBAExDJ,EAAU9vC,UAAUkwC,oBAAsB,SAAUnuC,GAEhDA,EAAY,SAAI,GAEpB+tC,EAAU9vC,UAAUgwC,aAAe,WAI/B,IAAK,GAHDM,GAAYvxC,KAAKrJ,OAAOkI,UAAUzB,OAAO,SAAUC,GACnD,OAAQA,EAAEkI,UAAUC,SAAS,iBAExBlO,EAAI,EAAGA,EAAIi6C,EAAU/5C,OAAQF,IAAK,CACvC,GAAIk6C,GAAWD,EAAUj6C,GAAG2c,uBAAuB,uBAC/Cw9B,EAAazxC,KAAKrJ,OAAOiB,KAAKsc,oBAAoBq9B,EAAUj6C,GAAG8R,aAAa,aAC5ErQ,EAAaP,YAAU,aAAcwH,KAAKrJ,OAAOiB,KAAK6F,wBAAwBnG,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBsH,KAAKrJ,OAAQ86C,EAAWhzC,KAAMuB,KAAKrJ,OAAOiB,KAAK6F,2BAC/DuC,KAAKrJ,OAAOiB,KAAK0c,gBAAgBrF,OAAOuiC,EAAS,MAI7DT,EAAU9vC,UAAUmwC,eAAiB,SAAUpuC,GAC3C,GAAI0uC,GAAmB1uC,EAAKrE,IAAIsV,uBAAuB,sBAClDtc,qBAAkB+5C,EAAiB,KACpC1xC,KAAKrJ,OAAOiB,KAAK0c,gBAAgBrF,OAAOyiC,EAAiB,KAGjEX,EAAU9vC,UAAUowC,kBAAoB,SAAUruC,GAC9C,IAAItM,EAAasJ,KAAKrJ,QAGtB,IAAK,GAAIW,GAAI,EAAGA,EAAI0L,EAAK0uB,WAAWl6B,OAAQF,IACxC0L,EAAK0uB,WAAWp6B,GAAGmD,MAAMG,QAAUoI,EAAKzH,QAGhDw1C,EAAU9vC,UAAUiwC,gBAAkB,SAAUluC,GAC5C,IAAKtG,eAAesD,KAAKrJ,OAAOod,iBAAkB,CAC9C,GAAItV,GAAOuE,EAAKvE,KACZE,EAAMqE,EAAK2uC,cAActzB,cAAcuzB,gBAEvCC,EAAgB,kBADPl6C,oBAAkB8G,EAAK1F,YAAsC0F,EAAKtE,MAA7BsE,EAAK1F,WAAWoB,OACnB,QAAUsE,EAAKrE,MAC1D03C,EAAYnzC,EAAIqJ,cAAc,IAAM6pC,GAAetsC,UACnDwsC,KAActsC,MAAM7C,KAAKkvC,GAAW10C,OAAO,SAAU40C,GAAa,MAAQA,KAAcH,IACxFI,EAAQF,EAAS,GAAGv6C,OAEpB06C,EAAc,eADDH,EAAShtC,WAAWU,MAAM,EAAGwsC,EAE9C7kC,aAAUpK,EAAK2uC,cAActzB,eAAgB6zB,KAIrDnB,EAAU9vC,UAAUqwC,eAAiB,SAAUtuC,GAC3C,GAAyB,cAArBA,EAAKnD,aAAoD,QAArBmD,EAAKnD,YAAuB,CAChE,GAAIsyC,GAASnvC,EAAKrE,IAAI+G,iBAAiB,eAAe,GAAG0D,aAAa,WAElEgpC,GADQ9iC,SAAS6iC,EAAO,IAAM,GACXptC,UACvB/B,GAAKrE,IAAI+G,iBAAiB,eAAe,GAAGwE,aAAa,UAAWkoC,GAGxE,IAAK,GADDC,GAAeryC,KAAKrJ,OAAOiB,KAAK8d,cAAc7W,UACzCvH,EAAI,EAAGA,EAAI+6C,EAAa76C,OAAQF,IACrC+6C,EAAa/6C,GAAGoI,MAAM,GAAG0wB,SAAU,CAErB53B,aAAU,cAAewH,KAAKrJ,OAAOiB,MAErC,eAAE,IAAQqN,KAAMjF,KAAKrJ,OAAOiB,KAAK8d,cAAc7W,aAOrEkyC,EAAU9vC,UAAU8F,QAAU,WAC1B/G,KAAK0H,uBAEFqpC,KCpHPtwC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAUnFuxC,GAA4C,SAAUvwC,GAEtD,QAASuwC,GAA2B37C,EAAQ47C,GACxC,GAAI/tC,GAAQzC,EAAOa,KAAK5C,KAAMrJ,EAAQ47C,IAAYvyC,IAalD,OAZAwE,GAAMguC,kBAAmB,EACzBhuC,EAAMiuC,WAAa,EACnBjuC,EAAMkuC,SAAW,EACjBluC,EAAMmuC,aAAc,EAEpBnuC,EAAM6sB,YAAc,EACpB7sB,EAAMgnC,UAAY,EAClBhnC,EAAMouC,aAAe,EACrBpuC,EAAMquC,gBAAiB,EAEvBruC,EAAMwnB,qBAAsB,EAC5BxnB,EAAM4C,mBACC5C,EAqTX,MApUA/D,IAAU6xC,EAA4BvwC,GAiBtCuwC,EAA2BrxC,UAAU6xC,kBAAoB,WACrD,MAAO,IAAI1T,IAA6Bp/B,KAAKrJ,SAEjD27C,EAA2BrxC,UAAUrC,cAAgB,SAAUzE,GAC3D,MAAO6F,MAAKrJ,OAAOm5B,cAAc1yB,OAAO,SAAUC,GAAK,MAAOiS,UAASjS,EAAE+L,aAAa,iBAAkB,KAAOjP,IAAU,IAE7Hm4C,EAA2BrxC,UAAUmG,iBAAmB,WACpDpH,KAAKrJ,OAAO0Q,G/BoDW,sB+BpDkBrH,KAAK+yC,mBAAoB/yC,MAClEA,KAAKrJ,OAAO0Q,G/BuDO,iB+BvDkBrH,KAAKgzC,cAAehzC,OAE7DsyC,EAA2BrxC,UAAU8xC,mBAAqB,SAAU/vC,GAC5DA,EAAKiwC,QACLjzC,KAAKyyC,WAAa,EAClBzyC,KAAKqxB,WAAa,EAClBrxB,KAAKwrC,SAAWxrC,KAAKrJ,OAAOmX,aAAa+2B,SAAW,GAE/C7hC,EAAKwvC,mBACVxyC,KAAKwyC,kBAAmB,IAGhCF,EAA2BrxC,UAAU+xC,cAAgB,SAAUhwC,GAC3D,GAAIm4B,GAAUn7B,KAAKrJ,OAAOg5B,aAAa3nB,cAAc,aACrD,IAAIhI,KAAK2yC,aAAe3yC,KAAKqxB,YAAc,GAAKrxB,KAAKwrC,UAAY,EAAG,CAChE,GAAIxrC,KAAKwrC,SAAWxoC,EAAKqI,MAAQrL,KAAKrJ,OAAOmX,aAAa+2B,SAAU,CAChE,GAAIqO,MAAqB/X,EAAQxC,UAAY34B,KAAKrJ,OAAOw8C,gBACrDC,EAAYF,EAAkBlzC,KAAKrJ,OAAOkI,UAAUrH,MACpD47C,GAAYpwC,EAAKqI,QACjB+nC,EAAYF,GACPlwC,EAAKqI,MAAQ6nC,IAEtBlzC,KAAKqxB,WAAa+hB,EAAYpzC,KAAKrJ,OAAOkI,UAAUrH,OACpDwI,KAAKwrC,SAAW4H,MAGhBpzC,MAAKqxB,YAAc,EACnBrxB,KAAKwrC,UAAY,CAErBxrC,MAAK2yC,aAAc,EAEnB3yC,KAAKgsB,sBACLhsB,KAAKqxB,WAAa,EAClBrxB,KAAKwrC,SAAWxrC,KAAKrJ,OAAOmX,aAAa+2B,SAAW,GAExD7hC,EAAKquB,WAAarxB,KAAKqxB,WACvBruB,EAAKwoC,SAAWxrC,KAAKwrC,UAEzB8G,EAA2BrxC,UAAUgrB,cAAgB,SAAU1wB,GAC3D,GAAIiJ,GAAQxE,IACNA,MAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACxC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAgBroC,EAAgB4I,KAAKrJ,QAiB1EoL,EAAOd,UAAUgrB,cAAcrpB,KAAK5C,KAAM,OAhB1CA,KAAKrJ,OAAO4E,GAAQ,aAAcyE,KAAKqzC,YAAarzC,MAEpDA,KAAK2U,GAAK,WACNnQ,EAAM8uC,UAAUC,SAAS,SAAUC,GAAc,MAAOhvC,GAAMivC,gBAAgBD,KAC9EhvC,EAAM7N,OAAOiR,IAAI,gBAAiBpD,EAAMmQ,KAE5C3U,KAAKrJ,OAAO0Q,GAAG,gBAAiBrH,KAAK2U,GAAI3U,MACzCA,KAAKrJ,OAAOyQ,iB/B9EI,iB+B8EoCpH,KAAK0zC,iBAAiB/7B,KAAK3X,OAC/EA,KAAKrJ,OAAO4E,GAAQ,mCAAoCyE,KAAK0nB,UAAW1nB,MACxEA,KAAKrJ,OAAO4E,GAAQ,kCAAmCyE,KAAKisC,SAAUjsC,MACtEA,KAAKrJ,OAAO4E,GAAQ,8BAA+ByE,KAAK2zC,mBAAoB3zC,MAC5EA,KAAKrJ,OAAO4E,GAAQ,aAAcyE,KAAK4zC,iBAAkB5zC,MACzDA,KAAKrJ,OAAO4E,GAAQ,mBAAoByE,KAAK6zC,QAAS7zC,MACtDA,KAAKrJ,OAAO4E,GAAQ,6BAA8ByE,KAAK8zC,WAAY9zC,QAM3EsyC,EAA2BrxC,UAAUoyC,YAAc,SAAUh2C,GACzD0E,EAAOd,UAAUoyC,YAAYzwC,KAAK5C,KAAM3C,GAClC2C,KAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACxC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAgBroC,EAAgB4I,KAAKrJ,UACrEgB,oBAAkB0F,EAAEgO,SACrBrL,KAAKurC,aAAeluC,EAAEgO,MACtBhN,WAAS,aAAc2B,MAAM+zC,iBAAiB/zC,KAAKrJ,OAAOw8C,eAAiB91C,EAAEgO,MAAO,WAGlF1T,oBAAkB0F,EAAEwC,cAA6C,gBAA7BxC,EAAEwC,YAAYkF,YAAiC/E,KAAKgsB,uBAC1FhsB,KAAKg0C,SAASrb,UAAY,EAC1B34B,KAAKgsB,qBAAsB,KAIvCsmB,EAA2BrxC,UAAUirB,YAAc,WAC/CnqB,EAAOd,UAAUirB,YAAYtpB,KAAK5C,MAC5BA,KAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACxC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAgBroC,EAAgB4I,KAAKrJ,UAC1E0H,WAAS,WAAY2B,MAAMD,QAAQk0C,eAAgB,EACnDj0C,KAAKszC,UAAY,GAAIY,IAAyB71C,WAAS,WAAY2B,MAAMiQ,QAAS5R,WAAS,WAAY2B,MAAMD,SAC7GC,KAAKg0C,SAAWh0C,KAAKm0C,WAAWnqC,aAGxCsoC,EAA2BrxC,UAAUmzC,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,MAAKx0C,MAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACvC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAeroC,EAAgB4I,KAAKrJ,QACrEqJ,KAAK6yC,gBACL7yC,KAAK6yC,gBAAiB,EACf7yC,KAAK4yC,eAGZ5yC,KAAK4yC,aAAe7wC,EAAOd,UAAUmzC,cAAcxxC,KAAK5C,KAAMq0C,EAAMC,EAASC,EAAMC,GAC5EzyC,EAAOd,UAAUmzC,cAAcxxC,KAAK5C,KAAMq0C,EAAMC,EAASC,EAAMC,IAInEzyC,EAAOd,UAAUmzC,cAAcxxC,KAAK5C,KAAMq0C,EAAMC,EAASC,EAAMC,IAG9ElC,EAA2BrxC,UAAUymB,UAAY,SAAUrqB,GACvD,GAAIizC,GAAW,yBAA2BjzC,EAAElD,MAAQ,KAChDA,EAAQ6F,KAAKrJ,OAAOg5B,aAAa3nB,cAAcsoC,GAAUzpC,SACzD8B,EAAU3I,KAAKrJ,OAAO8G,wBAAwBtD,EAClDkD,GAAEoB,KAAOkK,GAEb2pC,EAA2BrxC,UAAUgrC,SAAW,SAAUjpC,GACtD,GAEI8pC,IAAYxwC,eAAgB0D,KAAKy0C,YAAav5C,YAAa8E,KAAK9E,YAAa6xC,aAAc/sC,KAAK+sC,aACpG/sC,MAAKrJ,OAAOyY,OAAO,mBAAoB09B,GACvC9sC,KAAKy0C,YAAc3H,EAAQxwC,eAC3B0D,KAAK9E,YAAc4xC,EAAQ5xC,YAC3B8E,KAAK+sC,aAAeD,EAAQC,YAC5B,IAAI9nC,GAAOjF,KAAKrJ,OAAOkI,UACnB+wC,EAAiB3qC,EAAKzN,QAAUyN,EAAK,GAAGmE,aAAa,iBAAmB,EACxEymC,EAAgB5qC,EAAKzN,QAAUyN,EAAKA,EAAKzN,OAAS,GAAG4R,aAAa,iBAAmB,EACrFsrC,EAAc10C,KAAKrJ,OAAOutB,kBAAoB0rB,GAAkB5vC,KAAKrJ,OAAOutB,kBAAoB2rB,CACzE,SAArB7vC,KAAKy0C,aAA8C,WAArBz0C,KAAKy0C,cACrCz0C,KAAU,OAAI,GAEO,QAArBA,KAAKy0C,aAA8C,WAArBz0C,KAAKy0C,cAChCz0C,KAAK9E,cAAqC,IAAtB8E,KAAK9E,cAA0D,IAAlC8E,KAAKrJ,OAAOutB,kBAA4BwwB,IAC5F3yC,EAAOd,UAAmB,eAAE2B,KAAK5C,KAAMgD,IAG/CsvC,EAA2BrxC,UAAU0zC,iBAAmB,WAEpD5yC,EAAOd,UAAqB,YAAE2B,KAAK5C,OAEvCsyC,EAA2BrxC,UAAU2yC,iBAAmB,WAGpD5zC,KAAKrJ,OAAOyY,OAAO,uBACO,QAArBpP,KAAKy0C,aAA8C,WAArBz0C,KAAKy0C,cAA6Bz0C,KAAU,OAC3E+B,EAAOd,UAAqB,YAAE2B,KAAK5C,OAG3CsyC,EAA2BrxC,UAAU0yC,mBAAqB,SAAU3wC,GAChE,GACIm4B,GAAUn7B,KAAKrJ,OAAOg5B,aAAa3nB,cAAc,aACjDhI,MAAU,OAAKm7B,EAAQnzB,cAAc,iBACrChI,KAAK2yC,aAAc,IAG3BL,EAA2BrxC,UAAU6yC,WAAa,SAAU9wC,GAExDjB,EAAOd,UAAoB,WAAE2B,KAAK5C,KAAMgD,IAE5CsvC,EAA2BrxC,UAAU2zC,cAAgB,WACjD,GACIzZ,GAAUn7B,KAAKrJ,OAAOg5B,aAAa3nB,cAAc,aACjDhI,MAAU,QAAMm7B,EAAQnzB,cAAc,iBACtChI,KAAKrJ,OAAO0zB,QAAS,EACrBrqB,KAAKrJ,OAAOu2B,cAGpBolB,EAA2BrxC,UAAU4yC,QAAU,SAAUp1C,GAErDsD,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMvB,IAEhD6zC,EAA2BrxC,UAAUyyC,iBAAmB,SAAU1wC,GAC9D,GAAyB,QAArBA,EAAKnD,YAAuB,CAC5B,GAAIitC,IAAYxwC,eAAgB0D,KAAKy0C,YAAav5C,YAAa8E,KAAK9E,YAAa6xC,aAAc/sC,KAAK+sC,aACpG/sC,MAAKrJ,OAAOyY,OAAO,mBAAoB09B,GACvC9sC,KAAKy0C,YAAc3H,EAAQxwC,eAC3B0D,KAAK9E,YAAc4xC,EAAQ5xC,YAC3B8E,KAAK+sC,aAAeD,EAAQC,aAGhChrC,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMgD,IAEhDsvC,EAA2BrxC,UAAUwyC,gBAAkB,SAAUD,GAC7D,GAAIe,GAAOf,EAAWqB,SAElB1Z,EAAUn7B,KAAKrJ,OAAOg5B,aAAa3nB,cAAc,cACjD8pB,EAFY,GAEe9xB,KAAKrJ,OAAOw8C,eACvC2B,EAAYtB,EAAWuB,OAAOrc,IAAM14B,KAAKyyC,WAAc,EACvDuC,EAAcxB,EAAWuB,OAAOrc,IAAM14B,KAAKyyC,WAAc3gB,CAC7D,IAAIgjB,EAAU,CACV,GAAIG,KAAYj1C,KAAKrJ,OAAOwrB,OAAOpd,WAAWvG,QAAQ,KAAO,EAAIwB,KAAKrJ,OAAOwrB,OACzEniB,KAAKrJ,OAAOsZ,QAAQ0rB,wBAAwBxZ,QAC5ChoB,KAAYghC,EAAQxC,UAAY34B,KAAKrJ,OAAOw8C,gBAC1C3/B,KAAKC,KAAKwhC,EAAUj1C,KAAKrJ,OAAOw8C,gBAChCnzC,KAAKrJ,OAAOkI,UAAUrH,MAI5B,IAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9B6F,KAAKqxB,WAAal3B,EAClB6F,KAAKwrC,SAAWrxC,EAAQ6F,KAAKrJ,OAAOkI,UAAUrH,OAC1CwI,KAAKwrC,SAAWxrC,KAAKurC,aAAc,CACnC,GAAI2J,GAAUl1C,KAAKurC,aAAe,EAC9B4J,EAAUn1C,KAAKwrC,SAAW0J,CAC9Bl1C,MAAKwrC,SAAW0J,EAChBl1C,KAAKqxB,WAAarxB,KAAKqxB,WAAa8jB,EAGxC,GAAIC,GAAQ5hC,KAAKC,KAAK+/B,EAAWuB,OAAOrc,IAAM14B,KAAKrJ,OAAOw8C,eAC1DiC,IAAgBp1C,KAAKrJ,OAAOmX,aAAa+2B,QACzC,IAAIwQ,GAAa,CAMjB,IALK19C,oBAAkBqI,KAAKrJ,OAAOkI,UAAUu2C,MAGzCC,GAFWr1C,KAAKrJ,OAAOg5B,aAAajqB,iBAAiB,iBAAiB0vC,GACjEptC,cAAc,MAAMoB,aAAa,UAGvB,IAAfisC,EACAr1C,KAAKyyC,WAAae,EAAWuB,OAAOrc,QAEnC,CACD,GAAIvW,GAASniB,KAAKrJ,OAAOw8C,cACzBnzC,MAAKyyC,WAAce,EAAWuB,OAAOrc,IAlC7B,GAkCgDvW,EAAU,EAC9DqxB,EAAWuB,OAAOrc,IAnCd,GAmCiCvW,EAAU,GAAK,OAG3D,IAAI6yB,EAAY,CACjB,GAAI9B,MAAqB/X,EAAQxC,UAAY34B,KAAKrJ,OAAOw8C,gBACrDC,EAAYF,EAAkBlzC,KAAKrJ,OAAOkI,UAAUrH,MACpD47C,GAAYpzC,KAAKurC,eACjB6H,EAAYF,GACPlzC,KAAKurC,aAAe2H,IAE7BlzC,KAAKqxB,WAAa+hB,EAAYpzC,KAAKrJ,OAAOkI,UAAUrH,OACpDwI,KAAKwrC,SAAW4H,EACZI,EAAWuB,OAAOrc,IAAO14B,KAAKrJ,OAAOw8C,eAAiBnzC,KAAKurC,aAC3DvrC,KAAKyyC,WAAazyC,KAAKo0C,cAAcZ,EAAWuB,OAAOrc,IAAKyC,EAAQQ,wBAAwBxZ,QAG5FniB,KAAKyyC,WAAae,EAAWuB,OAAOrc,IAG5C,GAAKsc,GAAexB,EAAWuB,OAAOrc,IAAO14B,KAAKrJ,OAAOw8C,eAAiBnzC,KAAKurC,gBAC5D,CACf,GAAI+J,GAAWj3C,WAAS,kBAAmB2B,MAAMgC,MAAMhC,MAAOwzC,EAAW57B,UAAW28B,EAAMf,EAAWuB,QACrG/0C,MAAKu1C,aAAeD,CACpB,IAAIt/B,GAAOs/B,EAASz/B,WAAay/B,EAASE,SAAWF,EAASv/B,SAASC,KAAOs/B,EAASt/B,IACvFhW,MAAKrJ,OAAOqjB,eAAgBlM,cAAgBgI,YAAaE,KAAU,GACnEs/B,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFz1C,KAAKrJ,OAAOyY,OAAOkmC,EAASG,OAAS51C,YAAa,gBAAiBwyC,aAAcmB,EAAWnB,iBAGpGC,EAA2BrxC,UAAUy0C,cAAgB,SAAUr0C,EAAQs0C,EAAUt4C,GAC7E,GAAK2C,KAAKrJ,OAAOC,qBAAsBC,oBAAyDyiB,KAA1CtZ,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KACvC,KAA1Cz/B,KAAKrJ,OAAOC,WAAWA,WAAW6oC,KAAeroC,EAAgB4I,KAAKrJ,QACrE0H,WAAS,mBAAoBhB,KAC7B2C,KAAK6yC,gBAAiB,GAE1B9wC,EAAOd,UAAUy0C,cAAc9yC,KAAK5C,KAAMqB,EAAQs0C,EAAUt4C,OAE3D,CACD,GAAIk3C,GAAOl3C,EAAEu4C,YAAYC,cAAoD,MAApCx4C,EAAEu4C,YAAYC,aAAaC,MAChEz3C,WAAS,cAAe2B,MAAMgW,MAAQ3X,WAAS,cAAe2B,MAAMgW,OAAS3Y,EAAEu4C,YAAY5/B,KAC3F3X,WAAS,cAAe2B,MAAQ3C,EAAEu4C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAUj2C,KAAKk2C,gBAAgBH,EACnC/1C,MAAKm2C,WAAWC,gBAAgB,KAAO/vC,UAAQgwC,MAA8B,SAAtBhwC,UAAQkuC,KAAK+B,OACpEj1C,EAASrB,KAAKrJ,OAAO4S,cAAc,UAC5BoB,YAAYgrC,EAEnB31C,MAAKu2C,WAAWvuC,cAAc,SAAgB,YAAE3G,GAC3CrB,KAAKwyC,kBAAwC,IAApBxyC,KAAKyyC,WAI/BzyC,KAAKwyC,kBAAmB,EAHxBn0C,WAAS,aAAc2B,MAAMw2C,YAAYP,EAASj2C,KAAKyyC,YAK3DngC,WAAS,WAAYtS,KAAKu1C,aAAev1C,KAAKu1C,aAAehB,EAAMv0C,KAGnE+B,GAAOd,UAAmB,UAAE2B,KAAK5C,KAAM3C,EAEnC2C,MAAU,QAAMA,KAAKrJ,OAAOg5B,aAAa3nB,cAAc,cAAcA,cAAc,gBACxD,QAArBhI,KAAKy0C,aAA8C,WAArBz0C,KAAKy0C,cACjCz0C,KAAK+sC,cAAgB/sC,KAAKqxB,WAC1BrxB,KAAK40C,gBAEA50C,KAAK9E,aAAe8E,KAAK9E,aAAe,IAC7C8E,KAAU,OAAI,EACdA,KAAKrJ,OAAO0zB,QAAS,IAIjCrqB,KAAK20C,mBACL5yC,EAAOd,UAAoB,WAAE2B,KAAK5C,QAG1CsyC,EAA2BrxC,UAAUyG,oBAAsB,WACnD1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAKqzC,aACnCrzC,KAAKrJ,OAAOiR,IAAI,gBAAiB5H,KAAK2U,IACtC3U,KAAKrJ,OAAOiR,I/B/OW,sB+B+OmB5H,KAAK+yC,oBAC/C/yC,KAAKrJ,OAAOiR,I/B5OO,iB+B4OmB5H,KAAKgzC,eAC3ChzC,KAAKrJ,OAAOiR,IAAI,mCAAoC5H,KAAK0nB,WACzD1nB,KAAKrJ,OAAOiR,IAAI,kCAAmC5H,KAAKisC,UACxDjsC,KAAKrJ,OAAOiR,IAAI,8BAA+B5H,KAAK2zC,oBACpD3zC,KAAKrJ,OAAOiR,IAAI,aAAc5H,KAAK4zC,kBACnC5zC,KAAKrJ,OAAOiR,IAAI,mBAAoB5H,KAAK6zC,SACzC7zC,KAAKrJ,OAAOiR,IAAI,6BAA8B5H,KAAK8zC,cAEhDxB,GACTmE,0BAEEvC,GAA0C,SAAUnyC,GAEpD,QAASmyC,KACL,GAAI1vC,GAAmB,OAAXzC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAKhE,OAJAwE,GAAMkyC,YAAa,EACnBlyC,EAAMmyC,OAAS,EACfnyC,EAAMoyC,QAAU,EAChBpyC,EAAMqyC,MAAQ,EACPryC,EA8CX,MArDA/D,IAAUyzC,EAA0BnyC,GASpCmyC,EAAyBjzC,UAAUsyC,SAAW,SAAUuD,GACpDxkC,WAAS,gBAAiBjU,WAAS,UAAW2B,MAAMsK,UAAUqxB,wBAAyB37B,MACvF8f,eAAalW,IAAIvL,WAAS,UAAW2B,MAAMsK,UAAW,SAAUtK,KAAK+2C,sBAAsBD,GAAW92C,OAE1Gk0C,EAAyBjzC,UAAU0+B,MAAQ,WACvC3/B,KAAK42C,QAAU,MAEnB1C,EAAyBjzC,UAAU81C,sBAAwB,SAAUD,GACjE,GAAItyC,GAAQxE,KACRg3C,EAAU,EACVC,EAAW,CACf,OAAO,UAAU55C,GACb,GAAIs7B,GAAYt7B,EAAEgE,OAAOs3B,UACrBqD,EAAa3+B,EAAEgE,OAAO26B,WACtBpkB,EAAYo/B,EAAUre,EAAY,OAAS,IAC/C/gB,GAAYq/B,IAAajb,EAAapkB,EAAYq/B,EAAWjb,EAAa,QAAU,OACpFgb,EAAUre,EACVse,EAAWjb,CACX,IAAI8I,GAAUzmC,WAAS,eAAgBmG,GAAOoT,GAC1Cs/B,EAAQ,CACZ1yC,GAAMmyC,OAAShe,EACM,MAAjBn0B,EAAMoyC,UACNM,EAAQ1yC,EAAMmyC,OAASnyC,EAAMoyC,SAEjCpyC,EAAMoyC,QAAUpyC,EAAMmyC,OAClBnyC,EAAMqyC,OACNM,aAAa3yC,EAAMqyC,OAEvBryC,EAAMqyC,MAAQxtB,WAAW7kB,EAAMm7B,MAAO,IAOjCuX,EAAQ,KAAOA,GAAS,MAAS75C,GAAKA,EAAE+5C,iBACzC/5C,EAAEg6C,aAAc,EAChBh6C,EAAE+5C,kBAENN,GAAWl/B,UAAWA,EAAW0/B,QAAS9yC,EAAMkyC,WAC5C7B,SAAU/P,EAASiQ,QAAUrc,IAAKC,EAAWQ,KAAM6C,GACnDqW,aAAcja,SAAS8X,kBAG5BgE,GACTqD,wBCnZE92C,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBpI,OAAOuI,iBAChBC,uBAA2B1E,QAAS,SAAUuE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAItD,KAAKsD,GAAOA,EAAEpE,eAAec,KAAIqD,EAAErD,GAAKsD,EAAEtD,MACpDqD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAatI,OAAO4I,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAcnFy2C,GAA+B,WAI/B,QAASA,GAAc7gD,GACnBqJ,KAAKy3C,gBAAkB,EACvBz3C,KAAK03C,cAAgB,EACrB13C,KAAKrJ,OAASA,CAId,KAAK,GADD2pB,GAAU7d,OAAKxB,UAAyB,gBACnC3J,EAAI,EAAGA,EAAIgpB,EAAQ9oB,OAAQF,IAChC,GAAIgpB,EAAQhpB,KAAOqgD,gBAAmB,CAClCr3B,EAAQxjB,OAAOxF,EAAG,EAClB,OAGRmL,OAAKC,OAAOk1C,IACZ53C,KAAKoH,mBA6GT,MA3GAowC,GAAcv2C,UAAU42C,iBAAmB,SAAU70C,GACjDA,EAAKvE,KAAOuB,KAAKs/B,YAMrBkY,EAAcv2C,UAAU4B,cAAgB,WACpC,MAAO,iBAKX20C,EAAcv2C,UAAUmG,iBAAmB,WACvCpH,KAAKrJ,OAAO0Q,GhCbkB,2BgCakBrH,KAAK83C,4BAA6B93C,MAClFA,KAAKrJ,OAAO0Q,GhCZO,gBgCYkBrH,KAAK+3C,kBAAmB/3C,OAKjEw3C,EAAcv2C,UAAUyG,oBAAsB,WACtC1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IhCvBkB,2BgCuBmB5H,KAAK83C,6BACtD93C,KAAKrJ,OAAOiR,IhCtBO,gBgCsBmB5H,KAAK+3C,qBAE/CP,EAAcv2C,UAAU62C,4BAA8B,SAAUn5C,GAC5DqB,KAAKrJ,OAAOiB,KAAKwX,OhCyBM,uBgCzB6BojC,kBAAkB,IACtExyC,KAAKg4C,kBAAoBr5C,EAAIhG,OAC7BgG,EAAIhG,OAAOS,SAA0B,aAAfuF,EAAIpD,MAC1B,IAAI4oC,IACA/zB,OAAQpQ,KAAKrJ,OAAOwG,SACpBwB,IAAKA,EAAIA,IACTpD,OAAQoD,EAAIpD,OACZ5C,OAAQgG,EAAIhG,OACZ0S,MAAOrL,KAAKrJ,OAAOwG,SAAS3F,OAEhCwI,MAAKrJ,OAAOiB,KAAK8mB,gBACjB,IAAI7e,GAAcxB,WAAS,gBAAiB2B,KAAKrJ,QAAU,cAAgB,SAC3E0H,YAAS,oBAAqB2B,KAAKrJ,QAAQ6b,mBAAmB2xB,GAAOtkC,YAAaA,KAEtF23C,EAAcv2C,UAAU82C,kBAAoB,SAAUtT,GAClD,GAAIjgC,GAAQxE,KACRtG,EAAK,GAAI7C,eAAY4tC,EAAer0B,QACpChX,EAAW,GAAI0I,aAAU,WAAY,WAAY,MAAMkjC,GAAG,WAAY,eAAY1rB,IAClF1gB,EAAUc,EAAGoZ,cAAa,GAAIxB,UAAQI,MAAMtY,IAC5CkmC,EAAa1mC,EAAQwE,OAAO,SAAUC,GACtC,MAAO3E,GAAgB8L,EAAM7N,OAAQ0G,EAAGzE,IAE5CoH,MAAKs/B,WAAaA,EAClBt/B,KAAKrJ,OAAOiB,KAAKwX,OhCIC,iBgCJ6B3Q,KAAM6gC,GACrD,IAAI2Y,IAAW5mB,YAAa,EAAGma,UAAW,EAAGngC,MAAOo5B,EAAep5B,MACnErL,MAAKrJ,OAAOiB,KAAKwX,OhCIE,iBgCJ2B6oC,EAC9C,IAAI5mB,GAAa4mB,EAAO5mB,WACpBma,EAAWyM,EAAOzM,QAEtB,IADA/G,EAAep5B,MAAQi0B,EAAW9nC,QACd,IAAhB65B,IAAmC,IAAdma,EAAiB,CACtC,GAAIn6B,GAAQ,GAAIC,SACZszB,EAAO5kC,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,SAErCF,EAAOC,GADG5kC,KAAKrJ,OAAOiB,KAAKkW,aAAagI,YACf,EAC7BzE,GAAQA,EAAMszB,KAAKA,GAAMI,KAAKH,GAC9BlrC,EAAG9C,WAAW8E,KAAO4jC,EACrBmF,EAAer0B,OAAS1W,EAAGoZ,aAAazB,OAEvC,CASD,GAPoB,cADFozB,EAAehuB,WAAW5W,cAExCwxB,EAAa,EACbma,EAAWxrC,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,SAAW,EACpD7kC,KAAKrJ,OAAOiB,KAAKwX,OhClBF,uBgCkBqC6jC,QAAQ,MAI3Dt7C,oBAAkBqI,KAAKg4C,mBAAoB,CAC5C,GAAIE,GAAgBl4C,KAAKrJ,OAAOkI,UAC5Bs5C,EAAS7Y,EAAW9gC,QAAQwB,KAAKg4C,kBACtB1Y,GAAW75B,MAAM0yC,EAAQA,EAASD,EAAc1gD,QAClDA,OAAS0gD,EAAc1gD,QAAU2gD,GAAU,GAGpD9mB,EADA8mB,GADAA,EAAS7Y,EAAW9nC,OAAS0gD,EAAc1gD,QACzB,EAAI2gD,EAAS,EAE/B3M,EAAWlM,EAAW9nC,QAEjB6G,WAAS,gBAAiB2B,KAAKrJ,UACpC06B,EAAa,EACbma,EAAWxrC,KAAKrJ,OAAOiB,KAAKkW,aAAa+2B,SAAW,EACpD7kC,KAAKrJ,OAAOiB,KAAKwX,OhCnCN,uBgCmCyC6jC,QAAQ,KAEhEjzC,KAAKg4C,kBAAoB,KAG7BvT,EAAer0B,OAASkvB,EAAW75B,MAAM4rB,EAAYma,GACrDxrC,KAAKy3C,eAAiBpmB,EACtBrxB,KAAK03C,aAAelM,EAExBxrC,KAAKrJ,OAAOyY,OAAO,eAAgBq1B,IAOvC+S,EAAcv2C,UAAU8F,QAAU,WAC9B/G,KAAK0H,uBAEF8vC,KAGPI,GAA6B,SAAU71C,GAEvC,QAAS61C,GAAYjhD,EAAQ47C,GACzB,GAAI/tC,GAAQzC,EAAOa,KAAK5C,KAAMrJ,EAAQ47C,IAAYvyC,IAGlD,OAFA3B,YAAS,SAAUmG,GAAOoD,IAAI,eAAgBvJ,WAAS,sBAAuBmG,GAAQA,GACtFnG,WAAS,SAAUmG,GAAO6C,GAAG,eAAgB7C,EAAM4zC,qBAAsB5zC,GAClEA,EAuBX,MA5BA/D,IAAUm3C,EAAa71C,GAOvB61C,EAAY32C,UAAUm3C,qBAAuB,WACzC/5C,WAAS,SAAU2B,MAAM8C,KAAK,aAAc,kBAAmB,iBAC/D,IAAIu1C,GAAWh6C,WAAS,UAAW2B,MAAMs4C,WAAW,kBACpDj6C,YAAS,cAAeg6C,GACnBr2C,MAAMq2C,GAAWE,aAAWC,QAAS,GAAIlG,IAA2Bj0C,WAAS,SAAU2B,MAAO3B,WAAS,UAAW2B,SAEvHA,KAAKy4C,kBAETb,EAAY32C,UAAUw3C,eAAiB,WACnC,GAAIC,GAAar6C,WAAS,SAAU2B,MAChC6jB,EAAY60B,EAAWvF,cACtBx7C,qBAAkB+gD,EAAWv2B,SAA0C,gBAAvBu2B,YAAuE,IAApCA,EAAWv2B,OAAO3jB,QAAQ,OAC9Gk6C,EAAWzoC,QAAQxV,MAAM0nB,OAASu2B,EAAWv2B,OAEjD,IAGIA,GAAqB,MAHXu2B,EAAWv2B,OAAOpd,WAAWvG,QAAQ,KAAO,EAAIk6C,EAAWv2B,OACrEu2B,EAAWzoC,QAAQ0rB,wBAAwBxZ,QAClB0B,GAEzB+gB,EAAO8T,EAAW5qC,aAAa+2B,QACnC6T,GAAW1+B,eAAgBlM,cAAgB+2B,SAAUD,EAAOziB,EAASA,EAASyiB,KAAU,IAErFgT,GACTD,iBCjLEgB,GAAwB,WAIxB,QAASA,GAAOhiD,GACZ8L,OAAKC,OAAOk2C,UACZ54C,KAAKrJ,OAASA,EACdqJ,KAAKoH,mBAqET,MAnEAuxC,GAAO13C,UAAUmG,iBAAmB,WAChCpH,KAAKrJ,OAAO0Q,GAAG,oBAAqBrH,KAAKqxC,kBAAmBrxC,MAC5DA,KAAKrJ,OAAO0Q,GAAG,eAAgBrH,KAAKixC,aAAcjxC,MAClDA,KAAKrJ,OAAOiB,KAAKyP,GAAG,WAAYrH,KAAK64C,gBAAiB74C,OAE1D24C,EAAO13C,UAAUyG,oBAAsB,WAC/B1H,KAAKrJ,OAAOgR,cAGhB3H,KAAKrJ,OAAOiR,IAAI,oBAAqB5H,KAAKqxC,mBAC1CrxC,KAAKrJ,OAAOiR,IAAI,eAAgB5H,KAAKixC,cACrCjxC,KAAKrJ,OAAOiB,KAAKgQ,IAAI,WAAY5H,KAAK64C,mBAE1CF,EAAO13C,UAAUowC,kBAAoB,SAAUruC,GAC3C,GAEIiC,GAFAqtB,EAActyB,KAAKrJ,OAAOyV,qBAC1B0sC,EAAa94C,KAAKrJ,OAAOkI,SAQzBoG,GANCjC,EAAK0uB,WAAWl6B,OAMVwL,EAAK0uB,WALLY,EAAYl1B,OAAO,SAAUC,GAChC,MAAOA,GAAE2K,cAAc,kBAAoBhF,EAAKrK,OAAOwB,MAAQ,SAAW6I,EAAKrK,OAAOyB,MAAQ,KAMtG,KAAK,GAAI9C,GAAI,EAAGA,EAAI2N,EAAKzN,OAAQF,IAAK,CAClC,GAAIyhD,GAAQ/4C,KAAKrJ,OAAOiB,KAAKsc,oBAAoBjP,EAAK3N,GAAG8R,aAAa,aAAa3K,IACnFwG,GAAK3N,GAAGmD,MAAMG,QAAUoI,EAAKzH,MAC7B,IAAIy9C,GAAgC,SAAhBh2C,EAAKzH,OAAoB,8CACvC,2CACN,IAAIu9C,EAAW7zC,EAAK3N,GAAGuP,UAAUmB,cAAcgxC,GAAgB,CAE3D,IAAK,GADD/lB,MACKE,EAAM,EAAGA,EAAMb,EAAY96B,OAAQ27B,IACpCb,EAAYa,GAAKnrB,cAAc,kBAAoB+wC,EAAM5+C,MAAQ,SAAW4+C,EAAM3+C,MAAQ,KAC1F64B,EAAKx6B,KAAK65B,EAAYa,GAG1BF,GAAKz7B,QACLwI,KAAKqxC,mBAAoB3f,WAAYuB,EAAM13B,OAAQyH,EAAKzH,YAKxEo9C,EAAO13C,UAAU43C,gBAAkB,SAAUx7C,GACrC0K,eAAa1K,EAAEgE,OAAQ,cACvBrB,KAAKrJ,OAAOiB,KAAKkE,aAAa0uB,qBAAyD,SAAlCxqB,KAAKrJ,OAAOmF,aAAaC,MAC9EiE,KAAKrJ,OAAOiB,KAAKoE,WAAWyxB,UAAU1lB,eAAa1K,EAAEgE,OAAQ,WAGrEs3C,EAAO13C,UAAUgwC,aAAe,SAAUjuC,GACjBhD,KAAKrJ,OAAOiJ,aAAaxC,OAAO,SAAUC,GAC3D,MAAOA,GAAE5F,eAEMD,QAAUwI,KAAKrJ,OAAOsiD,cAAgBj5C,KAAKrJ,OAAOuC,eACjEkU,YAAUpN,KAAKrJ,OAAOsZ,QAAQgE,uBAAuB,UAAU,IAAK,qBAG5E0kC,EAAO13C,UAAU8F,QAAU,WACvB/G,KAAK0H,uBAMTixC,EAAO13C,UAAU4B,cAAgB,WAC7B,MAAO,UAEJ81C,KC9EPO,GAA+B,WAI/B,QAASA,GAAcviD,GACnB8L,OAAKC,OAAOy2C,iBACZn5C,KAAKrJ,OAASA,EA0BlB,MAlBAuiD,GAAcj4C,UAAU+sB,kBAAoB,SAAUorB,EAAGC,GACrD,MAAOr5C,MAAKrJ,OAAOiB,KAAKu2B,oBAAoBH,kBAAkBorB,EAAGC,IAOrEH,EAAcj4C,UAAU8F,QAAU,aAOlCmyC,EAAcj4C,UAAU4B,cAAgB,WACpC,MAAO,iBAEJq2C,WCpCXI,IAAe52C,OAAO62C,GAAcC,GAAYC,GAAYC,GAAeC,GAAeC,GAAiBC,GAAcC,GAAkBC,GAAmBC,GAAiBC,GAAqBC,GAAmBC,GAAYC,EAAiBC,GAAqBC,GAAiBC,GAAaC,GAAcC,GAAqBC,wBnCExT,sBAEQ,2BAEH,4BAEI,kCAEE,gCAEJ,gCAEI,mCAED,gCAEF,6BAED,+BAEG,iCAED,+BAED,mCAEK,sCAEF,+BAEL,wBAEF,uBAEC,wBAEA,yBAEC,4BAEE,0CAEY,2CAEX,gCAEA,mCAEE,qCAEC,gCAEN,2BAEC,wCAEY,uCAEb,yBAED,uBAED,+BAES,+BAET,uBAEC,uBAED,yBAEG,4BAEA,yBAEH,+BAES,qCAEH,mCAEC,8BAEN,yBAEC,2BAEA,0BAED,kCAES,yCAED,qCAEL,gCAEC,mCAEE,gCAEE,8CAEI,2CAEN,4BAER,+BAEW,+BAEX,yBAEK,yBAEL,wBAEG,2BAEA,2BAEA"}