{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns < this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns === this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    if (this.grid.editSettings.allowEditing) {\n                        var isOnBatch = 'isOnBatch';\n                        this.editModule[isOnBatch] = false;\n                    }\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","allowRowDragAndDrop","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"uEAIO,SAASA,GAAaC,GACzB,GAAIA,EAAOC,qBAAsBC,eAAa,CAC1C,GAAIC,GAAUH,EAAOC,WAAWE,OAChC,OAAQA,aAAmBC,iBACtBD,YAAmBE,kBAAmBF,YAAmBG,qBACzDH,YAAmBI,iBAAiBJ,YAAmBK,cAEhE,OAAO,EAEX,QAAgBC,GAAgBT,GAC5B,SAAIA,EAAOC,YAAc,UAAYD,GAAOC,YAKhD,QAAgBS,GAAiBV,GAC7B,IAAK,GAAIW,GAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,CAGf,QAAO,EAEX,QAAgBC,GAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,QAAgBG,GAAkBC,GAC9B,GAAIC,EACJA,KAEA,KAAK,GAAId,GAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAC3BkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,GAG3B,OAAOc,GAKX,QAAgBM,GAAgB/B,EAAQgC,EAAQC,GAC5C,GAEIC,GAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,SAE5C,OAAoB,OAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,aAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,UACxDJ,GAAelC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,QAAgBC,GAAoBlB,GAChC,GAAIC,KACJ,IAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,QAEJ,KAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,GADDA,GAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,KAIlE,OAAOc,GAEX,QAAgBqB,GAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,GAAI+C,GAAK/C,EAAOC,UAChB,QAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,QAAgBC,GAAYC,GAIxB,IAAK,GAFDC,GACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,IACA,KAAK,GAAIE,GAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,GAEjCD,GAAOtB,KAAKqB,GAEhB,MAAOC,GAEX,QAAgBE,GAAaC,GAMzB,aALOA,GAAMZ,sBACNY,GAAMX,mBACNW,GAAMC,YACND,GAAMnB,iBACNmB,GAAME,MACNF,EAEX,QAAgBlB,GAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,MAAO1D,GAAe,yBAAEuD,GAIxB,MAAOvD,GAAS,mBAAEuD,GAG1B,QAAgBI,GAASC,GACrB,GAAIC,GAAQC,OAAOC,iBAAiBH,EACpC,OAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCrJ1C,QAASC,GAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,GAGI9D,GACA0C,EAEAqB,EANAnB,EAAQY,EAAQZ,MAChBoB,EAASR,EAAQQ,OAMjBxD,EAAMiD,EAAQnD,KAAK2D,0BAA0B,GAC7CC,EAAWT,EAAQnE,qBAAsBC,eACzCkE,EAAQnE,WAAWA,WAAW6E,KAAOV,EAAQnE,WAC7C8E,KACAC,EAAezB,EACf0B,GAAS,CAIb,IAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQnD,KAAKmE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE7D,OAAU,CACxC,GAAIyE,GAASC,EAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,EAChGlB,GAAQ+B,EAAO/B,MACf0B,EAASK,EAAOL,OAQpB,GANI1B,YAAiBiC,OACjBT,EAAe9B,EAAYM,GAG3BwB,EAAajD,KAAK2D,YAAWlC,KAE5B0B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,GAAIC,GAAI,EAAGA,EAAIZ,EAAalE,OAAQ8E,IAAK,CACJ,gBAA1BZ,GAAaY,GAAGxE,KACxB4D,EAAaY,GAAKZ,EAAaY,GAAGxE,GAEtC,IAAIS,GAAOmD,EAAaY,GAAGC,SAAWjE,OAAOC,KAAKmD,EAAaY,GAAGC,UAC9DjE,OAAOC,KAAKmD,EAAaY,GAC7BhF,GAAIkE,EAAShE,MA6Eb,MAAOF,KAAOA,GAAK,GAEC,UA9EN,WACV,GAAIkE,EAASlE,GAAGQ,KAAS4D,EAAaY,GAAGxE,GAAM,CAC3C,GAAe,WAAXwD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKtB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIwB,EAASlE,GAAGkF,eAAejE,EAAKyB,MAAuC,SAA9Be,EAAQc,aAAaC,OACzDnE,oBAAkB0D,IAAyD,IAAxCA,EAA2B,eAAE7D,QAClEe,EAAKyB,KAAOmB,GAAa,CAC5B,GAAIsB,GAAazD,EAAc+B,EAASW,EAAaY,GAAGrD,SACxDuC,GAASlE,GAAGiB,EAAKyB,IAAM0B,EAAaY,GAAG/D,EAAKyB,IACxCyC,GAAcA,EAAWF,WACzBE,EAAWF,SAAShE,EAAKyB,IAAMyC,EAAWlE,EAAKyB,IAAMwB,EAASlE,GAAGiB,EAAKyB,UAKjF,IAAe,QAAXsB,GAA+B,cAAXA,EAAwB,CACjD,GAAInB,OAAQ,EACgC,WAAxCY,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaY,SAASxB,EAAQ2B,iBAAmBlB,EAASlE,GAAGyD,EAAQ4B,WACrEnB,EAASoB,OAAOtF,EAAI,EAAG,EAAGqE,EAAaY,YAGlCf,EAASlE,GAAGkF,eAAezB,EAAQ8B,gBACpCrB,EAASlE,GAAGyD,EAAQ8B,kBAExBrB,EAASlE,GAAGyD,EAAQ8B,cAAcpE,KAAKkD,EAAaY,UACpDO,EAAgBhF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAASoB,OAAOtF,EAAI,EAAG,EAAGqE,EAAaY,UACvCO,EAAgBhF,EAAK0D,EAASlE,EAAI,GAAIgE,EAAQP,EAASC,EAAiBW,IAElEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAASoB,OAAOtF,EAAG,EAAGqE,EAAaY,UACnCO,EAAgBhF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,KALpExB,EAAQ,EACRqB,EAASoB,OAAOzC,EAAO,EAAGwB,EAAaY,WAO/C,MAAO,QAhEP,GAAIQ,GAAgBvB,EAASlE,EAE7B,IADAkE,EAASoB,OAAOtF,EAAG,GACf0D,EAAiB,CACjB,IAAKrD,oBAAkBoF,EAAchC,EAAQ2B,kBAKzC,IAAK,GAJDM,GAAajC,EAAQkC,SAASC,OAAO,SAAUC,GAC/C,MAAOA,GAAEpC,EAAQ4B,aAAeI,EAAchC,EAAQ2B,mBACvD,GACCnD,EAAeyD,EAAaA,EAAWjC,EAAQ8B,iBAC1CO,EAAI7D,EAAa/B,OAAS,EAAG4F,GAAK,EAAGA,IAC1C,GAAI7D,EAAa6D,GAAGrC,EAAQ4B,aAAeI,EAAchC,EAAQ4B,WAAY,CACzEpD,EAAaqD,OAAOQ,EAAG,GAClB7D,EAAa/B,SACdwF,EAAW1D,iBAAkB,EAC7BwD,EAAgBhF,EAAKkF,EAAY1B,EAAQP,EAASC,GAEtD,OAIZ,MAAO,aAgDTrD,qBAAkB6D,EAASlE,GAAGyD,EAAQ8B,gBACxCQ,EAAmB7B,EAASlE,GAAGyD,EAAQ8B,cAAenB,EAAaY,GAAIhB,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC5H2B,EAAgBhF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,UAY3E,QAAgBkB,GAAUpB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,GAAIlB,GACA0B,GAAS,EACT0B,EAAqBvC,EAAQnD,KAAK2F,uBAGtC,QAFArD,EAAQkC,YAAWtB,EAAQZ,OAC3BA,EAAQD,EAAaC,GACba,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASgC,QAAQtD,GACjB0B,GAAS,CACT,MACJ,KAAK,SACDJ,EAAS/C,KAAKyB,GACd0B,GAAS,CACT,MACJ,KAAK,QAOG1B,EAAQD,EANPtC,oBAAkByD,GAKnBlB,EAAQkC,YAAWkB,EAAmBrC,EAAc,IAJpDf,EAAQkC,YAAWhB,GAOvB,MACJ,KAAK,QACL,IAAK,QACD,GAAKzD,oBAAkByD,GAIlB,CACD,GAAIqC,GAAc1C,EAAQnD,KAAK2D,0BAA0B,GACrDmC,EAAcJ,EAAmBrC,EAOrCf,GAAQD,EALJC,GADCvC,oBAAkB+F,IAAgBA,EAAYD,KAAiB3C,EAAQZ,MAAMuD,KAAmC,IAAnBvC,EACtFkB,YAAWsB,GAGXtB,YAAWtB,EAAQZ,YAT/BA,GAAQD,EADRC,EAAQkC,YAAWhB,KAcA,IAAnBF,IACAM,EAASgC,QAAQtD,GACjB0B,GAAS,GAGrB,OAAS1B,MAAOA,EAAO0B,OAAQA,GAEnC,QAAgByB,GAAmB9D,EAAcmC,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,GAAIwC,IAAa,EACb3D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS4D,EAAa5D,IACrCkD,GAAmBzB,EAAaS,GAAGe,EAAQ2B,mBAAqBhB,EAAaX,EAAQ4B,WAAa,CACnG,GAAe,SAAXrB,EAAmB,CAGnB,IAAK,GAFD/C,GAAOD,OAAOC,KAAKmD,GACnBe,EAAazD,EAAc+B,EAASW,EAAazC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIiC,EAAaS,GAAGwC,eAAejE,EAAKjB,MAAsC,SAA9ByD,EAAQc,aAAaC,MAAmBvD,EAAKjB,KAAO6D,KAChGsB,EAAWlE,EAAKjB,IAAMmF,EAAWF,SAAShE,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMoE,EAAanD,EAAKjB,IAC3D,WAAnCyD,EAAQnD,KAAKiE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQnD,KAAKmE,WAAqB,WAAE6B,aAAelC,EAAavB,MAChEY,EAAQnD,KAAKmE,WAAqB,WAAE8B,sBAAsBnC,GAItE,MAEC,GAAe,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQ2B,iBAAmBnD,EAAaS,GAAGe,EAAQ4B,WAChEpD,EAAaqD,OAAO5C,EAAI,EAAG,EAAG2B,GAC9BmB,EAAgBhF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,KAGnEpC,EAAaS,GAAGwC,eAAezB,EAAQ8B,gBACxCtD,EAAaS,GAAGe,EAAQ8B,kBAE5BtD,EAAaS,GAAGe,EAAQ8B,cAAcpE,KAAKkD,EAAaY,UACxDO,EAAgBhF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B9C,EAAaqD,OAAO5C,EAAG,EAAG2B,EAAaY,UACvCO,EAAgBhF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1B9C,EAAaqD,OAAO5C,EAAI,EAAG,EAAG2B,EAAaY,UAC3CO,EAAgBhF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,QAG3E,CACgBpC,EAAaS,GAAGjB,UACjCQ,GAAaqD,OAAO5C,EAAG,GAClBT,EAAa/B,SACdmG,GAAa,QAIfhG,qBAAkB4B,EAAaS,GAAGe,EAAQ8B,gBAC5CQ,EAAmB9D,EAAaS,GAAGe,EAAQ8B,cAAenB,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC7H2B,EAAgBhF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAInE,OAAO2C,GAEX,QAAgBb,GAAgBhF,EAAKa,EAAQ2C,EAAQP,EAASC,EAAiB8C,GAC3E,GAA6C,UAAxC/C,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B3D,oBAAkBmG,EAAM/E,YAI7E,CACD,GACIgF,GADAC,EAAiBjD,EAAQnD,KAAK2F,uBAalC,IAXAS,EAAeC,IAAI,SAAUd,EAAG7F,GAAK,GAAI6F,EAAErF,KAASa,EAAOb,GAEvD,YADAiG,EAAUzG,KAGTK,oBAAkBoG,KACnBpF,EAASqF,EAAeD,IAExBhD,EAAQmD,sBAAwBvG,oBAAkBgB,KAAYhB,oBAAkBmG,KAChFnF,EAASwF,WAAS,sBAAwBL,EAAMM,eAAgBrD,IAEpEpC,EAAOW,iBAAkB,EACV,QAAXgC,GAA+B,cAAXA,EAAwB,CAC5C3C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrByB,EAAQsD,aAAa9G,QAAQC,QAAUG,oBAAkBmG,KACzDA,EAAQE,EAAed,OAAO,SAAUC,GACpC,MAAIA,GAAEiB,iBAAmBzF,EAAOM,SACrBkE,EAGA,OAInB,IAAI5D,GAAeuE,EAAQA,YAAiB3B,OAAQ2B,EAAM,GAAKA,EAAQE,EAAeD,EAAU,EACpD,WAAxChD,EAAQc,aAAaQ,iBAChB1D,EAAO6D,eAAe,gBAIlB7E,oBAAkBmG,IAAUnF,EAAOb,KAASgG,EAAMhG,IACnDa,EAAOY,aAAad,KAAKqF,GAJ7BnF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAa+E,QAAQ/E,IAAwBZ,EAAOb,KAASgG,EAAMhG,IAC1Ea,EAAOY,aAAaiE,QAAQjE,GAE5ByB,IACKrC,EAAO6D,eAAezB,EAAQ8B,gBAC/BlE,EAAOoC,EAAQ8B,mBAEyC,IAAxDlE,EAAOoC,EAAQ8B,cAAcyB,QAAQ/E,IAAwBZ,EAAOb,KAASgG,EAAMhG,IACnFa,EAAOoC,EAAQ8B,cAAcW,QAAQjE,KAQrD,IAAK,GAHDkE,GAAc1C,EAAQnD,KAAK2D,0BAA0B,GACrDgD,EAAOxD,EAAQnD,KAAKhB,qBAAsBC,eAC1CkE,EAAQnD,KAAKhB,WAAWA,WAAW6E,KAAOV,EAAQnD,KAAKhB,WAClDU,EAAI,EAAGA,EAAIiH,EAAK/G,OAAQF,IAC7B,GAAIiH,EAAKjH,GAAGmG,KAAiB9E,EAAO8E,GAAc,CAC9Cc,EAAKjH,GAAKqB,CACV,OAGRoC,EAAQnD,KAAK4G,WAAW1G,EAAKa,EAC7B,IAAI8F,GAAM1D,EAAQ2D,cAAcX,EACE,WAA9BhD,EAAQc,aAAaC,OACrB2C,EAAM1D,EAAQ4D,UAAU5D,EAAQnD,KAAKgH,wBAAwBjG,EAAOb,KAExE,IAAI+G,OAAa,IACb9D,EAAQ+D,YAAc/D,EAAQgE,sBAC9BF,EAAa9D,EAAQiE,qBAAqBjB,KAEzChD,EAAQmD,sBAAyBvG,oBAAkB8G,KAAS9G,oBAAkBkH,IAC/E9D,EAAQkE,aAAaC,YACjBX,KAAM5F,EAAQwG,KAAMV,EAAIW,MAAMrE,EAAQsE,iBAAmBZ,EAAIW,MAAMrE,EAAQsE,iBACrER,EAAWO,MAAMrE,EAAQsE,gBAAkBtE,EAAQuE,eACzDC,OAAQxE,EAAQnD,KAAK4H,aAAazE,EAAQsE,iBAC1CI,YAAanE,QA5EJtC,GAAc+B,EAAS+C,EAAM/E,WAAWE,UAC9CM,aAAad,KAAKqF,GC3OrC,GAAI4B,GAAwB,WACxB,QAASA,GAAOC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAK5H,gBAAiB,EAMtB4H,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAK1C,UACLkD,QAAMR,KAAMD,GAEhB,MAAOD,MCjEPW,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,QAASD,KACL,MAAkB,QAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,MAxCAS,GAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,eAAY,IACpCE,GACIc,cACDH,EAAUb,UAAW,YAAS,IACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACxCE,GACIc,cACDH,EAAUb,UAAW,gBAAa,IACrCE,GACIc,gBACDH,EAAUb,UAAW,wBAAqB,IAC7CE,GACIc,gBACDH,EAAUb,UAAW,qBAAkB,IAC1CE,GACIc,cACDH,EAAUb,UAAW,WAAQ,IAChCE,GACIc,cACDH,EAAUb,UAAW,kBAAe,IACvCE,GACIc,cACDH,EAAUb,UAAW,UAAO,IAC/BE,GACIc,cACDH,EAAUb,UAAW,mBAAgB,IACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,QAASI,KACL,MAAkB,QAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,cAAW,IACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,cACDE,EAAelB,UAAW,WAAQ,IACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,0BAAuB,IACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,yBAAsB,IACnDE,GACIc,cACDE,EAAelB,UAAW,gBAAa,IAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,mBAAgB,IAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,oBAAiB,IACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,QAASM,KACL,MAAkB,QAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,MAPAS,GAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,eAAY,IACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QASnFuB,EAAU,oDACVC,EAAe,2CAIfC,EAAwB,SAAUT,GAElC,QAASS,GAAOzL,GAIZ,MAFA0L,QAAKC,OAAOC,UACJZ,EAAOa,KAAK5C,KAAMjJ,IAAWiJ,KAsEzC,MA1EAS,GAAU+B,EAAQT,GAWlBS,EAAOvB,UAAU4B,cAAgB,WAC7B,MAAO,UAEXL,EAAOvB,UAAU6B,IAAM,SAAUC,EAAOC,GAC9BD,YAAiBxG,SACnBwG,GAASA,GAGb,KAAK,GADDE,GAAOF,EACFrL,EAAI,EAAGA,EAAIuL,EAAKrL,OAAQF,IAAK,CAClC,GAAIwL,GAAOC,cAAYF,EAAKvL,IACxB0L,EAAMF,EAAKG,MAAML,EAAMhD,KAAKjJ,OAChC,IAAIqM,EAAIE,QAAS,CACb,GAAIC,GAAUL,EAAKM,gBAAgBR,EAAMhD,KAAKjJ,OAAQqM,EAAIrD,SAEtDxF,GADJgJ,EAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,KACtF/E,QAAQ,SACxBgF,EAAUH,EAAQI,UAAUpJ,EAChB,oBAAZ0I,EAAKvL,GACL6L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAKvL,IAA+C,0BAAZuL,EAAKvL,GAClD6L,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAKvL,GACV6L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAKvL,GACV6L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAKvL,GACV6L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAKvL,KACV6L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjC,+BAAZW,EAAKvL,GACAK,oBAAkBiI,KAAK4D,cAAiB7L,oBAAkBiI,KAAK4D,YAAYC,kBAC5EC,QAAQZ,EAAKa,SAASR,GAI1BO,QAAQZ,EAAKa,SAASR,MAKtCf,EAAOvB,UAAU+C,QAAU,SAAUjB,EAAOC,EAAMiB,GAC9CjE,KAAK4D,YAAcK,EACblB,YAAiBxG,SACnBwG,GAASA,GAEb,IAAIE,GAAOF,CACPkB,GAASC,qBACTlE,KAAK8C,IAAI,yBAA0BE,EAEvC,KAAK,GAAItL,GAAI,EAAGA,EAAIuL,EAAKrL,OAAQF,IAAK,CAClC,GAAIwL,GAAOiB,EAAgBlB,EAAKvL,IAC5B0L,EAAMF,EAAKG,MAAML,EAAMiB,EAC3B,IAAIb,EAAIE,QAAS,CACb,GAAIC,GAAUL,EAAKM,gBAAgBR,EAAMiB,EAAUb,EAAIrD,QACvD+D,SAAQZ,EAAKa,SAASR,MAI3Bf,GACTG,UAESwB,GACPC,wBACInB,KAAM,yBACNc,QAAS,QACTV,MAAO,SAAUL,EAAMjM,GACnB,GAAIsN,IAAQf,SAAS,EAOrB,QANKvL,oBAAkBhB,EAAOgG,YAAchF,oBAAkBhB,EAAOkG,eAC9DlF,oBAAkBhB,EAAO+F,mBAC1B/E,oBAAkBhB,EAAOgG,YAAchF,oBAAkBhB,EAAO+F,kBACjE/E,oBAAkBhB,EAAOgG,aAAehF,oBAAkBhB,EAAO+F,oBAClEuH,GAAQf,SAAS,IAEde,GAEXb,gBAAiB,SAAUR,EAAMjM,EAAQuN,GACrC,MAAOC,iRAIFhC,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCC3H5B9B,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAUnFyD,EAA+B,SAAUzC,GAEzC,QAASyC,GAAczN,GACnB,GAAI0N,GAAQ1C,EAAOa,KAAK5C,KAAMjJ,EAAOiB,OAASgI,IAI9C,OAHAyE,GAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB7N,EAChB0N,EAsJX,MA5JAhE,GAAU+D,EAAezC,GAQzByC,EAAcvD,UAAU4D,YAAc,SAAUC,GAC5C,GAII1G,GAAiB4B,KAAK4E,eAAejH,uBACzC,IAAyC,KAArC9C,OAAOkK,eAAeC,WAAmB,CACzChF,KAAKiF,kBAAkB3K,MAAQ0F,KAAgB,YAAI,EACnD,IAAIkF,GAAOlF,KAAK4E,eAAe5M,KAAK+G,SACpC,IAAmD,SAA/CiB,KAAK4E,eAAeO,kBAAkBjJ,KAAiB,CAIvD,IAAK,GAHDkJ,GAAkBpF,KAAK4E,eAAeS,wBAAwBC,KAAK,SAAUC,EAAG3E,GAChF,MAAO2E,GAAI3E,IAENlJ,EAAI,EAAGA,EAAI0N,EAAgBxN,OAAQF,IAIxC,GAHIA,EAAI,IACJsI,KAAK0E,iBAAmB,OAEvBQ,EAAKE,EAAgB1N,IAAI8N,UAAUC,SAAS,gBAAiB,CAC9D,GAAIjG,MAAWkG,MAAM9C,KAAKsC,EAAKE,EAAgB1N,IAAIiO,iBAAiB,eAChEC,EAAW5F,KAAK4E,eAAeiB,qBAAqBnO,GAAW,UACV,IAArDsI,KAAK2E,yBAAyBjG,QAAQkH,KACQ,WAA1C5F,KAAK4E,eAAekB,mBAA4E,SAA1C9F,KAAK4E,eAAekB,mBAC1E9F,KAAK+F,kBAAkB3H,EAAgBgH,EAAgB1N,GAAIwN,EAAMJ,EAAYpN,GAEjFsI,KAAgB,YAAER,GAAO,EAAO,KAAMsF,GACtC9E,KAAK0E,iBAAmB1E,KAAgB,YACxCA,KAAK2E,yBAAyB9L,KAAK+M,GACnC5F,KAAgB,YAAI,GAC0B,UAA1CA,KAAK4E,eAAekB,mBAA2E,SAA1C9F,KAAK4E,eAAekB,mBACzE9F,KAAKgG,iBAAiB5H,EAAgBgH,EAAgB1N,GAAIwN,EAAMJ,IAKhF,GAAIA,EAAY,CAEZ,IAAK,GADDmB,MACKvO,EAAI,EAAGA,EAAIsI,KAAK4E,eAAesB,oBAAoBtO,OAAQF,IAChEuO,EAAgBvO,GAAKsI,KAAK4E,eAAesB,oBAAoBxO,GAAGyO,UAEpEnG,MAAgB,YAAEiG,GAAiB,EAAO,KAAMnB,GAChD9E,KAAK0E,gBAAkB1E,KAAgB,YAAI,KAAOA,KAAK0E,gBAE3D,GAAI1B,IACArE,KAAMqB,KAAK0E,gBACX0B,QAAQ,EAGZ,IADApG,KAAK4E,eAAeyB,QCpBZ,aDoBuCrD,GAC3CA,EAAKoD,OACL,MAEJpG,MAAKiF,kBAAkB3K,MAAQ0F,KAAgB,YAAIgD,EAAKrE,KACnD2H,UAAQC,UAAUC,MAAM,qBAIzBxG,KAAKiF,kBAAkBwB,kBAAkB,EAAGzG,KAAKiF,kBAAkB3K,MAAM1C,QAHzEoI,KAAKiF,kBAAkByB,SAK3B1G,KAAa,UAAI,EACjBA,KAAK2E,4BACL3E,KAAK0E,gBAAkB,OAGvB3C,GAAOd,UAAU4D,YAAYjC,KAAK5C,KAAM8E,KAIpDN,EAAcvD,UAAU8E,kBAAoB,SAAU3H,EAAgB9C,EAAe4J,EAAMJ,EAAYvK,GAMnG,IAAKxC,oBAAkBqG,EAAe9C,GAAyB,YAE3D,IAAK,GADDqL,GAAYvI,EAAe9C,GAAyB,WAAO,MACtD5D,EAAI,EAAGA,EAAIiP,EAAY,EAAGjP,IAC/B,IAAK,GAAI0C,GAAI,EAAGA,EAAIgE,EAAexG,OAAQwC,IACvC,IAAKrC,oBAAkBqG,EAAe9C,GAAyB,aAC3D8C,EAAehE,GAAW,WAAMgE,EAAe9C,GAAyB,WAAU,SAAG,CACrFA,EAAgBlB,CAChB,IAAIoF,MAAWkG,MAAM9C,KAAKsC,EAAK5J,GAAeqK,iBAAiB,eAC3DC,EAAWxH,EAAehE,GAAW,QACzC,KAAyD,IAArD4F,KAAK2E,yBAAyBjG,QAAQkH,GAAkB,CACxD5F,KAAgB,YAAER,GAAO,EAAO,KAAMsF,GAElC9E,KAAK0E,gBADLnK,EAAQ,EACeyF,KAAK0E,gBAAkB1E,KAAgB,YAAI,KAG3CA,KAAgB,YAAI,KAAOA,KAAK0E,gBAE3D1E,KAAK2E,yBAAyB9L,KAAK+M,GACnC5F,KAAgB,YAAI,EACpB,UAOxBwE,EAAcvD,UAAU2F,KAAO,SAAU9B,GACrC/C,EAAOd,UAAU2F,KAAKhE,KAAK5C,KAAM8E,IAErCN,EAAcvD,UAAU4F,MAAQ,SAAUlI,EAAMmI,EAAUC,GACtDhF,EAAOd,UAAU4F,MAAMjE,KAAK5C,KAAMrB,EAAMmI,EAAUC,IAMtDvC,EAAcvD,UAAU4B,cAAgB,WACpC,MAAO,aAQX2B,EAAcvD,UAAU+F,QAAU,WAC9BjF,EAAOd,UAAU+F,QAAQpE,KAAK5C,OAElCwE,EAAcvD,UAAU+E,iBAAmB,SAAU5H,EAAgB9C,EAAe4J,EAAMJ,GAMtF,GAAI1G,EAAe9C,GAA8B,gBAE7C,IAAK,GADD2L,GAAY7I,EAAe9C,GAA2B,aACjD5D,EAAI,EAAGA,EAAIuP,EAAUrP,OAAQF,IAClC,IAAK,GAAI0C,GAAI,EAAGA,EAAIgE,EAAexG,OAAQwC,IACvC,IAAKrC,oBAAkBkP,EAAUvP,GAAW,WAAM0G,EAAehE,GAAW,WAAM6M,EAAUvP,GAAW,SAAG,CACtG,IAAMK,oBAAkBmN,EAAK9K,MAAS8K,EAAK9K,GAAGoL,UAAUC,SAAS,gBAAiB,CAC9E,GAAIjG,MAAWkG,MAAM9C,KAAKsC,EAAK9K,GAAGuL,iBAAiB,eAC/CC,EAAWxH,EAAehE,GAAW,UACgB,IAArD4F,KAAK2E,yBAAyBjG,QAAQkH,KACtC5F,KAAgB,YAAER,GAAO,EAAO,KAAMsF,GACtC9E,KAAK0E,iBAAoB,KAAO1E,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAK2E,yBAAyB9L,KAAK+M,GACnC5F,KAAKgG,iBAAiB5H,EAAgBhE,EAAG8K,EAAMJ,IAGvD,QAMbN,GACT0C,aEzKEC,EAA2B,WAI3B,QAASA,GAAUpQ,GACfiJ,KAAKjJ,OAASA,EACdiJ,KAAKoH,iBACLpH,KAAKoF,mBACLpF,KAAKqH,mBA2aT,MAraAF,GAAUlG,UAAU4B,cAAgB,WAChC,MAAO,aAEXsE,EAAUlG,UAAUoG,iBAAmB,WACnCrH,KAAKjJ,OAAOuQ,GAAG,eAAgBtH,KAAKuH,eAAgBvH,MACpDA,KAAKjJ,OAAOuQ,GAAG,iBAAkBtH,KAAKwH,eAAgBxH,MACtDA,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAKyH,kBAAmBzH,MAC5DA,KAAKjJ,OAAOiB,KAAKsP,GAAG,mBAAoBtH,KAAKuH,eAAgBvH,MAC7DA,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAK0H,kBAAmB1H,OAEhEmH,EAAUlG,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,eAAgB7H,KAAKuH,gBACrCvH,KAAKjJ,OAAO8Q,IAAI,iBAAkB7H,KAAKwH,gBACvCxH,KAAKjJ,OAAOiB,KAAK6P,IAAI,mBAAoB7H,KAAKuH,gBAC9CvH,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAK0H,mBAC1C1H,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAKyH,qBAO9CN,EAAUlG,UAAU+F,QAAU,WAC1BhH,KAAK2H,uBAETR,EAAUlG,UAAUyG,kBAAoB,SAAU1E,GAC9C,GAEI8E,GAFAzG,EAASzI,YAAU,SAAUoK,GAC7B+E,EAAYC,eAAa3G,EAAQ,qBAErC,IAAI0G,GAAaA,EAAUpC,iBAAiB,sBAAsB/N,OAAS,EAAG,CAC1EkQ,EAAWC,EAAUE,cAAc,yBACnC,IAAInB,OAAW,IACfA,MACSjO,KAAKwI,EAAO6G,QAAQ,MAAMpB,UACnC9G,KAAKmI,iBAAiBrB,GACtB9G,KAAKoI,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYpE,EAAO6G,QAAQ,WAE9G,IAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoB/N,OAAS,GAAKoI,KAAKjJ,OAAOuR,mBAAoB,CAC/G,GAAIC,IAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,SAC/DzF,MAAKwI,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnCjI,KAAKoI,sBAAsBN,EAAUS,EAAelH,EAAO6G,QAAQ,SAG3Ef,EAAUlG,UAAUmH,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,GAAI/J,GAAOqB,KAAKjJ,OAAO4G,wBAAwB+K,EAAW5B,UACtD9D,GAAS2F,QAASF,EAAYpH,OAAQyG,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BzF,KAAKjJ,OAAO8R,oBAAsBlK,EAC5CqB,MAAKjJ,OAAOsP,QDrDQ,iBCqDuBrD,IAE/CmE,EAAUlG,UAAU6H,uBAAyB,WAIzC,IAAK,GAHDC,GACAC,EACArR,EAAWqI,KAAKjJ,OAAe,QAC1BkS,EAAM,EAAGA,EAAMtR,EAAQC,OAAQqR,IAChCtR,EAAQsR,GAAKpR,eACbkR,EAAa/I,KAAKjJ,OAAOY,QAAQsR,GAAKC,IAI9C,KAAK,GADDC,GAAmBnJ,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,oBAAoB/N,OAClFwC,EAAI,EAAGA,EAAI+O,EAAkB/O,IACjB4F,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,oBAAoBvL,GACtEiP,aAAa,kBAAoBN,IAC5CC,EAAc5O,EAGtB,OAAO4O,IAEX7B,EAAUlG,UAAUsG,eAAiB,WAEjC,GADAvH,KAAKgJ,YAAchJ,KAAK8I,yBACpB9I,KAAKgJ,aAAe,GAAoF,IAA/EhJ,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,oBAAoB/N,OAAc,CAC3G,GAAI0R,GAAgBtJ,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,oBAAoB3F,KAAKgJ,aACzFjB,MAAY,GAEZwB,EAAYvJ,KAAKjJ,OAAOyS,cAAc,SAAWC,UAAW,kBAAmBC,OAASzG,KAAQ,eACpG8E,EAAY4B,iBAAe3J,KAAKjJ,OAAOyS,eAAe,GAASb,SAFnD,EAEmEiB,MAAO,OAC5EpE,UAAUqE,IAAI,uBACxB9B,EAAUE,cAAc,YAAYrN,MAAMkP,MAAQ,OAClD/B,EAAUgC,aAAaR,EAAUS,YAAajC,EAAUkC,YACnDlS,oBAAkBuR,IACnBA,EAAcS,aAAahC,EAAWuB,EAAcW,YAEpDjK,KAAKjJ,OAAOuR,oBACZtI,KAAKwI,sBAGR,IAAIxI,KAAKgJ,aAAe,GAAKhJ,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,oBAAoB/N,OAAS,EAAG,CAC9G,GACI2Q,IADAR,EAAY/H,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,UACvEzF,MAAKjJ,OAAOuR,oBAAsBC,GAClCvI,KAAKwI,gBAAgBD,KAIjCpB,EAAUlG,UAAUiJ,qBAAuB,SAAUlH,GACjD,GAAI+E,GACAwB,EAAYvJ,KAAKjJ,OAAOyS,cAAc,SAAWC,UAAW,oBAAqBC,OAASzG,KAAQ,cAClGtE,EAAOqE,EAAKrE,IAChBqE,GAAKzD,KAAKiG,UAAUqE,IAAI,sBACxB7G,EAAKzD,KAAK4K,aAAa,aAAc,WACrC,IAAI7P,IAASvC,oBAAkB4G,EAAKyL,gBAAyC,YAAvBzL,EAAKyL,aAI3D,KAHArC,EAAY4B,iBAAe3J,KAAKjJ,OAAOyS,eAAe,GAASb,QAASrO,EAAOsP,MAAO,OAC5EpE,UAAUqE,IAAI,uBACxB9B,EAAUE,cAAc,YAAYrN,MAAMkP,MAAQ,OACvB,kBAAvBnL,EAAKyL,cAAmC,CACxC,GAAIC,GAAWtC,EAAUpC,iBAAiB,YAAY,EACtD2E,gBAAaD,IAAY,UAAW,SAAU,cAC9CtC,EAAUE,cAAc,YAAYzC,UAAUqE,IAAI,UAGtD,MADA9B,GAAUgC,aAAaR,EAAUS,YAAajC,EAAUkC,YACjDlC,GAEXZ,EAAUlG,UAAUuG,eAAiB,SAAU+C,GAC3C,GAAIxC,GAAY/H,KAAKkK,qBAAqBK,GACtCC,EAAeD,EAAUhL,KAAK0I,cAAc,0BAChD,IAAKlQ,oBAAkByS,GAKlB,CACD,GAAIC,GAAUzK,KAAKjJ,OAAOyS,cAAc,QAAUC,UAAW,mBACzD9K,EAAO4L,EAAUhL,KAAKmL,SAC1BH,GAAUhL,KAAKmL,UAAY,GAC3BD,EAAQC,UAAY/L,CACpB,IAAIgM,GAAS3K,KAAKjJ,OAAOyS,cAAc,OAASC,UAAW,4BAC3DkB,GAAOC,YAAY7C,GACnB4C,EAAOC,YAAYH,GACnBF,EAAUhL,KAAKqL,YAAYD,OAZtBJ,GAAUhL,KAAK0I,cAAc,yBAC9BuC,EAAaT,aAAahC,EAAWyC,EAAa7E,iBAAiB,eAAe,KAc9FwB,EAAUlG,UAAUkH,iBAAmB,SAAU0C,GAE7C,IAAK,GAAInT,GAAI,EAAGA,EAAImT,EAAWjT,OAAQF,IAAK,CACxC,GAAIqB,GAASiH,KAAKjJ,OAAO4G,wBAAwBkN,EAAWnT,IACxDoT,EAAa1R,EAAc4G,KAAKjJ,OAAQgC,EAAOM,UAG/C+Q,EAA0C,aAF9CrR,EAAUgS,cAAsD,kBAAxC/K,KAAKjJ,OAAOC,WAAsB,YACtD+B,EAAS+R,GACeV,cAA+B,QAAU,SACrErR,GAAOqR,cAAgBA,CAEvB,KAAK,GADDzR,GAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB0Q,EAAWlO,eAAejE,EAAKyB,MAC/B0Q,EAAWnS,EAAKyB,IAAMrB,EAAOJ,EAAKyB,IAG1C4F,MAAKgL,gBAAgBjS,EAAQqR,GAAe,GACxCpK,KAAKjJ,OAAOuR,oBACZtI,KAAKwI,oBAIjBrB,EAAUlG,UAAU+J,gBAAkB,SAAUjS,EAAQqR,EAAea,GACnE,GAAIrT,GAAS,CAKb,IAJAoI,KAAKkL,oBAAoBnS,EAAQqR,IAC5Ba,GAAelS,EAAOI,YAAc6G,KAAKjJ,OAAOuR,oBACjDtI,KAAKmL,sBAAsBpS,EAAOI,YAElCJ,EAAOY,cAAgBqG,KAAKjJ,OAAOuR,mBAAoB,CACvD,GAAI3O,GAAeZ,EAAOY,cACrB5B,oBAAkBiI,KAAKjJ,OAAOqU,eAC/BpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,OAAS,GAAKoI,KAAKjJ,OAAOuR,qBAClE3O,EAAeqG,KAAKsL,wBAAwB3R,IAEhD/B,EAAS+B,EAAa/B,MACtB,KAAK,GAAI2T,GAAQ,EAAGA,EAAQ3T,EAAQ2T,IAC3B5R,EAAa4R,GAAOC,eACjB7R,EAAa4R,GAAO7R,gBACpBsG,KAAKgL,gBAAgBrR,EAAa4R,GAAQnB,GAAe,GAGzDpK,KAAKkL,oBAAoBvR,EAAa4R,GAAQnB,MAMlEjD,EAAUlG,UAAUqK,wBAA0B,SAAU3R,GACpD,GAAI8K,GAAQzE,IAIZ,OAH2BrG,GAAa2D,OAAO,SAAUC,GACrD,MAAOkH,GAAM1N,OAAOqU,aAAaC,eAAe3M,QAAQnB,IAAM,KAItE4J,EAAUlG,UAAUkK,sBAAwB,SAAUjS,GAClD,GACItB,GAAS,EACT+B,KACAZ,EAASK,EAAc4G,KAAKjJ,OAAQmC,EAAaG,SACjDN,IAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBiI,KAAKjJ,OAAOqU,eAC/BpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,OAAS,GAAKoI,KAAKjJ,OAAOuR,qBAClE3O,EAAeqG,KAAKsL,wBAAwB3R,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,MACtC,IAAI6T,GAAU,EACVC,EAAoB,CACxB,KAAK3T,oBAAkBgB,GAAS,CAkB5B,IAAK,GADD4S,GAAS3L,KACJtI,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,KAjB3B,SAAUA,GACpB,GAAIkU,GAAcD,EAAO5U,OAAO4G,wBAAwBL,OAAO,SAAUC,GACrE,MAAOA,GAAElE,WAAaM,EAAajC,GAAG2B,WAEtCwS,EAAgBzS,EAAcuS,EAAO5U,OAAQ4C,EAAajC,GAAG2B,UAC7DyS,EAAkBf,cAAwD,kBAA1CY,EAAO5U,OAAOC,WAAsB,YACpE4U,EAAY,GAAKC,CAChB9T,qBAAkB+T,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAMAhU,EAGRqB,GAAOqR,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsB9T,EACxC,gBAEI,IAAtB8T,GAAuC,IAAZD,EACT,UAGA,QAE3BzL,KAAKkL,oBAAoBnS,EAAQA,EAAOqR,eACpCrR,EAAOI,YACP6G,KAAKmL,sBAAsBpS,EAAOI,cAI9CgO,EAAUlG,UAAUuH,gBAAkB,SAAUuD,GAC5C,GAAItH,GAAQzE,KAGRpI,EAAS,EACT+G,GAAS5G,oBAAkBiI,KAAKjJ,OAAOqU,eACvCpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,OAAS,EAAKoI,KAAKjJ,OAAOqU,aAAaC,eAC/ErL,KAAKjJ,OAAOsG,QAGhB,IAFAsB,EAAQoM,cAAsD,kBAAxC/K,KAAKjJ,OAAOC,WAAsB,aAA0BF,EAAakJ,KAAKjJ,QAChGiJ,KAAKjJ,OAAO4G,wBAA0BgB,GACrC5G,oBAAkBgU,GACnB,IAAK,GAAIrU,GAAI,EAAGA,EAAIiH,EAAK/G,OAAQF,IAC7B,GAAIqU,EAAU,CACV,GAA8B,UAA1BpN,EAAKjH,GAAG0S,cACR,QAEJzL,GAAKjH,GAAG0S,cAAgB,QACxBpK,KAAKkL,oBAAoBvM,EAAKjH,GAAIiH,EAAKjH,GAAG0S,mBAGlCpK,MAAKoH,cAAc1I,QAAQC,EAAKjH,KAC3B,IACTiH,EAAKjH,GAAG0S,cAAgB,UACxBpK,KAAKkL,oBAAoBvM,EAAKjH,GAAIiH,EAAKjH,GAAG0S,eACtCpK,KAAKjJ,OAAOuR,oBACZtI,KAAKmL,sBAAsBxM,EAAKjH,MAMnC,IAAbqU,GAAsB/L,KAAKjJ,OAAOuH,uBAClC0B,KAAKoH,iBACLpH,KAAKoF,mBACLzG,EAAKrB,OAAO,SAAU0O,GAClBA,EAAI5B,cAAgB,UACpB3F,EAAMyG,oBAAoBc,EAAKA,EAAI5B,kBAG3CxS,EAASoI,KAAKoH,cAAcxP,MAC5B,IAAIyS,GAAWrK,KAAKjJ,OAAOqS,mBAAmBzD,iBAAiB,YAAY,EACvE/N,GAAS,GAAK+G,EAAK/G,OAAS,EACxBA,IAAW+G,EAAK/G,QAAWmU,GAK3BzB,eAAaD,IAAY,WACzBA,EAAS7E,UAAUqE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS7E,UAAUqE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5ClD,EAAUlG,UAAUiK,oBAAsB,SAAUW,EAAepD,EAAYnL,GAC3E,GAGI2O,GAIA5B,EAPAtR,EAASiH,KAAKjJ,OAAO4G,wBAAwBL,OAAO,SAAUC,GAC9D,MAAOA,GAAElE,WAAawS,EAAcxS,WAIpC6S,EAAclM,KAAKjJ,OAAO4G,wBAAwBe,QAAQ3F,EAAO,IACjEoT,EAAiB/S,EAAc4G,KAAKjJ,OAAQ8U,EAAcxS,SAE9D,IAAI6S,GAAe,EAAG,CAClB,GAAIE,GAAKpM,KAAKjJ,OAAOgI,UAAUmN,GAC3BG,MAAY,IACZrM,KAAKjJ,OAAOmI,YAAcc,KAAKjJ,OAAOoI,sBACtCkN,EAAYrM,KAAKjJ,OAAOuV,qBAAqBJ,IAEjD7B,EAAW+B,EAAGzG,iBAAiB,YAAY,GAAKyG,EAAGzG,iBAAiB,YAAY,GAC1E0G,EAAU1G,iBAAiB,YAAY,GACxC5N,oBAAkBsS,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA4B,EAAiBlB,cAAsD,kBAAxC/K,KAAKjJ,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKoT,EACZpU,oBAAkBkU,KAClBA,EAAgBJ,GAEpBI,EAAc7B,cAAgB3B,EACX,UAAfA,GAA0B1Q,oBAAkB8T,EAAcL,eACrC,IAAjBU,IAAqE,IAA/ClM,KAAKoF,gBAAgB1G,QAAQwN,IACnDlM,KAAKoF,gBAAgBvM,KAAKqT,IAEqB,IAA/ClM,KAAKoH,cAAc1I,QAAQuN,KAA2C,IAAjBC,IACnDnU,oBAAkBiI,KAAKjJ,OAAOqU,eAAiBpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,OAAS,GAClGoI,KAAKoH,cAAcvO,KAAKoT,IAEuB,IAA/CjM,KAAKoH,cAAc1I,QAAQuN,IAA2BlU,oBAAkBiI,KAAKjJ,OAAOqU,eACjC,IAAnDpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,QACxCoI,KAAKoH,cAAcvO,KAAKoT,IAEuB,IAA/CjM,KAAKoH,cAAc1I,QAAQuN,IAAyBlU,oBAAkBiI,KAAKjJ,OAAOqU,eAClFpL,KAAKoH,cAAcvO,KAAKoT,OAG3B,KAAoB,YAAfxD,GAA2C,kBAAfA,IAAmC1Q,oBAAkB8T,EAAcL,cAAe,CACpH,GAAIjR,GAAQyF,KAAKoH,cAAc1I,QAAQuN,EAIvC,KAHe,IAAX1R,GACAyF,KAAKoH,cAAcpK,OAAOzC,EAAO,IAEc,IAA/CyF,KAAKoF,gBAAgB1G,QAAQwN,GAAqB,CAClD,GAAIK,GAAevM,KAAKoF,gBAAgB1G,QAAQwN,EAChDlM,MAAKoF,gBAAgBpI,OAAOuP,EAAc,IAGlD,GAAIC,GAA+B,kBAAf/D,EAAiC,SAAW,KAAOA,CACnEyD,IAAe,IACVnU,oBAAkBsS,IACnBA,EAAS7E,UAAUqE,IAAI2C,KAInCrF,EAAUlG,UAAUwG,kBAAoB,SAAUzE,GAC9C,GAEIiE,GACAwF,EAHAhI,EAAQzE,KACRH,EAAcmD,EAAKnD,WAGvB,IAAIpI,EAAiBuI,KAAKjJ,SAClBiJ,KAAKjJ,OAAOuR,mBACZ,GAAqB,YAAhBzI,GAA6C,WAAhBA,EAA2B,CACzD,GAAIqF,GAAOlF,KAAKjJ,OAAOiB,KAAK+G,SAE5B0N,IADAxF,EAAYjH,KAAKjJ,OAAO4G,yBACA/F,OACxBoI,KAAKoF,kBACL,KAAS1N,EAAI,EAAGA,EAAI+U,EAAa/U,IACxBwN,EAAKxN,GAAG8N,UAAUC,SAAS,iBAC5BzF,KAAKkL,oBAAoBjE,EAAUvP,GAAIuP,EAAUvP,GAAG0S,eAAe,OAI1E,IAAoB,WAAhBvK,GAA4C,QAAhBmD,EAAKtH,OAAkB,CACxD,GAAIgR,KACgB,YAAhB7M,EACA6M,EAAc1J,EAAKrE,KAGnB+N,EAAY7T,KAAKmK,EAAKrE,KAE1B,KAAK,GAAIjH,GAAI,EAAGA,EAAIgV,EAAY9U,OAAQF,IAAK,CACzC,GAAoB,WAAhBmI,EAA0B,CAC1B,GAAItF,GAAQyF,KAAKjJ,OAAOsG,SAASqB,QAAQgO,EAAYhV,IACjD6U,EAAevM,KAAKoF,gBAAgB1G,QAAQnE,EAChDyF,MAAKoF,gBAAgBpI,OAAOuP,EAAc,GAC1CvM,KAAKkL,oBAAoBwB,EAAYhV,GAAI,WAExCK,oBAAkB2U,EAAYhV,GAAGyB,aAClC6G,KAAKmL,sBAAsBuB,EAAYhV,GAAGyB,iBAIxB,QAArB6J,EAAKnD,aAAyBG,KAAKjJ,OAAOuR,mBAC/CtF,EAAKrE,KAAKyL,cAAgB,WAEL,cAAhBvK,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/D/I,EAAakJ,KAAKjJ,WACtBiJ,KAAKoH,iBACLpH,KAAKoF,oBACL6B,GAAclP,oBAAkBiI,KAAKjJ,OAAOqU,eAAiBpL,KAAKjJ,OAAOqU,aAAaC,eAAezT,OAAS,EAC1GoI,KAAKjJ,OAAO4G,wBAA0BqC,KAAKjJ,OAAOsG,UAC5CsP,QAAQ,SAAU5T,GACpBA,EAAOW,gBACP+K,EAAM0G,sBAAsBpS,GAG5B0L,EAAMyG,oBAAoBnS,EAAQA,EAAOqR,iBAGjDpK,KAAKwI,oBAKrBrB,EAAUlG,UAAU2L,kBAAoB,WACpC,MAAO5M,MAAKoH,eAEhBD,EAAUlG,UAAU4L,qBAAuB,WACvC,MAAO7M,MAAKoF,iBAET+B,KCrbP2F,EAAuB,WAIvB,QAASA,GAAM/V,GACXiJ,KAAKjJ,OAASA,EACd0L,OAAKC,OAAOqK,SACZ/M,KAAKqH,mBAqCT,MA/BAyF,GAAM7L,UAAU4B,cAAgB,WAC5B,MAAO,SAKXiK,EAAM7L,UAAUoG,iBAAmB,WAC/BrH,KAAKjJ,OAAOiB,KAAKsP,GFsBE,iBEtBuBtH,KAAKgN,cAAehN,OAElE8M,EAAM7L,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAOiB,KAAK6P,IFmBE,iBEnBwB7H,KAAKgN,gBAEpDF,EAAM7L,UAAU+L,cAAgB,SAAUC,GACtC,GAAIjV,GAAOY,YAAU,YAAaqU,GAC9BC,EAActU,YAAU,UAAWqU,EACvCjV,GAAKqP,iBF1Bc,gBE0ByBrH,KAAKjJ,OAAOiB,KAAKmV,eAC7DnV,EAAKqP,iBF/Ba,eE+ByBrH,KAAKjJ,OAAOiB,KAAKoV,cAC5DpV,EAAKqP,iBF1BgB,kBE0ByBrH,KAAKjJ,OAAOiB,KAAKqV,iBAC/DC,YAAUJ,GAAc,eAE5BJ,EAAM7L,UAAUsM,MAAQ,WACpBvN,KAAKjJ,OAAOiB,KAAKuV,SAOrBT,EAAM7L,UAAU+F,QAAU,WACtBhH,KAAK2H,uBAEFmF,KCnDPrM,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5D+L,EAAgC,SAAUzL,GAE1C,QAASyL,KACL,MAAkB,QAAXzL,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,MAnBAS,GAAU+M,EAAgBzL,GAI1BZ,GACIc,cACDuL,EAAevM,UAAW,aAAU,IACvCE,GACIc,YAAS,IACVuL,EAAevM,UAAW,iBAAc,IAC3CE,GACIc,WAAS,aACVuL,EAAevM,UAAW,eAAY,IACzCE,GACIc,cACDuL,EAAevM,UAAW,UAAO,IACpCE,GACIc,cACDuL,EAAevM,UAAW,oBAAiB,IACvCuM,GACTtL,iBC5CEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5DgM,EAAmC,SAAU1L,GAE7C,QAAS0L,KACL,MAAkB,QAAX1L,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,MAzBAS,GAAUgN,EAAmB1L,GAI7BZ,GACIc,WAAS,QACVwL,EAAkBxM,UAAW,WAAQ,IACxCE,GACIc,WAAS,SACVwL,EAAkBxM,UAAW,wBAAqB,IACrDE,GACIc,WAAS,WACVwL,EAAkBxM,UAAW,WAAQ,IACxCE,GACIc,YAAS,IACVwL,EAAkBxM,UAAW,uBAAoB,IACpDE,GACIc,WAAS,YACVwL,EAAkBxM,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACVwL,EAAkBxM,UAAW,mBAAgB,IAChDE,GACIc,YAAS,IACVwL,EAAkBxM,UAAW,mBAAgB,IACzCwM,GACTvL,iBCzCEwL,EAAwB,WAIxB,QAASA,GAAO3W,GACZiJ,KAAKjJ,OAASA,EACdiJ,KAAK2N,eAAiB,KACtB3N,KAAKjJ,OAAOiB,KAAKsP,GAAG,kBAAmBtH,KAAK4N,qBAAsB5N,MAClEA,KAAKjJ,OAAOiB,KAAKsP,GAAG,sBAAuBtH,KAAK6N,oBAAqB7N,MA4OzE,MAvOA0N,GAAOzM,UAAU6M,YAAc,SAAU9K,GACrC,GAAKA,EAAKrE,KAAV,CAGA,GAAIA,GAAOqE,EAAKrE,KACZvB,EAAauB,EAAKxF,UAgBtB,IAdKpB,oBAAkB4G,EAAKxF,aAAgBrB,EAAuBkI,KAAKjJ,SACjEiJ,KAAKjJ,OAAOgX,aAA2D,SAA1C/N,KAAKjJ,OAAOiX,aAAaC,gBACpDnX,EAAakJ,KAAKjJ,SAAY8C,EAAUmG,KAAKjJ,UAUzCiM,EAAKnE,IAAIwK,aAAa,kBATvB1K,EAAKxF,WAAWoB,OACPyF,KAAKjJ,OAAOuC,kBAAoBvB,oBAAkBqF,EAAW4C,KAAKjJ,OAAOwC,sBACtF6D,EAAW4C,KAAKjJ,OAAOwC,sBAAwByG,KAAKjJ,OAAOmX,qBAC1DpV,EAAgBkH,KAAKjJ,OAAQiM,EAAKrE,KAAMqB,KAAKjJ,OAAOiB,KAAK2F,4BAE1DqF,EAAKnE,IAAIjE,MAAMG,QAAU,SAM7BjE,EAAakJ,KAAKjJ,UAAY8C,EAAUmG,KAAKjJ,QAAS,CACtD,GAAIoX,GAAUnO,KAAKjJ,OACfqX,EAAYpO,KAAKjJ,OAAO4G,wBAAwBL,OAAO,SAAU0O,GACjE,MAAOzN,YAAS4P,EAAQpR,UAAWiP,KAASzN,WAAS4P,EAAQrR,gBAAiB6B,IAElF,IAAIyP,EAAUxW,OAAS,EAAG,CACtB,GAAImD,GAAUqT,EAAU,GAAG5U,SAAW,YAAc,MACpDwJ,GAAKnE,IAAIsL,aAAa,QAAS,YAAcpP,EAAU,MAI9CnC,YAAU,eAAgBoK,EAAKrE,OAE5C2O,YAAUtK,EAAKnE,KAAM,gBAErBmE,EAAKnE,IAAIoJ,cAAc,qBACvBjF,EAAKnE,IAAIsL,aAAa,gBAAiB,QAElCnH,EAAKnE,IAAIoJ,cAAc,wBAC5BjF,EAAKnE,IAAIsL,aAAa,gBAAiB,SAEvCnK,KAAKjJ,OAAOmX,mBAAqBlO,KAAKjJ,OAAOuC,gBACxCvB,oBAAkB4G,EAAKxF,cACxB6J,EAAKnE,IAAIjE,MAAMG,QAAU,SAGjCiF,KAAKjJ,OAAOsP,QLhEM,eKgEuBrD,KAK7C0K,EAAOzM,UAAU3B,WAAa,SAAU0D,GACpC,GAAKA,EAAKrE,KAAV,CAGA,GAEIpE,GAIA8T,EANArW,EAAOgI,KAAKjJ,OAAOiB,KACnB2G,EAAOqE,EAAKrE,KAGZ2P,EADcvW,oBAAkB4G,EAAK4P,aACjB5P,EAAKnE,MAAQmE,EAAK4P,YACtCC,EAAkB,EAElB7O,EAASK,KAAKjJ,OAAO0X,eAAezL,EAAKrD,OAAOuJ,KAChDwF,EAAa/P,EAAK6M,YAOtB,IAFIjR,EAJCxC,oBAAkB4G,EAAKxF,YAIhBwF,EAAKpE,MAHLoE,EAAKxF,WAAWoB,MAKxBvC,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO0I,kBACjC,QAArBuD,EAAKnD,aAA8C,WAArBmD,EAAKnD,aAA4B9H,oBAAkBiL,EAAKzD,KAAK0I,cAAc,iBAAkB,CAM/H,IAAK,GALDsC,GAAYf,gBAAc,OAASC,UAAW,2BAC9CmF,EAAkBpF,gBAAc,QAChCC,UAAW,iBACXoF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIR,EAAKQ,IACrBN,GAAmB,GACnBjE,EAAUK,YAAYgE,EAAgB5E,YAE1C,IAAI+E,GAAgBhX,oBAAkB4G,EAAKqQ,yBACNrQ,EAAKjF,gBAApCiF,EAAKqQ,uBAIX,IAHID,IAAiBhX,oBAAkB4G,EAAKhF,gBACxCoV,IAA8C,IAA7BpQ,EAAKhF,aAAa/B,SAEnCmX,EAAc,CACdzB,YAAUtK,EAAKzD,MAAO,gBACtB,IAAI0P,GAAazF,gBAAc,QAAUC,UAAW,YAChDyF,MAAS,EAETA,GADAlP,KAAKjJ,OAAOuC,cACHqF,EAAKnF,WACTzB,oBAAkB4G,EAAKqB,KAAKjJ,OAAOwC,sBAAwBoF,EAAKqB,KAAKjJ,OAAOwC,uBAC5EyG,KAAKjJ,OAAOmX,qBAGLvP,EAAKnF,WAAaV,EAAgBkH,KAAKjJ,OAAQ4H,EAAMqB,KAAKjJ,OAAOiB,KAAK2F,0BAEtF2P,YAAU2B,GAAa,EAAW,mBAAqB,sBACvDT,GAAmB,GACnBjE,EAAUK,YAAYqE,GACtBL,EAAgBhU,MAAMkP,MAAQ,MAC9B0E,GAAmB,EACnBjE,EAAUK,YAAYgE,EAAgB5E,kBAEjCsE,IAAQA,IAAQ3P,EAAKnE,SAE1BgU,GAAmB,GACnBjE,EAAUK,YAAYgE,EAAgB5E,aACtCO,EAAUK,YAAYgE,EAAgB5E,aAM1CqE,GAAc7E,gBAAc,QAAUC,UAAW,eAC7CzJ,KAAKjJ,OAAOoY,gBACZd,EAAYzT,MAAMkP,MAAQ,eAAiB0E,EAAkB,OAEjElB,YAAUtK,EAAKzD,MAAO,iBAAmBhF,EAAQ,QAAUoE,EAAKnE,OAChEwF,KAAKoP,eAAepM,EAAMqL,EAAa9D,GACvCA,EAAUK,YAAYyD,GACtBrL,EAAKzD,KAAKqL,YAAYL,GAe1B,GAbIvK,KAAKjJ,OAAO2I,cAAgBM,KAAKjJ,OAAO0I,iBAAmBO,KAAKjJ,OAAO2I,cAAgB,GACvF1H,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO2I,cAC1D4N,YAAUtK,EAAKzD,MAAO,iBAAmBhF,EAAQ,QAAUoE,EAAKnE,OAE3DwF,KAAKjJ,OAAO2I,cAAgBM,KAAKjJ,OAAO0I,iBAAmBO,KAAKjJ,OAAO2I,cAAgB,IAC3F1H,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO2I,eACpD1H,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO2I,cAAgB,GACjF4N,YAAUtK,EAAKzD,MAAO,iBAAmBhF,EAAQ,QAAUoE,EAAKnE,OAE3DwF,KAAKjJ,OAAO2I,gBAAkBM,KAAKjJ,OAAO0I,iBAAmBO,KAAKjJ,OAAO2I,cAAgB,GAC9F1H,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO0I,gBAAkB,GAC5E6N,YAAUtK,EAAKzD,MAAO,iBAAmBhF,EAAQ,QAAUoE,EAAKnE,QAE/DzC,oBAAkB4H,IAAWA,EAAO9H,eACrCmI,KAAKjJ,OAAOsY,OAAO,iBAAkBrM,GACjChD,KAAKjJ,OAAOoY,eAAe,CAC3B,GAAIG,GAAkBtM,EAAKzD,KAAKoG,iBAAiB,YAAY,EAE7D6I,IADYe,SAASD,EAAgB1U,MAAMkP,MAAO,IAElD0E,GAAmB,IAEfH,EADArW,EAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO0I,gBAC5CuD,EAAKzD,KAAK0I,cAAc,eAGxBjF,EAAKzD,KAAK0I,cAAc,oBAE9BrN,MAAMkP,MAAQ,eAAiB0E,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUtK,EAAKzD,MAAO,gBACtB,IAAIiQ,GAAc5W,YAAUoK,EAAKrD,OAAO2E,MAAOtB,EAAKrE,KACV,OAA1CqE,EAAKzD,KAAK0I,cAAc,eACpBjF,EAAKzD,KAAK0I,cAAc,eAAeyC,UAAY8E,EAAcxM,EAAKzD,KAAKmL,UAAY8E,EAE3FzX,oBAAkBiI,KAAKjJ,OAAO0Y,cAC9BzP,KAAKjJ,OAAOsP,QL9KG,gBK8K2BrD,KAGlD0K,EAAOzM,UAAUmO,eAAiB,SAAUpM,EAAMqL,EAAa9D,GAC3D,GAAImF,GAAa1P,KAAKjJ,OAAOY,QAAQqI,KAAKjJ,OAAO0I,iBAE7CkQ,EAAW3M,EAAKrD,OAAOpF,KACvBxC,qBAAkB2X,EAAWpL,QAC7BtB,EAAKzD,KAAK4K,aAAa,gBAAiBwF,EAAW,IAEnDD,EAAWpL,QAAUtB,EAAKrD,OAAO2E,OAAUvM,oBAAkB2X,EAAWE,WAAc7E,eACtF/H,EAAKrD,OAAOiQ,SAAWF,EAAWE,SAClC5M,EAAKrD,OAAiB,WAAIkQ,mBAAiB7M,EAAKrD,OAAOiQ,UACvD5M,EAAKzD,KAAKiG,UAAUqE,IAAI,kBAE5B,IAAIiG,GAAwD,MAA1C9M,EAAKzD,KAAK0I,cAAc,eACtCjF,EAAKzD,KAAK0I,cAAc,eAAeyC,UAAY1H,EAAKzD,KAAKmL,SACjE,IAAsC,gBAA1B1H,GAAKrD,iBAAiCK,KAAK2N,eACnDoC,iBAAe1B,EAAarO,KAAK2N,gBACjC3N,KAAK2N,eAAiB,KACtB3K,EAAKzD,KAAKmL,UAAY,OAErB,IAAI1H,EAAKzD,KAAKiG,UAAUC,SAAS,kBAAmB,CACrD,GAAIhN,GAAMuK,EAAKzD,KAAKyQ,SAASpY,OACzBqY,EAASjQ,KAAKjJ,OAAOmZ,QAAQC,GAAKnN,EAAKrD,OAAOuJ,GAClD,IAAIwG,EAAWpL,QAAUtB,EAAKrD,OAAO2E,OAAUvM,oBAAkB2X,EAAWE,UAqBxE,KAAa,EAAOnX,EAAKA,EAAMuK,EAAKzD,KAAKyQ,SAASpY,OAC9CyW,EAAYzD,YAAY5H,EAAKzD,KAAKyQ,SADzB,QArBsE,CAGnF,GAAIhQ,KAAKjJ,OAAOqZ,QACZpN,EAAKrD,OAAiB,WAAEqD,EAAKrE,KAAMqB,KAAKjJ,OAAQ,WAAYkZ,EAAQ,KAAM,KAAM5B,GAC5EtW,oBAAkBiI,KAAKjJ,OAAOiB,KAAY,WAC1CgI,KAAKjJ,OAAOiB,KAAY,QAAIgI,KAAKjJ,OAAc,SAEnDiJ,KAAKjJ,OAA2B,2BAE/B,CACD,GACIsZ,OAAS,EACbA,GAASrN,EAAKrD,OAAiB,WAAEnD,UAASjC,MAAS,IAAMyI,EAAKrE,MAAOqB,KAAKjJ,OAAQ,WAAYkZ,EAAQjQ,KAAKjJ,OAAU,kBACrHgZ,iBAAe1B,EAAagC,SAEzBrN,GAAKrD,OAAOiQ,eACZ5M,GAAKrD,OAAiB,WAC7BqD,EAAKzD,KAAKmL,UAAY,QAS1B2D,GAAY3D,UAAYoF,EACxB9M,EAAKzD,KAAKmL,UAAY,IAG9BgD,EAAOzM,UAAU2M,qBAAuB,SAAU5K,GAC9ChD,KAAK2N,eAAiB3K,EAAK4M,UAE/BlC,EAAOzM,UAAU4M,oBAAsB,SAAU7K,GAG7ChD,KAAKjJ,OAAc,QAAIiM,EACvBhD,KAAKjJ,OAAOsY,OAAO,sBAAuBrP,KAAKjJ,OAAc,SAC7DiJ,KAAKjJ,OAA2B,wBAEpC2W,EAAOzM,UAAU+F,QAAU,WACvBhH,KAAKjJ,OAAOiB,KAAK6P,IAAI,kBAAmB7H,KAAK4N,sBAC7C5N,KAAKjJ,OAAOiB,KAAK6P,IAAI,sBAAuB7H,KAAK6N,sBAE9CH,KCnPP4C,EAAkC,WAClC,QAASA,GAAiBtY,GACtBgI,KAAKuQ,aAAe,eACpBvQ,KAAKjJ,OAASiB,EACdgI,KAAKwQ,eACLxQ,KAAKyQ,WACLzQ,KAAK0Q,iBACL1Q,KAAK2Q,aAAe,EACpB3Q,KAAK4Q,cACL5Q,KAAK6Q,cAAe,EACpB7Q,KAAKqH,mBACLrH,KAAK8Q,eACL9Q,KAAK5E,iBAAmBrD,oBAAkBiI,KAAKjJ,OAAO+F,iBA8hB1D,MAzhBAwT,GAAiBrP,UAAUoG,iBAAmB,WAC1CrH,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAK+Q,uBAAwB/Q,MACjEA,KAAKjJ,OAAOiB,KAAKsP,GAAG,gBAAiBtH,KAAKgR,aAAchR,MACxDA,KAAKjJ,OAAOuQ,GAAG,eAAgBtH,KAAKiR,WAAYjR,MAChDA,KAAKjJ,OAAOuQ,GNYM,eMZkBtH,KAAKkR,qBAAsBlR,MAC/DA,KAAKjJ,OAAOuQ,GAAG,gBAAiBtH,KAAKmR,cAAenR,OAKxDsQ,EAAiBrP,UAAU0G,oBAAsB,WACzC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,INEM,eMFmB7H,KAAKkR,sBAC1ClR,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAK+Q,wBAC1C/Q,KAAKjJ,OAAO8Q,IAAI,eAAgB7H,KAAKiR,YACrCjR,KAAKjJ,OAAO8Q,IAAI,gBAAiB7H,KAAKmR,eACtCnR,KAAKjJ,OAAOiB,KAAK6P,IAAI,gBAAiB7H,KAAKgR,gBAO/CV,EAAiBrP,UAAU+F,QAAU,WACjChH,KAAK2H,uBAGT2I,EAAiBrP,UAAUmQ,SAAW,WAClC,MAAMpR,MAAKjJ,OAAOC,qBAAsBC,gBAW5CqZ,EAAiBrP,UAAUoQ,kBAAoB,SAAU1S,GACrD,GAAI8F,GAAQzE,IACZA,MAAKjJ,OAAOsG,SAAyC,IAA7B3E,OAAOC,KAAKgG,GAAM/G,QAAkBoI,KAAKjJ,OAAOC,qBAAsBC,kBAC1F+I,KAAKjJ,OAAOC,WAChBgJ,KAAKjJ,OAAOqG,aAEZ,IAAKtG,EAAakJ,KAAKjJ,UAAY8C,EAAUmG,KAAKjJ,SAAY4H,YAAgB1H,kBAAiB0H,YAAgBpC,QAAQ,CACnH,GAAIzC,GAAKkG,KAAKjJ,OAAOC,UACrB,IAAIgJ,KAAKjJ,OAAO+F,gBAAiB,CAG7B,GAFAkD,KAAKjJ,OAAOua,MAAQvZ,oBAAkBiI,KAAKjJ,OAAOua,OAC9C,GAAIC,SAAUvR,KAAKjJ,OAAOua,MAC1BtR,KAAKjJ,OAAO+F,gBAAiB,CAC7B,GAAI0U,GAAYxR,KAAKjJ,OAAOua,MAAMG,OAAOnU,OAAO,SAAUoU,GAAS,MAAqB,cAAdA,EAAMxZ,KAC5E8H,MAAKjJ,OAAOuC,gBAAkBkY,EAAU5Z,SACxCoI,KAAKjJ,OAAOua,MAAMK,MAAM3R,KAAKjJ,OAAO+F,gBAAiB,QAAS,MAC9DkD,KAAKjJ,OAAOua,MAAMM,UAAU,YAAa5R,KAAKjJ,OAAOgG,YAI7D,IAAKiD,KAAKjJ,OAAO8a,kBAA6D,kBAAxC7R,KAAKjJ,OAAOC,WAAsB,aAA0BgJ,KAAKjJ,OAAmB,gBAAI,CAC1H,GAAI+a,GAAM9R,KAAKjJ,OAAOua,MAAMS,OAC5BD,GAAIE,YACJF,EAAMA,EAAIpL,QAAQ1G,KAAKjJ,OAAO+F,mBAC1BtF,iBAAkB,EACtBsC,EAAGmY,aAAaH,GAAKI,KAAK,SAAU3U,GAChCkH,EAAM+L,YAAc2B,WAASC,SAAS7U,EAAE8S,OAAQ5L,EAAM1N,OAAO+F,iBAAiB,GAIlE,IAHFlE,YAAU,sBAAuB6L,EAAM1N,QAAQuG,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE8U,YAAYC,aACtB1a,SAEC2a,WAAS,+BAA+B,EAAM9N,EAAM1N,QAC/CgB,oBAAkB0M,EAAM+N,mBACzBD,WAAS,UAAU,EAAO9N,EAAM+N,iBAChCjU,WAAS,oBAAqBkG,EAAM1N,QAAQ0b,mBAAmBhO,EAAM+N,iBACrE/N,EAAM+N,gBAAkB,MAE5B/N,EAAM1N,OAAOiB,KAAK0a,uBAM7B/T,aAAgBpC,QACrByD,KAAK2S,gBAAgBhU,IAG7B2R,EAAiBrP,UAAU0R,gBAAkB,SAAUhU,GAGnD,GAFAqB,KAAK0Q,iBACL1Q,KAAKyQ,WACAzQ,KAAKjJ,OAAOgG,UAIb,IAASrF,EAAI,EAAGA,EAAIgB,OAAOC,KAAKgG,GAAM/G,OAAQF,IAAK,CAC/C,GAAIkb,GAAWjU,EAAKjH,EACpBsI,MAAK0Q,cAAc7X,KAAK2D,YAAWoW,IAC9B7a,oBAAkB6a,EAAS5S,KAAKjJ,OAAOgG,aACxCiD,KAAKyQ,QAAQ5X,KAAK+Z,EAAS5S,KAAKjJ,OAAOgG,gBAP/CiD,MAAK0Q,cAAgB/R,CAWzB,IAAIqB,KAAK5E,gBAAiB,CAItB,IAAK,GAHDyX,MACAC,EAAc,GAAI7b,eAAY+I,KAAK0Q,eAAeqC,cAAa,GAAIxB,UAClEyB,MAAMhT,KAAKjJ,OAAO+F,kBACdpF,EAAI,EAAGA,EAAIob,EAAYlb,OAAQF,IAAK,CACzC,GAAIub,GAAYH,EAAYpb,GACxB6C,EAAQyF,KAAKyQ,QAAQ/R,QAAQuU,EAAU/a,IAC3C,KAAKH,oBAAkBkb,EAAU/a,MACzBqC,GAAS,EADjB,CAEQ,GAAI0M,GAAagM,EAAgB,KACjCjT,MAAK0Q,cAAcnW,GAAOyF,KAAKjJ,OAAOkG,cAAgBgK,MAI9D4L,GAASha,KAAKmJ,MAAM6Q,EAAUI,EAAUC,OAE5ClT,KAAK0Q,cAAgB1Q,KAAKmT,oBAAoBN,GAElD,GAAKna,OAAOC,KAAKqH,KAAK0Q,eAAe9Y,OAMjCoI,KAAKoT,cAAcpT,KAAK0Q,mBANiB,CACzC,GACI2C,KAAkBrT,KAAKjJ,OAAOC,qBAAsBC,iBAAgB+I,KAAKjJ,OAAc,OAC3FiJ,MAAKjJ,OAAOsG,SAAWgW,EAAiBrT,KAAKjJ,qBAKjDiJ,KAAK2Q,aAAe,GAYxBL,EAAiBrP,UAAUkS,oBAAsB,SAAUN,GAEvD,IADA,GAAIxC,MACGrQ,KAAK0Q,cAAc9Y,OAAS,GAAKib,EAASjb,OAAS,GAAG,CACzD,GAAI2C,GAAQsY,EAASnU,QAAQsB,KAAK0Q,cAAc,KACjC,IAAXnW,EACAyF,KAAK0Q,cAAc4C,SAGnBjD,EAAOxX,KAAKmH,KAAK0Q,cAAc4C,SAC/BT,EAAS7V,OAAOzC,EAAO,IAG/B,MAAO8V,IAMXC,EAAiBrP,UAAU8P,uBAAyB,SAAU/N,GAC1D,GAAIzK,GAAUyK,EAAKqN,MAGnB,IAAKrQ,KAAKjJ,OAAO8a,iBAAoB7R,KAAKwQ,YAAY5Y,QACP,kBAAxCoI,KAAKjJ,OAAOC,WAAsB,cAA0BgJ,KAAKjJ,OAAmB,gBAAOiJ,KAAKjJ,OAAOwc,kBAK1G,GAA8C,kBAAxCvT,KAAKjJ,OAAOC,WAAsB,cAA0BgJ,KAAKjJ,OAAmB,gBAAOiJ,KAAKjJ,OAAOwc,kBAgBpGxb,oBAAkBQ,IACnByH,KAAKqR,kBAAkB9Y,OAhB3B,KAAK,GAAIyT,GAAM,EAAGA,EAAMzT,EAAQX,OAAQoU,IAChCjU,oBAAkBQ,EAAQyT,GAAKzR,SAC/BhC,EAAQyT,GAAKrP,SAAWH,YAAWjE,EAAQyT,IAC3CzT,EAAQyT,GAAK3S,SAAWma,SAAOxT,KAAKjJ,OAAOmZ,QAAQC,GAAK,UACxDoC,WAAS,sBAAwBha,EAAQyT,GAAK3S,SAAUd,EAAQyT,GAAMhM,KAAKjJ,QAC3EwB,EAAQyT,GAAKxR,MAAQ,EACrBjC,EAAQyT,GAAKzR,MAAQkZ,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bpb,EAAQyT,GAAKhM,KAAKjJ,OAAO8a,mBAAuF,IAAnE7R,KAAKwQ,YAAY9R,QAAQnG,EAAQyT,GAAKhM,KAAKjJ,OAAOgG,eAChGxE,EAAQyT,GAAKtS,iBAAkB,GAEnCnB,EAAQyT,GAAK5B,cAAgB,eAfzCpK,MAAKwS,gBAAkBxP,EACvBuP,WAAS,UAAU,EAAMvP,EAwB7BA,GAAKqN,OAAkD,kBAAxCrQ,KAAKjJ,OAAOC,WAAsB,cAA0BgJ,KAAKjJ,OAAmB,iBAAMgB,oBAAkBQ,IACpHyH,KAAKjJ,OAAOwc,kBAAoBvT,KAAKjJ,OAAOsG,SAAW9E,EAC9DyH,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,IAMxCsN,EAAiBrP,UAAUiQ,qBAAuB,SAAU0C,EAAYC,GACpE,GAAIC,GAAW9T,KAAKjJ,OAAOgI,SAC3B,IAAIiB,KAAKjJ,OAAO0Y,YAAa,CACzB,GAAIvK,GAAOlF,KAAKjJ,OAAOgd,kBAAkB7O,IACzC4O,MAAcpO,MAAM9C,KAAKsC,GAE7B,GAAI0G,EAGJ,IAAIgI,EAAW1O,KAAKtN,OAAS,EAAG,CACvBic,IACDD,EAAW7a,OAAOS,UAAW,EAEjC,KAAK,GAAI9B,GAAI,EAAGA,EAAIkc,EAAW1O,KAAKtN,OAAQF,IAAK,CAQ7C,GAPIqT,cAAc/K,KAAKjJ,OAAOid,kBAC1B1J,eAAasJ,EAAW1O,KAAKxN,IAAK,sBAClC4V,YAAUsG,EAAW1O,KAAKxN,IAAK,sBAG/Bkc,EAAW1O,KAAKxN,GAAGkD,MAAMG,QAAU,YAElCgQ,cAAuD,kBAAxC/K,KAAKjJ,OAAOC,WAAsB,cAA0BgJ,KAAKjJ,OAAmB,gBACjGiJ,KAAKjJ,OAAOwc,kBAAmB,CAClC,GAAIU,GAAYL,EAAW1O,KAAKxN,GAAGwc,uBAAuB,sBAAsB,EAChFtI,GAAc5L,KAAKjJ,OAAO0Y,YAAczP,KAAKjJ,OAAOiB,KAAK2F,wBAAwBiW,EAAW1O,KAAKxN,GAAGoP,UAChG9G,KAAKjJ,OAAOiB,KAAKmc,oBAAoBP,EAAW1O,KAAKxN,GAAG2R,aAAa,aAAa1K,MACjF5G,oBAAkBkc,IAAcrI,EAAYpS,WAC7C8T,YAAU2G,GAAY,oBACtB3J,eAAa2J,GAAY,sBAE7B,IAAIG,OACJA,EAAYN,EAASxW,OAAO,SAAUmE,GAClC,MAAOA,GAAEwG,cAAc,kBAAoB2D,EAAYrR,MAAQ,SAAWqR,EAAYpR,MAAQ,OAEpF5C,QAAUgU,EAAYpS,UAChCwG,KAAKkR,sBAAuBnY,OAAQ6S,EAAa1G,KAAMkP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,GAAIC,GAAcV,EAAW1O,KAAKxN,GAAGuQ,cAAc,uBAC9ClQ,qBAAkBuc,IACnBtU,KAAKjJ,OAAOiB,KAAKuc,gBAAgBrF,OAAOoF,QAKhDtU,MAAKwU,sBAAuBzb,OAAQ6a,EAAW7a,OAAQmM,KAAM0O,EAAW1O,KAAMmP,UAAWT,EAAWS,aAG5G/D,EAAiBrP,UAAUuT,qBAAuB,SAAUZ,EAAYC,GACpE,GAAIpP,GAAQzE,KACRgD,GAASnE,IAAK+U,EAAWS,UAAW1V,KAAMiV,EAAW7a,QACrDe,EAAKkG,KAAKjJ,OAAOC,WACjB8a,EAAM9R,KAAKjJ,OAAOiB,KAAKyc,gBAAgBC,gBACvCC,EAAc7C,EAAIE,QAAQ1U,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEqX,IAA4B,YAATrX,EAAEqX,IAClF9C,GAAIE,QAAU2C,EACd7C,EAAIta,iBAAkB,EACtBsa,EAAIH,MAAM3R,KAAKjJ,OAAO+F,gBAAiB,QAAS8W,EAAW7a,OAAOiH,KAAKjJ,OAAOgG,YAC9E8X,cAAY7U,KAAKjJ,OAAOmZ,SACxBpW,EAAGmY,aAAaH,GAAKI,KAAK,SAAU3U,GAChC,GAAI/E,GAAQiM,EAAM1N,OAAOiB,KAAK8c,gBAC1BC,EAAMvc,EAAMkG,QAAQkV,EAAW7a,SACtB,IAATgc,GACAtQ,EAAM1N,OAAOiB,KAAKgd,gBAAgBrI,QAAQ,SAAUzH,GAC5CA,EAAKvG,KAAKtF,WAAaua,EAAW7a,OAAOM,WACzC0b,EAAM7P,EAAK3K,QAIvB,IAAI0a,GAAYrc,YAAU,mBAAoB2E,GAC1C8S,EAAS9S,EAAE8S,MACfuD,GAAW7a,OAAOY,aAAe0W,CACjC,KAAK,GAAI5O,GAAI,EAAGA,EAAI4O,EAAOzY,OAAQ6J,IAAK,CACpC4O,EAAO5O,GAAG9E,SAAWH,YAAW6T,EAAO5O,IACvC4O,EAAO5O,GAAGjH,MAAQoZ,EAAW7a,OAAOyB,MAAQ,EAC5C6V,EAAO5O,GAAGlH,MAAQkZ,KAAKC,KAAqB,IAAhBD,KAAKE,SACjC,IAAIvW,GAAaZ,YAAWoX,EAAW7a,cAChCqE,GAAWzD,aAClB0W,EAAO5O,GAAGtI,WAAaiE,EACvBiT,EAAO5O,GAAGjD,eAAiBoV,EAAW7a,OAAOM,SAC7CgX,EAAO5O,GAAGpI,SAAWma,SAAO/O,EAAM1N,OAAOmZ,QAAQC,GAAK,UACtDE,EAAO5O,GAAG2I,cAAgB,UAC1BmI,WAAS,sBAAwBlC,EAAO5O,GAAGpI,SAAUgX,EAAO5O,GAAIgD,EAAM1N,SAEjEsZ,EAAO5O,GAAGgD,EAAM1N,OAAO8a,mBAAsF,IAAlEpN,EAAM+L,YAAY9R,QAAQ2R,EAAO5O,GAAGgD,EAAM1N,OAAOgG,aACxFkY,IAAcA,EAAUxT,KAC7B4O,EAAO5O,GAAG/H,iBAAkB,EAC5B2W,EAAO5O,GAAGjI,UAAW,GAEzBhB,EAAMwE,OAAO+X,EAAMtT,EAAI,EAAG,EAAG4O,EAAO5O,IAMxC,GAJA8Q,WAAS,SAAU/Z,EAAO+E,GAC1BgV,WAAS,SAAU,sBAAuBhV,GAC1CkH,EAAM1N,OAAOsP,QN3SG,iBM2S4B9I,GAC5CmV,cAAYjO,EAAM1N,OAAOmZ,SACrBzL,EAAM1N,OAAOiB,KAAKkd,WAAWtd,OAAS,IAAM6M,EAAM1N,OAAOuH,qBAAsB,CAC/E,GAAI6W,GAAYvc,YAAU,QAAS2E,EAKnC,IAHIxF,oBAAkBod,KAClBA,EAAY5W,WAAS,yBAA0BkG,EAAM1N,QAAQqe,eAAe,GAAI7D,YAE/ExZ,oBAAkBod,GAAY,CAC/B,GAAIE,GAAeF,EAAUnD,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAEV,IACpErX,GAAU,OAAIkH,EAAM1N,OAAOwe,cAAcC,sBAAsBH,EAAc9X,EAAU,QAAG,IAGlGA,EAAEgO,MAAQ9G,EAAM1N,OAAOiB,KAAKgW,aAAayH,iBACzC,IAAIC,KACAjR,GAAM1N,OAAOuH,sBACbmG,EAAMkR,oBAAoBD,GAE9BnX,WAAS,oBAAqBkG,EAAM1N,QAAQ0b,mBAAmBlV,EAAGmY,GAClEjR,EAAM1N,OAAOsP,QN5SH,WM4S4BrD,MAG9CsN,EAAiBrP,UAAU0U,oBAAsB,SAAUD,GACvDA,EAAY7V,YAAc,UAC1B0S,WAAS,oBAAoB,EAAMmD,EACnC,IAAIE,GAAgBrX,WAAS,qBAAsByB,KAAKjJ,QACpD8e,EAActX,WAAS,cAAeqX,GACtCE,EAAWvX,WAAS,WAAYqX,EAChCC,GAAYE,UAAY/V,KAAKjJ,OAAOiB,KAAKgW,aAAagI,cAAgBH,EAAYI,SAASC,OAC3FlW,KAAKjJ,OAAOiB,KAAKgW,aAAagI,YAAcF,EAASI,OAG7D5F,EAAiBrP,UAAU+P,aAAe,WACtChR,KAAK6Q,cAAe,GAExBP,EAAiBrP,UAAUmS,cAAgB,SAAUzU,EAAMwX,GAEvD,IAAK,GADDC,MACK1e,EAAI,EAAGe,EAAMC,OAAOC,KAAKgG,GAAM/G,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,GAAI2e,GAAc7Z,YAAWmC,EAAKjH,GAClC2e,GAAY1Z,SAAWgC,EAAKjH,EAC5B,IAAI8C,GAAQ,CAyBZ,IAxBAwF,KAAK2Q,cACA0F,EAAYzZ,eAAe,WAC5ByZ,EAAY9b,MAAQyF,KAAK2Q,eAExB5Y,oBAAkBse,EAAYrW,KAAKjJ,OAAOkG,gBAC1CoZ,EAAYrW,KAAKjJ,OAAO8a,kBAAoBra,EAAgBwI,KAAKjJ,WAClEsf,EAAY3c,iBAAkB,EAC1BsG,KAAKjJ,OAAOmX,oBAAsBnW,oBAAkBiI,KAAKjJ,OAAO8M,kBAC7D9L,oBAAkBse,EAAYrW,KAAKjJ,OAAOkG,eAC7CoZ,EAAY7c,UAAW,EAGvB6c,EAAY7c,WAAYzB,oBAAkBse,EAAYrW,KAAKjJ,OAAOwC,sBAC5D8c,EAAYrW,KAAKjJ,OAAOwC,qBAGjC8c,EAAYzZ,eAAe,WAC5ByZ,EAAY9b,OAAQ8b,EAAY3c,gBAAkBsG,KAAK2Q,cAEvD3Q,KAAK5E,iBAAmBrD,oBAAkBse,EAAYrW,KAAKjJ,OAAO+F,mBAClEkD,KAAKjJ,OAAOqG,WAAWvE,KAAKwd,GAEhCA,EAAYhd,SAAWma,SAAOxT,KAAKjJ,OAAOmZ,QAAQC,GAAK,UACvDoC,WAAS,sBAAwB8D,EAAYhd,SAAUgd,EAAarW,KAAKjJ,SACpEgB,oBAAkBoe,GAAgB,CACnC,GAAI/Y,GAAaZ,YAAW2Z,SACrB/Y,GAAWzD,mBACXyD,GAAW4C,KAAKjJ,OAAOkG,cAC1B+C,KAAK5E,uBACEgC,GAAWT,SAASqD,KAAKjJ,OAAOkG,cAE3CoZ,EAAYld,WAAaiE,EACzBiZ,EAAY7X,eAAiBpB,EAAW/D,SACxCmB,EAAQ2b,EAAc3b,MAAQ,EAYlC,GAVK6b,EAAYzZ,eAAe,WAC5ByZ,EAAY7b,MAAQA,GAExB6b,EAAYjM,cAAgB,WACxBrS,oBAAkBse,EAAYrW,KAAKjJ,OAAO+F,mBAAqBuZ,EAAYld,aAC3E6G,KAAKjJ,OAAOsG,SAASxE,KAAKwd,GAEzBrW,KAAK5E,iBAAyC,IAAtBib,EAAY7b,OACrCwF,KAAKjJ,OAAOqG,WAAWvE,KAAKwd,IAE3Bte,oBAAkBse,EAAYrW,KAAKjJ,OAAOkG,eAAiBoZ,EAAYrW,KAAKjJ,OAAOkG,cAAcrF,QAAS,CAC3G,GAAImB,GAASiH,KAAKoT,cAAciD,EAAYrW,KAAKjJ,OAAOkG,cAAeoZ,EACvEA,GAAY1c,aAAeZ,EAE/Bqd,EAAavd,KAAKwd,GAEtB,MAAOD,IAMX9F,EAAiBrP,UAAUkQ,cAAgB,SAAUnO,GACjD,GAIIsT,GAJAC,EAAW3d,YAAU,WAAYoK,GACjCwT,EAAa5d,YAAU,aAAcoK,GACrCyT,EAAa7d,YAAU,aAAcoK,GACrC0T,EAAa9d,YAAU,aAAcoK,GAErC2T,EAAa/d,YAAU,aAAcoK,GACrCnD,EAAcjH,YAAU,cAAeoK,GACvC4T,EAAahe,YAAU,OAAQoK,GAC/BtH,EAAS9C,YAAU,SAAUoK,GAC7B6T,EAAgBF,EAChBG,EAAuB9W,KAAKjJ,OAAO4E,0BAA0B,GAC7Dob,EAAYne,YAAU,OAAQie,EAC5B9e,qBAAkB8e,IAAqB9e,oBAAkB8e,EAAcnb,SAAsC,QAAzBmb,EAAcnb,QAC/F3D,oBAAkB8e,EAAclY,QAAU5G,oBAAkB8e,EAAclY,KAAKmY,MACpFD,EAAclY,KAAKmY,GAAwB9T,EAAKqN,OAAOwG,EAActc,OAAOuc,GAC5EC,EAAUpa,SAASma,GAAwB9T,EAAKqN,OAAOwG,EAActc,OAAOuc,MAE1E/e,oBAAkB4e,IAAeje,OAAOC,KAAKge,GAAY/e,QAA2B,SAAhBiI,KACtEA,EAAcA,GAA4B8W,EAAW9W,YACrD+W,EAAaA,GAA0Bhe,YAAU,OAAQ+d,GACzDjb,EAASA,GAAkB9C,YAAU,SAAU+d,GACT,UAAlC3W,KAAKjJ,OAAOkF,aAAaC,OACzB8D,KAAKvE,aAAeuE,KAAKjJ,OAAOiB,KAAKmE,WAAWC,oBAErC,QAAXV,GAAqC,cAAhBmE,GAAkE,UAAlCG,KAAKjJ,OAAOkF,aAAaC,MAC3E8D,KAAKvE,aAAauE,KAAKuQ,cAAc3Y,UACxCoI,KAAKjJ,OAAOiB,KAAK8c,gBAAkB9R,EAAKqN,QAExCrQ,KAAKjJ,OAAOigB,aACZhX,KAAKiX,aAAaL,EAAYlb,EAAQmE,GAU9C,IAAIqX,IANAZ,EADAC,IAAaxe,oBAAkBye,GACrBA,EAGAhf,EAAgBwI,KAAKjJ,QAAUwH,WAAS,SAAUyB,KAAKjJ,OAAOiB,KAAKhB,YACvEgJ,KAAKjJ,OAAOiB,KAAKhB,qBAEMC,eAAcqf,EAAQtf,WAAW6E,KAAOya,EACrE/K,EAAQ/T,EAAgBwI,KAAKjJ,QAAUwH,WAAS,QAASyB,KAAKjJ,OAAOC,YACnEkgB,EAAQtf,MACd,IAAKoI,KAAKjJ,OAAOiB,KAAKI,gBAAkB4H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,GAAIka,GAAM,GAAIP,SACV4D,EAAYvc,YAAU,QAASoK,EAC/BjL,qBAAkBod,KAClBA,EAAY,GAAI5D,SAChB4D,EAAY5W,WAAS,yBAA0ByB,KAAKjJ,QAAQogB,YAAYhC,GACxEA,EAAY5W,WAAS,yBAA0ByB,KAAKjJ,QAAQqgB,YAAYjC,GAE5E,IAAIkC,GAAYlC,EAAUnD,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,YAATA,EAAEV,KAC7D0C,EAAYnC,EAAUnD,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,aAATA,EAAEV,IACjE9C,GAAIE,QAAUqF,EAAUzd,OAAO0d,EAC/B,IAAIC,GAAe,GAAItgB,eAAYigB,GAASnE,aAAajB,EAIzD,IAHA9R,KAAKjJ,OAAOsY,OAAO,oBAAsB1Q,KAAM4Y,IAC/CL,EAAUlX,KAAK8Q,YAAYT,OAC3BrQ,KAAK8Q,YAAYT,OAAS,KACtBrQ,KAAKjJ,OAAOiB,KAAKkd,WAAWtd,OAAS,EAAG,CACpC0Z,EAAQ1Y,YAAU,QAASoK,EAI/B,IAHIjL,oBAAkBod,KAClBA,EAAY5W,WAAS,yBAA0ByB,KAAKjJ,QAAQqe,eAAe,GAAI7D,YAE9ExZ,oBAAkBuZ,GAAQ,CACvB+D,EAAe/D,EAAMU,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAEV,IAChEsC,GAAUlX,KAAKjJ,OAAOwe,cAAcC,sBAAsBH,EAAc6B,GAAS,KAI7F,GAAIlX,KAAKjJ,OAAOiB,KAAKkd,WAAWtd,QAA2D,IAAjDoI,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQC,QACtB,IAAnDoI,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiBoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpGud,EAAYvc,YAAU,QAASoK,EAC/BjL,qBAAkBod,KAClBA,EAAY5W,WAAS,yBAA0ByB,KAAKjJ,QAAQqe,eAAe,GAAI7D,UAE/E8D,GAAeF,EAAUnD,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAEV,IACpEsC,GAAUlX,KAAKjJ,OAAOwe,cAAcC,sBAAsBH,EAAcrV,KAAKjJ,OAAOsG,UAAU,GAElG,GAAI2C,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQC,OAAS,GAAKoI,KAAK6Q,aAAc,CACvE7Q,KAAK6Q,cAAe,CACpB,IAAIzT,OAAa,EACjBA,GAEa4C,KAAKjJ,OAAOqG,UAIzB,KAAK,GAFDkU,GAAQ1Y,YAAU,QAASoK,GAC3BwU,EAAS,GAAIjG,SACRkG,EAAMzX,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQC,OAAS,EAAG6f,GAAO,EAAGA,IAAO,CAC9E,GAAIxO,GAAMjJ,KAAKjJ,OAAOiB,KAAK0f,iBAAiB1X,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQ8f,GAAKnT,OACnFqT,EAAU1O,EAAI2O,cAAgB/d,EAAUmG,KAAKjJ,QAC7CkS,EAAI2O,aAAaC,KAAK5O,GACtBjJ,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQ8f,GAAKK,SAC/CN,GAAOO,OAAO/X,KAAKjJ,OAAOiB,KAAKyG,aAAa9G,QAAQ8f,GAAKnT,MAAOqT,GAEpE,GAEIK,IAAalc,aAFE,GAAI7E,eAAYmG,GAAY2V,aAAayE,GAEfD,aAAcL,EAASM,OAAQA,EAM5E,IALAxX,KAAKjJ,OAAOsY,OAAO,aAAc2I,GACjCd,EAAUc,EAASlc,aACnBkE,KAAK8Q,YAAYT,OAAS,KAC1BrQ,KAAK4Q,WAAasG,EAClBlX,KAAKjJ,OAAOsY,OAAO,kBACfrP,KAAKjJ,OAAOiB,KAAKkd,WAAWtd,OAAS,IAAMG,oBAAkBuZ,GAAQ,CACrE,GAEI+D,GADUzc,YAAU,QAASoK,GACNgP,QAAQ1U,OAAO,SAAUgY,GAAK,MAAgB,iBAATA,EAAEV,IAClEsC,GAAUlX,KAAKjJ,OAAOwe,cAAcC,sBAAsBH,EAAcrV,KAAK4Q,YAHhE,IAMrBrF,EAAQ/T,EAAgBwI,KAAKjJ,QAAUwH,WAAS,QAASyB,KAAKjJ,OAAOC,YAC/DkgB,EAAQtf,MACd,IAAIqgB,GAAOjY,KAAKkY,OAAOhB,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAYzT,EACzEkU,GAAUe,EAAK5H,OACf9E,EAAQ0M,EAAK1M,MACbvI,EAAKqN,OAAS6G,EACdlU,EAAKuI,MAAQA,EACbvL,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,IAExCsN,EAAiBrP,UAAUiX,OAAS,SAAUhB,EAAS3L,EAAOgL,EAAUG,EAAYD,EAAYzT,GAe5F,OAdIhD,KAAKjJ,OAAOgX,aAAiBwI,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B1W,KAAKjJ,OAAOohB,WAM1BnY,KAAKjJ,OAAOuH,sBAA0BiY,GAA2B,gBAAfE,GAClB,SAAlClY,WAAS,cAAeyE,KAC3BhD,KAAKjJ,OAAOsY,ONhfG,iBMgf4BgB,OAAQ6G,EAAS3L,MAAOA,EAAOoL,WAAYpY,WAAS,aAAcyE,KAC7GkU,EAAUlX,KAAK8Q,YAAYT,OAC3B9E,EAAQvL,KAAK8Q,YAAYvF,QATzBvL,KAAKjJ,OAAOsY,ONzeG,iBMye4BgB,OAAQ6G,EAAS3L,MAAOA,IACnE2L,EAAUlX,KAAK8Q,YAAYT,OAC3B9E,EAAQ/T,EAAgBwI,KAAKjJ,QAAUwH,WAAS,QAASyB,KAAKjJ,OAAOC,YAC/DgJ,KAAK8Q,YAAYvF,QAQb8E,OAAQ6G,EAAS3L,MAAOA,IAM1C+E,EAAiBrP,UAAUgQ,WAAa,SAAUmH,GAC9CpY,KAAK8Q,YAAcsH,GAEvB9H,EAAiBrP,UAAUgW,aAAe,SAAUL,EAAYlb,EAAQmE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKjJ,OAAOsY,ONjfA,cMif4B/U,MAAOsc,EAAYlb,OAAQA,GAAUmE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKjJ,OAAOkF,aAAaC,MACxD8D,KAAKjJ,OAAOsY,ON1dD,iBM6dZiB,MC/iBX,SAAW+H,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,cAC/CA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,UACrDA,qBAAqBA,uBC3CxB,IAAI7X,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5D8W,EAA8B,SAAUxW,GAExC,QAASwW,KACL,MAAkB,QAAXxW,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,MA5BAS,GAAU8X,EAAcxW,GAIxBZ,GACIc,WAAS,KACVsW,EAAatX,UAAW,eAAY,IACvCE,GACIc,WAAS,IACVsW,EAAatX,UAAW,gBAAa,IACxCE,GACIc,WAAS,IACVsW,EAAatX,UAAW,kBAAe,IAC1CE,GACIc,cACDsW,EAAatX,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVsW,EAAatX,UAAW,wBAAqB,IAChDE,GACIc,YAAS,IACVsW,EAAatX,UAAW,gBAAa,IACxCE,GACIc,WAAS,OACVsW,EAAatX,UAAW,eAAY,IACvCE,GACIc,WAAS,QACVsW,EAAatX,UAAW,mBAAgB,IACpCsX,GACTrW,iBCrDEzB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,EAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAQ5D+W,EAAiC,SAAUzW,GAE3C,QAASyW,KACL,GAAI/T,GAAmB,OAAX1C,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAGhE,OAFAyE,GAAMgU,KAAO,GAAIC,wBACjBjU,EAAMkU,cACClU,EAmEX,MAxEAhE,GAAU+X,EAAiBzW,GAU3ByW,EAAgBvX,UAAU2X,aAAe,SAAUC,GAC3C7Y,KAAK8Y,SAAW9Y,KAAK8Y,OAAOC,UAAY/Y,KAAK8Y,OAAOA,UACpD9Y,KAAKgZ,SAAWhZ,KAAKiZ,kBAAkBjZ,KAAK8Y,UAMpDN,EAAgBvX,UAAUgY,kBAAoB,SAAUH,GACpD,MAAIA,GAAO7V,KACAjD,KAAKyY,KAAKS,cAAcJ,GAGxB9Y,KAAKyY,KAAKU,gBAAgBL,IAMzCN,EAAgBvX,UAAUmY,aAAe,WACrC,MAAOpZ,MAAKgZ,UAKhBR,EAAgBvX,UAAUoY,YAAc,SAAUC,OAC/B,KAAXA,IAAqBA,UACGC,KAAxBvZ,KAAKwZ,iBACLxZ,KAAK2Y,WAAWc,eAAaC,WAAUA,WAASC,WAAc/E,GAAIgF,UAAQ5Z,KAAKwZ,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgBvX,UAAU6Y,YAAc,SAAU7W,GAC9C,MAAOjD,MAAK2Y,WAAWc,eAAaC,WAAUzW,KAKlDuV,EAAgBvX,UAAU8Y,oBAAsB,SAAUC,GACtDha,KAAKia,cAAcD,GAAM,IAE7B7Y,GACIc,cACDuW,EAAgBvX,UAAW,WAAQ,IACtCE,GACIc,cACDuW,EAAgBvX,UAAW,qBAAkB,IAChDE,GACIc,cACDuW,EAAgBvX,UAAW,YAAS,IACvCE,GACIc,cACDuW,EAAgBvX,UAAW,aAAU,IACxCE,GACIc,cACDuW,EAAgBvX,UAAW,iBAAc,IAC5CE,GACIc,cACDuW,EAAgBvX,UAAW,sBAAmB,IAC1CuX,GACTtW,iBAEEgY,EAA8B,SAAUnY,GAExC,QAASmY,KACL,MAAkB,QAAXnY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,GAAUyZ,EAAcnY,GAIxBZ,GACIiB,gBAAeoW,IAChB0B,EAAajZ,UAAW,cAAW,IACtCE,GACIc,YAAS,IACViY,EAAajZ,UAAW,uBAAoB,IACxCiZ,GACThY,iBCjHEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5D0Y,GAA8B,SAAUpY,GAExC,QAASoY,KACL,MAAkB,QAAXpY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,MAlCAS,IAAU0Z,EAAcpY,GAIxBZ,IACIc,YAAS,IACVkY,EAAalZ,UAAW,kBAAe,IAC1CE,IACIc,YAAS,IACVkY,EAAalZ,UAAW,mBAAgB,IAC3CE,IACIc,YAAS,IACVkY,EAAalZ,UAAW,oBAAiB,IAC5CE,IACIc,WAAS,SACVkY,EAAalZ,UAAW,WAAQ,IACnCE,IACIc,WAAS,QACVkY,EAAalZ,UAAW,qBAAkB,IAC7CE,IACIc,YAAS,IACVkY,EAAalZ,UAAW,0BAAuB,IAClDE,IACIc,YAAS,IACVkY,EAAalZ,UAAW,wBAAqB,IAChDE,IACIc,YAAS,IACVkY,EAAalZ,UAAW,8BAA2B,IACtDE,IACIc,WAAS,KACVkY,EAAalZ,UAAW,eAAY,IACvCE,IACIc,gBACDkY,EAAalZ,UAAW,aAAU,IAC9BkZ,GACTjY,iBC3DEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5D2Y,GAAgC,SAAUrY,GAE1C,QAASqY,KACL,MAAkB,QAAXrY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,IAAU2Z,EAAgBrY,GAI1BZ,IACIc,cACDmY,EAAenZ,UAAW,YAAS,IACtCE,IACIc,cACDmY,EAAenZ,UAAW,gBAAa,IACnCmZ,GACTlY,iBAKEmY,GAA8B,SAAUtY,GAExC,QAASsY,KACL,MAAkB,QAAXtY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,MAVAS,IAAU4Z,EAActY,GAIxBZ,IACIiB,gBAAegY,KAChBC,EAAapZ,UAAW,cAAW,IACtCE,IACIc,YAAS,IACVoY,EAAapZ,UAAW,kBAAe,IACnCoZ,GACTnY,iBCpDEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAyC5D6Y,GAA0B,SAAUvY,GAEpC,QAASuY,GAASva,EAASmQ,GACvB,GAAIzL,GAAQ1C,EAAOa,KAAK5C,KAAMD,EAASmQ,IAAYlQ,IACnDyE,GAAMqM,eACNrM,EAAM8V,sBACN9V,EAAM+V,4BACN/V,EAAMgW,eAAiB,iBACvBhW,EAAMiW,eAAiB,iBACvBjW,EAAM8L,aAAe,eACrBoK,EAAWjY,OAAOkY,GAClBrI,WAAS,mBAAoB9N,EAAMoW,yBAA0BpW,EAM7D,OAJK1M,qBAAkB0M,EAAMqW,gBAAsB,SAC/CrY,OAAKC,OAAOF,UAEhBiC,EAAMzM,KAAO,GAAIyK,QACVgC,EAhBXhE,GAAU6Z,EAAUvY,GAkBpB4Y,EAAaL,EAUbA,EAASrZ,UAAU8Z,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,MAAIpQ,eACA/K,KAAKob,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJnb,KAAKob,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAASrZ,UAAUqa,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,MAAIpQ,eACA/K,KAAKob,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJnb,KAAKob,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAASrZ,UAAUsa,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,MAAIpQ,eACA/K,KAAK0b,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJnb,KAAK0b,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFb,EAASrZ,UAAU4B,cAAgB,WAC/B,MAAO,YAMXyX,EAASrZ,UAAU0a,UAAY,WAC3B3b,KAAK4b,iBACL5b,KAAK6b,iBACL7b,KAAK8b,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhBrc,KAAKsc,KAAO,GAAIC,QAAK,WAAYvc,KAAK8b,cAAe9b,KAAKwc,QACtDxc,KAAK5E,iBAAmBrD,oBAAkBiI,KAAK/C,gBAC/C+C,KAAK/C,aAAe,aAU5Bqd,EAASrZ,UAAUwb,aAAe,SAAUlhB,EAAYuc,EAAW4E,GAC/D1c,KAAK2c,WAAWC,WAAWrhB,EAAYuc,EAAW4E,IAMtDpC,EAASrZ,UAAU4b,aAAe,WAC1B7c,KAAK2c,YACL3c,KAAK2c,WAAWE,gBASxBvC,EAASrZ,UAAU6b,iBAAmB,SAAUxY,GAC5CtE,KAAK2c,WAAWG,iBAAiBxY,IASrCgW,EAASrZ,UAAU8b,OAAS,SAAUC,GAClChd,KAAKhI,KAAK+kB,OAAOC,IAYrB1C,EAASrZ,UAAUgc,eAAiB,SAAUC,GAC1Cld,KAAKmd,aAAaF,eAAeC,GACjCld,KAAKod,qBAQT9C,EAASrZ,UAAUoc,eAAiB,SAAUC,EAAWC,GACrDvd,KAAKhI,KAAKqlB,eAAeC,EAAWC,IAExCjD,EAASrZ,UAAU2a,eAAiB,WAEhC,GACI4B,GADAhB,EAASD,OAAKC,MAElBgB,MACAjL,WAASvS,KAAKwc,UAAYgB,EAC1B,IAAIC,EACJA,MACAA,EAAa7kB,YAAUoH,KAAKwc,OAAQA,EACpC,IAAIkB,EACJA,MACAA,EAAiB9kB,YAAUoH,KAAK6C,gBAAiB4a,GACjDlL,WAAS,OAAQmL,EAAgB9kB,YAAUoH,KAAKwc,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdlD,EAASrZ,UAAUsM,MAAQ,WACvBvN,KAAK4d,YAAYrQ,SAErB+M,EAASrZ,UAAU4c,yBAA2B,SAAUtgB,GACpD,GAAIyC,KAAK8d,cACL,OAAQvgB,EAAE7B,QACN,IAAK,gBACDsE,KAAK+d,WACL,MACJ,KAAK,cACD/d,KAAKge,aACL,MACJ,KAAK,mBACD,GAEIC,GAFiB1gB,EAAE8D,OACa6G,QAAQ,cACXA,QAAQ,MACrCgW,EAAcD,EAAYhW,cAAc,oBACxB,QAAhBiW,OAAwC3E,KAAhB2E,GACxBle,KAAKme,sBAAsBF,EAAYhW,cAAc,qBAEzD,MACJ,KAAK,qBACD,GAEImW,GAFe7gB,EAAE8D,OACW6G,QAAQ,cACXA,QAAQ,MACjCmW,EAAYD,EAAUnW,cAAc,sBACtB,QAAdoW,OAAoC9E,KAAd8E,GACtBre,KAAKme,sBAAsBC,EAAUnW,cAAc,uBAEvD,MACJ,KAAK,YACD,GAAI5G,GAAS9D,EAAE8D,OAAOid,cAClBC,EAAiBve,KAAKwe,mBAAmBnd,EAC7C,IAAuB,OAAnBkd,EAAyB,CACzB,GAAIzX,GAAWyX,EAAezX,QAC9B9G,MAAKye,UAAU3X,EACf,IAAI4X,GAAYnhB,EAAE8D,OAAOqd,UACrB7f,EAAM0f,EAAevO,SAAS0O,EAClCpR,aAAUzO,GAAM,aAChByO,YAAUzO,GAAM,eAGhBmB,MAAK2e,gBAET,MACJ,KAAK,UACD,GAAIC,GAAYrhB,EAAE8D,OAAOid,cACrBO,EAAoB7e,KAAK8e,uBAAuBF,EACpD,IAA0B,OAAtBC,EAA4B,CAC5B,GAAIE,GAASF,EAAkB/X,QAC/B9G,MAAKye,UAAUM,EACf,IAAIC,GAASzhB,EAAE8D,OAAOqd,UAClBxZ,EAAO2Z,EAAkB7O,SAASgP,EACtC1R,aAAUpI,GAAO,aACjBoI,YAAUpI,GAAO,eAGjBlF,MAAK2e,mBAMzBrE,EAASrZ,UAAUud,mBAAqB,SAAUK,GAC9C,GAAInW,GAAamW,EAAkBxW,kBAKnC,OAJmB,QAAfK,IAA0E,IAAlDA,EAAWe,UAAU/K,QAAQ,iBACxB,SAA7BgK,EAAW9N,MAAMG,UACjB2N,EAAa1I,KAAKwe,mBAAmB9V,IAElCA,GAGX4R,EAASrZ,UAAU6d,uBAAyB,SAAUD,GAClD,GAAInW,GAAamW,EAAkBI,sBAKnC,OAJmB,QAAfvW,IAA0E,IAAlDA,EAAWe,UAAU/K,QAAQ,iBACxB,SAA7BgK,EAAW9N,MAAMG,UACjB2N,EAAa1I,KAAK8e,uBAAuBpW,IAEtCA,GAEX4R,EAASrZ,UAAU4a,eAAiB,WAChC7b,KAAK8b,iBACL9b,KAAK3C,YACL2C,KAAK5C,cACL4C,KAAKkf,eACLlf,KAAKmf,aAAc,EACnBnf,KAAKof,eAAgB,EACrBpf,KAAKqf,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEb3f,KAAKgX,cAAiBhX,KAAKhJ,qBAAsBC,iBAAgB+I,KAAKhJ,WAAWA,WAAW4oB,UACnF7nB,oBAAkBiI,KAAKhJ,WAAW+C,QAAWiG,KAAKhJ,WAAWE,kBAAmB2oB,qBACzF7f,KAAK5E,iBAAmBrD,oBAAkBiI,KAAKlD,kBAMnDwd,EAASrZ,UAAU6e,WAAa,WAC5BC,eAAalW,IAAI7J,KAAKhI,KAAKkY,QAAS,QAASlQ,KAAKggB,kBAAmBhgB,MACrE+f,eAAalW,IAAI7J,KAAKkQ,QAAS,WAAYlQ,KAAKggB,kBAAmBhgB,MACnEA,KAAKigB,eAAiB,GAAIC,kBAAelgB,KAAKkQ,SAC1CiQ,UAAWngB,KAAK6d,yBAAyBhG,KAAK7X,MAC9Cqf,WAAYrf,KAAKqf,WACjBe,UAAW,YAEXpgB,KAAK8d,gBACL9d,KAAKkQ,QAAQmQ,UAAsC,IAA3BrgB,KAAKkQ,QAAQmQ,SAAkB,EAAIrgB,KAAKkQ,QAAQmQ,WAQhF/F,EAASrZ,UAAUqf,gBAAkB,WACjC,GAAIC,KACJ,OAAIvgB,MAAK4H,YACE2Y,GAEXA,EAAQ1nB,MACJ2nB,OAAQ,SAAUxd,MAAOhD,KAAMA,KAAK3H,kBAEnCN,oBAAkBiI,KAAKygB,UACxBF,EAAQ1nB,MACJ2nB,OAAQ,UACRxd,MAAOhD,QAGXA,KAAK0gB,kBACLH,EAAQ1nB,MACJ2nB,OAAQ,cACRxd,MAAOhD,QAGXA,KAAK+N,aACLwS,EAAQ1nB,MACJ2nB,OAAQ,QACRxd,MAAOhD,KAAMA,KAAKgO,gBAGtBhO,KAAKI,iBACLmgB,EAAQ1nB,MACJ2nB,OAAQ,UACRxd,MAAOhD,QAGXA,KAAKM,cACLigB,EAAQ1nB,MACJ2nB,OAAQ,OACRxd,MAAOhD,QAGXA,KAAKkV,WAAWtd,OAAS,GACzB2oB,EAAQ1nB,MACJ2nB,OAAQ,UAAWxd,MAAOhD,QAGlCugB,EAAQ1nB,MACJ2nB,OAAQ,SAAUxd,MAAOhD,QAEzBA,KAAK2gB,kBACLJ,EAAQ1nB,MACJ2nB,OAAQ,cAAexd,MAAOhD,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9CohB,EAAQ1nB,MACJ2nB,OAAQ,SAAUxd,MAAOhD,QAG7BA,KAAK4gB,gBACLL,EAAQ1nB,MACJ2nB,OAAQ,YAAaxd,MAAOhD,QAGhCA,KAAK6gB,gBACLN,EAAQ1nB,MACJ2nB,OAAQ,YAAaxd,MAAOhD,QAGhCA,KAAKK,gBACLkgB,EAAQ1nB,MACJ2nB,OAAQ,aAAcxd,MAAOhD,QAGjCA,KAAK8gB,mBACLP,EAAQ1nB,MACJ2nB,OAAQ,gBAAiBxd,MAAOhD,QAGxCA,KAAK+gB,sBAAsBR,GACpBA,IAEXjG,EAASrZ,UAAU8f,sBAAwB,SAAUR,GAC7CvgB,KAAKkE,qBACLqc,EAAQ1nB,MACJ2nB,OAAQ,iBACRxd,MAAOhD,SAGXA,KAAK/D,aAAa+kB,aAAehhB,KAAK/D,aAAaglB,eAAiBjhB,KAAK/D,aAAagE,eACtFsgB,EAAQ1nB,MACJ2nB,OAAQ,OACRxd,MAAOhD,QAGXA,KAAKkhB,gBAAgBlhB,KAAKrI,UAC1B4oB,EAAQ1nB,MACJ2nB,OAAQ,gBACRxd,MAAOhD,QAGXA,KAAKmhB,gBACLZ,EAAQ1nB,MACJ2nB,OAAQ,YACRxd,MAAOhD,QAGXA,KAAK1B,sBACLiiB,EAAQ1nB,MACJ2nB,OAAQ,gBACRxd,MAAOhD,QAGfugB,EAAQ1nB,MACJ2nB,OAAQ,SACRxd,MAAOhD,KAAKhI,SAGpBsiB,EAASrZ,UAAUigB,gBAAkB,SAAUvpB,GAC3C,GAAI8M,GAAQzE,IACZ,OAAOrI,GAAQypB,KAAK,SAAUnY,GAC1B,MAAIA,GAAItR,QACG8M,EAAMyc,gBAAgBjY,EAAItR,YAE3BsR,EAAIoY,WAAYpY,EAAIqY,qBAOtChH,EAASrZ,UAAUsgB,aAAe,WAC1BvhB,KAAKhI,MAAQgI,KAAKhI,KAAKkY,SACvB6P,eAAayB,OAAOxhB,KAAKhI,KAAKkY,QAAS,QAASlQ,KAAKggB,oBAO7D1F,EAASrZ,UAAU6B,IAAM,SAAUC,EAAOC,GACtChD,KAAKyhB,cAAezhB,KAAKyhB,aAAazd,QAAQjB,EAAOC,EAAMhD,OAM/Dsa,EAASrZ,UAAUygB,OAAS,WACxB,GAAIjd,GAAQzE,IACRA,MAAKoQ,UACLpQ,KAAKhI,KAAKoY,SAAU,GAExBuR,iBAAgBtgB,OAAQrB,KAAKkQ,SAAWlQ,KAAKwJ,eAC7CxJ,KAAK8C,KAAK,2BACV9C,KAAKX,aAAe,GAAIqO,GAAO1N,MAC/BA,KAAK4hB,WAAa,GAAItR,GAAiBtQ,MACvCA,KAAK4d,YAAc,GAAI9Q,GAAM9M,KAW7B,IATIA,KAAiB,iBACjBA,KAAKgU,kBAAmB,GAE5BhU,KAAKqG,QZrgBK,QYsgBVrG,KAAK6hB,sBACL7hB,KAAK1G,eAAgB,EAChBvB,oBAAkBiI,KAAKhJ,aACxBgJ,KAAK8hB,gBAAgB9hB,KAAKhJ,aAEzB+T,eAAe/K,KAAKgU,iBAAkB,CACvChU,KAAK+hB,WACD/hB,KAAKkQ,QAAQ1K,UAAUC,SAAS,eAAiBzF,KAAKgiB,gBAAgBC,WACtEjiB,KAAKhI,KAAKgqB,gBAAgBC,UAAY,gBAE1CjiB,KAAKkiB,aACL,IAAIC,GAAgB3Y,gBAAc,OAAS2G,GAAInQ,KAAKkQ,QAAQC,GAAK,gBACjE7C,aAAUtN,KAAKkQ,SAAU,cACpBnY,oBAAkBiI,KAAKoiB,SAAoC,gBAAjBpiB,eAA2D,IAA9BA,KAAKoiB,OAAO1jB,QAAQ,OAC5FsB,KAAKkQ,QAAQtV,MAAMwnB,OAASpiB,KAAKoiB,QAEhCrqB,oBAAkBiI,KAAK8J,QAAkC,gBAAhB9J,cAAyD,IAA7BA,KAAK8J,MAAMpL,QAAQ,OACzFsB,KAAKkQ,QAAQtV,MAAMkP,MAAQ9J,KAAK8J,OAEpC9J,KAAKkQ,QAAQtF,YAAYuX,GACzBniB,KAAKhI,KAAKqqB,SAASF,GACnBniB,KAAK8f,aAET9f,KAAKsiB,gBACL,IACIC,GAAoBviB,KAAKhI,KAAoB,eASjD,IAPAgI,KAAKhI,KAAoB,gBAAI,SAAUgL,EAAMzI,GACzCgoB,EAAkBvgB,MAAMyC,EAAMzM,KAExByM,GAAM2L,SAAWrY,oBAAkB0M,EAAa,UAClDA,EAAM+d,cAAcxf,EAAMzI,IAG9BwQ,cAAc/K,KAAKgU,iBAAkB,CACrC,GAAIyO,GAAO,SAAUzf,GAAQ,MAAOyB,GAAMie,aAAa1f,EAAMyf,GAC7DE,gBAAarb,GAAG,qBAAsBmb,EAAMziB,QAGpDsa,EAASrZ,UAAU2hB,gBAAkB,WAC5B7qB,oBAAkBiI,KAAKhI,KAAK6qB,kBAC7B7iB,KAAKhI,KAAK6qB,gBAAgB7b,UAE9BhH,KAAK6iB,gBAAkB7iB,KAAKhI,KAAK6qB,gBAAkB,GAAIre,GAAcxE,OAEzEsa,EAASrZ,UAAUyhB,aAAe,SAAU1f,EAAM4R,GAC9C,GAAI5R,EAAKmN,KAAOnQ,KAAKkQ,QAAQC,GAAK,eAAlC,CACInQ,KAAKhI,KAAOgL,EAAKhL,KAKrBgI,KAAKhI,KAAKsZ,MAAMU,UAGXhS,MAAKgU,iBAINhU,KAAKhI,KAAa,UAAI,EAHtBgI,KAAKhI,KAAkB,eAAI,EAK/BgI,KAAK8iB,gBACL9iB,KAAK+iB,YAAY/iB,KAAKhI,KAAKL,SAC3BqI,KAAKgjB,gBAEAjrB,qBAAkBiI,KAAKijB,kBACxBjjB,KAAKhI,KAAKsP,GAAG,mBAAoBtH,KAAKijB,gBAA8B,eAAGjjB,KAAKijB,gBAEhF,KAAK,GAAIvrB,GAAI,EAAGA,EAAIsI,KAAKrI,QAAQC,OAAQF,IACrCsI,KAAKrI,QAAQD,GAAGwR,IAAMlJ,KAAKhI,KAAKL,QAAQD,GAAGwR,GAE/ClJ,MAAK8f,aACL9f,KAAK4iB,iBAEL5iB,MAAKhI,KAAiB,eACtB2qB,eAAa9a,IAAI,qBAAsB7H,KAAK0iB,gBAEhDpI,EAASrZ,UAAU8hB,YAAc,SAAU7D,EAAagE,OACxC,KAARA,IAAkBA,EAAM,EAC5B,KAAK,GAAIxrB,GAAI,EAAGe,EAAMymB,EAAYtnB,OAAQF,EAAIe,EAAKf,IAC3CwnB,EAAYxnB,GAAGC,SACfunB,EAAYxnB,GAAG6C,MAAQxC,oBAAkBmnB,EAAYxnB,GAAG6C,OAAS2oB,EAC7DhE,EAAYxnB,GAAG6C,MACnB2oB,IACAA,EAAMljB,KAAK+iB,YAAY7D,EAAYxnB,GAAGC,QAASurB,KAG/ChE,EAAYxnB,GAAG6C,MAAQxC,oBAAkBmnB,EAAYxnB,GAAG6C,OAAS2oB,EAC7DhE,EAAYxnB,GAAG6C,MACnB2oB,IAGR,OAAOA,IAEX5I,EAASrZ,UAAU6hB,cAAgB,WAE3B9iB,KAAK/D,eACL+D,KAAKhI,KAAKiE,aAAiB,KAAI+D,KAAK/D,aAAiB,KACrD+D,KAAKhI,KAAKiE,aAAa2T,SAAW5P,KAAK/D,aAAa2T,SAExD,KAASlY,EAAI,EAAGA,EAAIsI,KAAKkV,WAAWtd,OAAQF,IACxC,IAAK,GAAI0C,GAAI,EAAGA,EAAI4F,KAAKkV,WAAWxd,GAAGC,QAAQC,OAAQwC,IACnD4F,KAAKhI,KAAKkd,WAAWxd,GAAGC,QAAQyC,GAAO,KAAI4F,KAAKkV,WAAWxd,GAAGC,QAAQyC,GAAO,IAGrF,KAAK,GAAI1C,GAAI,EAAGA,EAAIsI,KAAKrI,QAAQC,OAAQF,IACrCsI,KAAKhI,KAAKL,QAAQD,GAAO,KAAIsI,KAAKrI,QAAQD,GAAO,MAIzD4iB,EAASrZ,UAAU6gB,gBAAkB,SAAUnjB,GAC3C,GAAI8F,GAAQzE,IACZ,IAAIrB,YAAgBpC,QAASoC,EAAK/G,OAAS,GAAK+G,EAAK,GAAG/B,eAAe,SACnEoD,KAAK3C,SAAW7F,EAAgBwI,MAAQzB,WAAS,SAAUI,GAAQA,EACnEqB,KAAK3C,SAASC,OAAO,SAAUC,GAC3BgV,WAAS,sBAAwBhV,EAAElE,SAAUkE,EAAGkH,GAChC,IAAZlH,EAAE/C,OACFiK,EAAMrH,WAAWvE,KAAK0E,SAK9B,IAAI/F,EAAgBwI,MAAO,CACvB,GAAImjB,GAAW5kB,WAAS,SAAUyB,KAAKhJ,WACvCgJ,MAAK4hB,WAAWvQ,kBAAkB8R,OAGlCnjB,MAAK4hB,WAAWvQ,kBAAkB1S,IAa9C2b,EAASrZ,UAAUmiB,mBAAqB,WACpCpjB,KACKqjB,mBACLrjB,KAAKhI,KAAKsrB,UAAYtjB,KAAKsjB,UAC3BtjB,KAAKhI,KAAK8lB,cAAgB9d,KAAK8d,cAC/B9d,KAAKhI,KAAKL,QAAUqI,KAAKujB,eAAevjB,KAAKrI,SAC7CqI,KAAKhI,KAAK2oB,iBAAmB3gB,KAAK2gB,iBAClC3gB,KAAKhI,KAAK6oB,eAAiB7gB,KAAK6gB,eAChC7gB,KAAKhI,KAAKsZ,MAAQtR,KAAKsR,MACvBtR,KAAKhI,KAAKwrB,gBAAkBxjB,KAAKwjB,gBACjCxjB,KAAKhI,KAAK+V,YAAc/N,KAAK+N,YAC7B/N,KAAKhI,KAAKgW,aAAeyV,sBAAoBzjB,KAAKgO,cAClDhO,KAAKhI,KAAK0rB,cAAgB1jB,KAAK0jB,cAC/B1jB,KAAKhI,KAAKqI,eAAiBL,KAAKK,eAChCL,KAAKhI,KAAKsI,aAAeN,KAAKM,aAC9BN,KAAKhI,KAAKI,eAAiB4H,KAAK5H,eAChC4H,KAAKhI,KAAKsG,qBAAuB0B,KAAK1B,qBACtC0B,KAAKhI,KAAK8R,MAAQ9J,KAAK8J,MACvB9J,KAAKhI,KAAKoqB,OAASpiB,KAAKoiB,OACxBpiB,KAAKhI,KAAK2rB,aAAe3jB,KAAK2jB,aAC9B3jB,KAAKhI,KAAKoI,gBAAkBJ,KAAKI,gBACjCJ,KAAKhI,KAAKmX,cAAgBnP,KAAKmP,cAC/BnP,KAAKhI,KAAKuI,cAAgBP,KAAKO,cAC/BP,KAAKhI,KAAK4rB,YAAc5jB,KAAK4jB,YAC7B5jB,KAAKhI,KAAK6rB,eAAiB7jB,KAAK6jB,eAChC7jB,KAAKhI,KAAKkM,oBAAsBlE,KAAKkE,oBACrClE,KAAKhI,KAAKgqB,gBAAkByB,sBAAoBzjB,KAAKgiB,iBACrDhiB,KAAKhI,KAAK8rB,UAAY9jB,KAAK8jB,UAC3B9jB,KAAKhI,KAAK+rB,UAAY/jB,KAAK+jB,UAC3B/jB,KAAKhI,KAAKmpB,eAAiBnhB,KAAKmhB,eAChCnhB,KAAKhI,KAAKyoB,QAAUgD,sBAAoBzjB,KAAKgkB,kBAC7ChkB,KAAKhI,KAAKisB,gBAAkBjkB,KAAKikB,gBACjCjkB,KAAKhI,KAAK8oB,kBAAoB9gB,KAAK8gB,kBACnC9gB,KAAKhI,KAAKK,eAAiBorB,sBAAoBzjB,KAAK3H,gBACpD2H,KAAKhI,KAAKmN,kBAAoBse,sBAAoBzjB,KAAKmF,mBACvDnF,KAAKhI,KAAKyG,aAAeglB,sBAAoBzjB,KAAKvB,cAClDuB,KAAKhI,KAAKC,eAAiBwrB,sBAAoBzjB,KAAK/H,gBACpD+H,KAAKhI,KAAKkd,WAAauO,sBAAoBzjB,KAAKkV,YAChDlV,KAAKhI,KAAKksB,iBAAmBT,sBAAoBzjB,KAAKkkB,kBACtDlkB,KAAKhI,KAAKmgB,UAAYsL,sBAAoBzjB,KAAKmY,WAC/CnY,KAAKhI,KAAKwkB,OAASiH,sBAAoBzjB,KAAKwc,QAC5Cxc,KAAKhI,KAAKmsB,iBAAmBnkB,KAAKmkB,iBAClCnkB,KAAKhI,KAAK0oB,iBAAmB+C,sBAAoBzjB,KAAKokB,kBACtDpkB,KAAKhI,KAAKqsB,gBAAkBZ,sBAAoBzjB,KAAKqkB,iBACrDrkB,KAAKhI,KAAKiE,aAAe+D,KAAKskB,sBAC9BtkB,KAAKhI,KAAKyX,YAAcgU,sBAAoBzjB,KAAKyP,aACjDzP,KAAKhI,KAAK4oB,eAAiB6C,sBAAoBzjB,KAAK4gB,gBACpD5gB,KAAKhI,KAAKkH,WAAac,KAAKd,WAC5Bc,KAAKhI,KAAK0H,cAAgBM,KAAKN,aAE/BM,MAAKhI,KAAqB,uBAAIgI,KAAqB,sBAEnDA,MAAKhI,KAAkB,eAAI,GAE/BsiB,EAASrZ,UAAUsjB,cAAgB,SAAUvhB,GACzChD,KAAKqG,QAAQzN,YAAU,OAAQoK,GAAOA,IAE1CsX,EAASrZ,UAAU+hB,eAAiB,WAChC,GAAIve,GAAQzE,KACRiE,EAAWjE,IACfA,MAAKhI,KAAKwsB,aAAe,SAAUxhB,GAC/B,IAAKjL,oBAAkBiL,EAAK3B,UAAY2B,EAAK3B,OAAOmE,UAAUC,SAAS,qBAChEzC,EAAK3B,OAAOmE,UAAUC,SAAS,uBAAyBzC,EAAK3B,OAAOmE,UAAUC,SAAS,kBAE1F,YADAzC,EAAKoD,QAAS,EAGlB3B,GAAM4B,QZpsBQ,eYosBqBrD,IAEvChD,KAAKhI,KAAKysB,YAAc,SAAUzhB,GACzB+H,aAGIA,cAActG,EAAMuP,mBACzBvP,EAAMigB,wBAAyB,EAC/BjgB,EAAMwV,eAAgBkK,iBAAkB1f,EAAMzM,KAAKmsB,mBAAoB,GACvE1f,EAAMigB,wBAAyB,GAL/BjgB,EAAM0f,iBAAmB1f,EAAMzM,KAAKmsB,iBAOxClgB,EAASoL,OZ7sBI,cY6sBuBrM,GACpCyB,EAAM4B,QZ9sBO,cY8sBqBrD,IAEtChD,KAAKhI,KAAK2sB,cAAgB,SAAU3hB,GAChCyB,EAAM0f,iBAAmB1f,EAAMzM,KAAKmsB,iBACpC1f,EAAM4B,QZ9sBS,gBY8sBqBrD,IAExChD,KAAKhI,KAAK4sB,WAAa,SAAU5hB,GAC7ByB,EAAM2Y,oBACN3Y,EAAM4B,QZ1sBM,aY0sBqBrD,IAErChD,KAAKhI,KAAK6sB,mBAAqB,SAAU7hB,GACrCyB,EAAM4K,OAAO,gBAAiBrM,GAC9BA,EAAOyB,EAAMqM,aAEjB9Q,KAAKhI,KAAK8sB,iBAAmB,SAAU9hB,GACnCyB,EAAM4K,OAAO,cAAerM,GAC5BA,EAAOyB,EAAMqM,aAEjB9Q,KAAKhI,KAAK+sB,eAAiB,SAAU/hB,GACjCyB,EAAM4B,QZ/tBU,iBY+tBqBrD,IAEzChD,KAAKhI,KAAKgtB,kBAAoBhlB,KAAKukB,cAAc1M,KAAK7X,MACtDA,KAAKhI,KAAKitB,oBAAsBjlB,KAAKukB,cAAc1M,KAAK7X,MACxDA,KAAKhI,KAAKktB,yBAA2BllB,KAAKukB,cAAc1M,KAAK7X,MAC7DA,KAAKhI,KAAKmtB,uBAAyBnlB,KAAKukB,cAAc1M,KAAK7X,MAC3DA,KAAKhI,KAAKotB,kBAAoBplB,KAAKukB,cAAc1M,KAAK7X,MACtDA,KAAKhI,KAAKqtB,kBAAoBrlB,KAAKukB,cAAc1M,KAAK7X,MACtDA,KAAKhI,KAAKstB,eAAiBtlB,KAAKukB,cAAc1M,KAAK7X,MACnDA,KAAKhI,KAAKutB,eAAiBvlB,KAAKukB,cAAc1M,KAAK7X,MACnDA,KAAKhI,KAAKwtB,gBAAkBxlB,KAAKukB,cAAc1M,KAAK7X,MACpDA,KAAKhI,KAAKytB,eAAiBzlB,KAAKukB,cAAc1M,KAAK7X,MACnDA,KAAKhI,KAAK0tB,gBAAkB1lB,KAAKukB,cAAc1M,KAAK7X,MACpDA,KAAKhI,KAAK2tB,aAAe3lB,KAAKukB,cAAc1M,KAAK7X,MACjDA,KAAKhI,KAAK4tB,eAAiB5lB,KAAKukB,cAAc1M,KAAK7X,MACnDA,KAAKhI,KAAK6tB,YAAc7lB,KAAKukB,cAAc1M,KAAK7X,MAChDA,KAAKhI,KAAK8tB,SAAW9lB,KAAKukB,cAAc1M,KAAK7X,MAC7CA,KAAKhI,KAAK+tB,WAAa/lB,KAAKukB,cAAc1M,KAAK7X,MAC/CA,KAAKhI,KAAKguB,gBAAkBhmB,KAAKukB,cAAc1M,KAAK7X,MACpDA,KAAKhI,KAAKiuB,WAAajmB,KAAKukB,cAAc1M,KAAK7X,MAC/CA,KAAKhI,KAAKkuB,YAAclmB,KAAKukB,cAAc1M,KAAK7X,MAChDA,KAAKhI,KAAKmuB,WAAanmB,KAAKukB,cAAc1M,KAAK7X,MAC/CA,KAAKhI,KAAKouB,YAAc,SAAUpjB,GAG9B,IAFA,GAAIkC,GAAOT,EAAM1F,UAEVmG,EAAKlC,EAAa,UAAGwC,UAAUC,SAAS,iBAC3CzC,EAAa,UAEjByB,GAAM4B,QZztBO,cYytBqBrD,IAEtChD,KAAKhI,KAAK2lB,KAAO,WAEb,GADA1Z,EAASjM,KAAKsP,GAAG,cAAerD,EAAS2e,gBAAiB3e,IACrDlM,oBAAkB0M,EAAMgd,cAAe,CAExChd,EAAMgd,aAAehd,EAAMzM,KAAiB,aAAI,GAAIquB,GAAW5hB,EAAMzM,QAG7EgI,KAAKhI,KAAKsuB,cAAgBtmB,KAAKukB,cAAc1M,KAAK7X,MAClDA,KAAKhI,KAAKuuB,cAAgBvmB,KAAKukB,cAAc1M,KAAK7X,MAClDA,KAAKwmB,6BACLxmB,KAAKymB,qBACLzmB,KAAK0mB,2BACL1mB,KAAK2mB,yBACL3mB,KAAK4mB,qBACL5mB,KAAK6mB,sBAETvM,EAASrZ,UAAU6lB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,GAAI5sB,GAAI,EAAGA,EAAI2sB,EAAWvnB,MAAM5H,OAAQwC,IACzC4sB,EAAc1Z,YAAUyZ,EAAWvnB,MAAMpF,IAAK,iBAAmBkQ,eAAayc,EAAWvnB,MAAMpF,IAAK,kBAI5GkgB,EAASrZ,UAAUgmB,cAAgB,WAC/B,MAAoB,SAAhBjnB,KAAKoiB,SAA8D,IAAzCpiB,KAAKoiB,OAAOpd,WAAWtG,QAAQ,MAQjE4b,EAASrZ,UAAUulB,2BAA6B,WAC5C,GAAI/hB,GAAQzE,KACRiE,EAAWjE,IACfA,MAAKhI,KAAKkvB,UAAY,SAAUlkB,GAK5B,GAJAyB,EAAM0iB,kBAAkBnkB,GACxByB,EAAM2Y,oBACN3Y,EAAM2iB,aAAa3iB,EAAM1F,WACzB0F,EAAM4K,OAAO,eAAgBrM,GACzBlM,EAAa2N,KAAW5K,EAAU4K,KAAWA,EAAMoN,gBAAiB,CACpE,GAAIwV,GAAMzuB,YAAU,sBAAuB6L,GAAOnH,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE8U,YAAYC,aACtB1a,MACH2a,YAAS,gCAAiC8U,EAAM,GAAI5iB,GAExD,GAAIA,EAAMwiB,iBAAmBxiB,EAAMnL,cAI/B,IAAK,GAHDguB,OAAY,GACZpiB,EAAOT,EAAMsP,kBAAkB7O,KAE1BxN,GADT4vB,KAAe5hB,MAAM9C,KAAKsC,IACHtN,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAAS4sB,EAAU5vB,IAAK,CACrB4vB,EAAU5vB,GAAG2Q,oBACb5D,EAAMqiB,cAAcQ,EAAU5vB,IAAI,EAEtC,OAIZ+M,EAAM4B,QZv0BK,YYu0BqBrD,GAChCyB,EAAMnL,eAAgB,GAE1B0G,KAAKhI,KAAKqV,gBAAkB,SAAUrK,GAClC,GACInD,GAAcjH,YAAU,SAAUoK,EACtC,IAAIlM,EAAamN,KAAcpK,EAAUoK,IAA6B,SAAhBpE,EAClDoE,EAASoL,OAAO,oBAAqBrM,GACrCA,EAAQiB,EAAqB,gBAE5B,IAAiC,IAA7BA,EAAS5G,SAASzF,QAAgBiC,EAAUoK,IAAaA,EAASjN,qBAAsBC,eAAa,CAC1G,GAAI6C,GAAKmK,EAASjN,UAClBiN,GAAS2d,WAAWvQ,kBAAkBvX,EAAG9C,WAAW6E,MACpDmH,EAAKqN,OAASpM,EAASjM,KAAKhB,WAAqB,WAAE6E,KAAOoI,EAAS5G,SAWvE,GATKvG,EAAamN,IAAczM,EAAgBwI,OAAUjI,oBAAkBkM,EAASjN,cAC7EgJ,KAAK0W,YACLnE,WAAS,cAAc,EAAMvP,GAEjCiB,EAASoL,OAAO,gBAAiBrM,IAGrCxG,SAAOwG,EAAMiB,EAAS6M,cAEjB9Q,KAAK0W,WAAY,CAClB,GAAI6Q,GAAoB,GAAIC,WAI5B,OAHAvjB,GAASoC,QZ71BI,kBY61B4BrD,EAAM,SAAUykB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGfvnB,KAAKhI,KAAK8K,IAAM,SAAUG,EAAMD,GAC5ByB,EAAMgd,cAAehd,EAAMgd,aAAa3e,IAAIG,EAAMD,KAG1DsX,EAASrZ,UAAU4lB,mBAAqB,WACpC,GACIc,GADAljB,EAAQzE,IAER+K,eAAc/K,KAAKgU,mBACdjc,oBAAkBiI,KAAKhI,KAAK2vB,aAC7BA,EAAY3nB,KAAKhI,KAAK2vB,YAG9B3nB,KAAKhI,KAAK4vB,aAAe,SAAU5kB,GAC/B,GAAI6kB,GAAkB,GAAIL,WAO1B,OANA/iB,GAAM4B,QZj2BQ,eYi2BqBrD,EAAM,SAAU8kB,GAC1CA,EAAY1hB,QACb3B,EAAM4K,OZn2BA,eYm2B4BrM,GAEtC6kB,EAAgBH,QAAQI,KAErBD,GAEX7nB,KAAKhI,KAAK+vB,cAAgB,SAAU/kB,GAChC,GAAI6kB,GAAkB,GAAIL,WAI1B,OAHA/iB,GAAM4B,QAAQzN,YAAU,OAAQoK,GAAOA,EAAM,SAAUglB,GACnDH,EAAgBH,QAAQM,KAErBH,GAEX7nB,KAAKhI,KAAK2vB,UAAY,SAAU3kB,GAM5B,GALI+H,cAActG,EAAMuP,kBAChB2T,GAAkC,kBAAdA,IACpBA,EAAU3lB,MAAMyC,GAAQzB,KAG3BjL,oBAAkBiL,EAAKnE,MAAQmE,EAAKnE,IAAI2G,UAAUC,SAAS,gBAE5D,YADAzC,EAAKoD,QAAS,EAGlB,IAAIyhB,GAAkB,GAAIL,WAI1B,OAHA/iB,GAAM4B,QZv1BK,YYu1BqBrD,EAAM,SAAUilB,GAC5CJ,EAAgBH,QAAQO,KAErBJ,IAGfvN,EAASrZ,UAAU0lB,uBAAyB,WACxC,GAIIuB,GACAC,EALA1jB,EAAQzE,IAcZ,IARI+K,cAAc/K,KAAKgU,mBACdjc,oBAAkBiI,KAAKhI,KAAKkwB,YAC7BA,EAAWloB,KAAKhI,KAAKkwB,UAEpBnwB,oBAAkBiI,KAAKhI,KAAKmwB,YAC7BA,EAAWnoB,KAAKhI,KAAKmwB,WAGzBnoB,KAAK7D,YAAc4O,cAAc/K,KAAKgU,iBAAkB,CACxDhU,KAAKhI,KAAKsP,GAdG,cAcYtH,KAAK7D,WAAuB,WAAG6D,KAAK7D,WAC7D,IAAIisB,GAAWpoB,KAAKhI,KAAkB,cAAEqwB,cAAc,cACtDD,GAASprB,OAAO,EAAG,EAAGorB,EAASE,OAEnCtoB,KAAKhI,KAAK6L,gBAAkB,SAAUb,GAC9ByB,EAAM8jB,iBACN9jB,EAAM8jB,iBAAkB,EACxB9jB,EAAMzM,KAAKhB,YAAeqZ,OAAQ5L,EAAMpH,SAAUkO,MAAOhN,WAAS,QAASkG,EAAMzM,KAAKhB,cAGtFyN,EAAM4B,QZv6BO,kBYu6ByBrD,IAG9ChD,KAAKhI,KAAKmwB,SAAW,SAAUnlB,GAM3B,GALI+H,cAActG,EAAMuP,kBAChBmU,GAAgC,kBAAbA,IACnBA,EAASnmB,MAAMyC,GAAQzB,IAG3ByB,EAAMzM,KAAKwwB,oBAAqB,CAChC,GAAIC,OAAe,EACnBA,GAAehkB,EAAMzM,KAAK0wB,kBAAkBC,YAAYzY,QAAQgE,uBAAuB,cAAc,IAChGnc,oBAAkB0wB,IAAiBA,EAAatY,KAAO1L,EAAMyL,QAAQC,GAAK,6BAC3EnN,EAAKoD,QAAS,GAGtB,GAAIyhB,GAAkB,GAAIL,WAU1B,OATA/iB,GAAM4B,QZl4BI,WYk4BqBrD,EAAM,SAAU4lB,GACvC7d,eAAetG,EAAMuP,mBACrB4U,EAAarpB,KAAOspB,aAAWD,EAAarpB,OAE3CqpB,EAAaxiB,QACd3B,EAAM4K,OZv4BJ,WYu4B4BuZ,GAElCf,EAAgBH,QAAQkB,KAErBf,GAEX7nB,KAAKhI,KAAK8wB,UAAY,SAAU9lB,GAC5ByB,EAAM4B,QZ54BK,YY44BqBrD,GAChCyB,EAAM4K,OZ74BK,YY64BoBrM,IAEnChD,KAAKhI,KAAKkwB,SAAW,SAAUllB,GACvB+H,cAActG,EAAMuP,kBAChBkU,GAAgC,kBAAbA,IACnBA,EAASlmB,MAAMyC,GAAQzB,GAG/B,IACI+lB,GAAU,GAAIvB,WAGlB,OAFAxkB,GAAS,QAAI+lB,EACbtkB,EAAM4K,OZt5BI,WYs5BoBrM,GACvB+lB,GAEX/oB,KAAKhI,KAAKgxB,SAAW,SAAUhmB,GAC3ByB,EAAM4B,QZp5BI,WYo5BqBrD,GAC/ByB,EAAM4K,OZr5BI,WYq5BoBrM,IAElChD,KAAKhI,KAAKixB,gBAAkB,SAAUjmB,GAClCyB,EAAM4B,QZl5BW,kBYk5BqBrD,GACtCyB,EAAM4K,OZn5BW,kBYm5BoBrM,IAEzChD,KAAKhI,KAAKkxB,eAAiB,SAAUlmB,GACjCyB,EAAM4B,QZx5BU,iBYw5BqBrD,GACrCyB,EAAM4K,OZz5BU,iBYy5BoBrM,IAExChD,KAAKhI,KAAKmxB,YAAc,SAAUnmB,GAC9ByB,EAAM4B,QZp6BO,cYo6BqBrD,GAClCyB,EAAM4K,OZr6BO,cYq6BoBrM,IAErChD,KAAKhI,KAAKoxB,kBAAoB,SAAUpmB,GACpCyB,EAAM4B,QZl6Ba,oBYk6BqBrD,GACxCyB,EAAM4K,OZn6Ba,oBYm6BoBrM,IAE3ChD,KAAKhI,KAAKqxB,YAAc,SAAUrmB,GACE,SAA5ByB,EAAMxI,aAAaC,MACnBuI,EAAM4B,QZ36BG,cY26ByBrD,GAEtCyB,EAAM4K,OZ76BO,cY66BoBrM,KAGzCsX,EAASrZ,UAAUkmB,kBAAoB,SAAUnkB,GAC7C,GAAIyB,GAAQzE,IACR+K,gBAAe/K,KAAKgU,iBACpBsV,WAAW,WACP7kB,EAAM8kB,sBAAsBvmB,IAC7B,KAGHhD,KAAKupB,sBAAsBvmB,IAGnCsX,EAASrZ,UAAUoiB,iBAAmB,WAQlC,GAAIrjB,KAAKhJ,YAAcQ,EAAgBwI,MAAO,CAC1C,GAAIrB,GAAOqB,KAAK3C,SACZmsB,EAAYjrB,WAAS,QAASyB,KAAKhJ,WACvCgJ,MAAKhI,KAAKhB,YAAeqZ,OAAQ1R,EAAM4M,MAAOie,OAG9CxpB,MAAKhI,KAAKhB,WAAegJ,KAAKhJ,qBAAsBC,eAChC,GAAIA,eAAY+I,KAAKhJ,WAAWA,WAAYgJ,KAAKhJ,WAAWyyB,aAAczpB,KAAKhJ,WAAWE,SAA1G8I,KAAK3C,QAOb,IALI0N,cAAc/K,KAAKhJ,qBAAsBC,iBACzC+I,KAAKhI,KAAKhB,WAAsB,YAAIgJ,KAAKhJ,WAAsB,YAC/DgJ,KAAKhI,KAAKhB,WAAyB,eAAIgJ,KAAKhJ,WAAyB,eACrEgJ,KAAKhI,KAAKhB,WAAc,IAAIgJ,KAAKhJ,WAAc,KAE/CgJ,KAAKhJ,qBAAsBC,iBAAgB+I,KAAKhJ,WAAWA,WAAW4oB,SAAW5f,KAAKhJ,WAAW+C,OAAQ,CACzGiG,KAAKhI,KAAKhB,WAAqB,WAAE6E,KAAO7B,EAAYgG,KAAKhJ,WAAqB,WAAE6E,MAChFmE,KAAKhI,KAAKhB,WAAgB,MAAIgJ,KAAKhJ,WAAW+C,KAC9C,IAAI2vB,GAAO1pB,KAAKhI,KAAKhB,UAChBe,qBAAkBiI,KAAKhI,KAAKhB,WAAgB,QAC7CgJ,KAAKhI,KAAKhB,WAAgB,MAAEkb,KAAK,SAAU3U,GACvCmsB,EAAe,WAAE9J,SAAU,EAC3B8J,EAAoB,iBAAI,EACxBA,EAAe,WAAE7tB,KAAO0B,EAAE8S,OAC1BqZ,EAAY,QAAI,GAAIC,mBAKpCrP,EAASrZ,UAAUylB,yBAA2B,WAC1C,GACIkD,GADAnlB,EAAQzE,IAER+K,eAAc/K,KAAKgU,mBACdjc,oBAAkBiI,KAAKhI,KAAK4xB,kBAC7BA,EAAiB5pB,KAAKhI,KAAK4xB,iBAGnC5pB,KAAKhI,KAAK6xB,YAAc,SAAU7mB,GACL,YAArBA,EAAKnD,aAA6BmD,EAAK3B,QAAU2B,EAAK3B,OAAOid,eAC7Dtb,EAAK3B,OAAOid,cAAc9Y,UAAUC,SAAS,yBAC7CzC,EAAKoD,QAAS,GAGE,YADFxN,YAAU,cAAeoK,IAEvCyB,EAAM4K,OAAO,qBAEjB5K,EAAM4K,OAAO,eAAiBpU,WAAY+H,IACrClM,EAAa2N,IAAW1M,oBAAkB0M,EAAM2G,eAAkB5T,EAAgBiN,IAClC,IAA7CA,EAAMzM,KAAKK,eAAeV,QAAQC,QAAyD,IAAzC6M,EAAMzM,KAAKC,eAAeC,IAAIN,SACpF6M,EAAM4K,OAAO,gBAAkBhS,SAAUoH,EAAMzM,KAAKhB,aACpDyN,EAAMzM,KAAKhB,WAAayN,EAAMqM,YAAYT,OAE9C,IAAIwX,GAAkB,GAAIL,WAC1B,IAAIzc,cAAmC,WAArB/H,EAAKnD,cAA6B4E,EAAMuP,iBAAkB,CAExEhR,EAAS,KAAIA,EAAS,KAAE,GAe5B,MAbAyB,GAAM4B,QZ3jCO,cY2jCqBrD,EAAM,SAAU2T,GAC9C,GAAI5L,cAAyC,WAA3B4L,EAAW9W,cAA6B4E,EAAMuP,iBAAkB,CAE9E2C,EAAe,MAAKA,EAAe,MAElCA,EAAWvQ,QACZ3B,EAAM4K,OZ/gCH,YY+gC4BsH,GAE/B5L,cAAyC,cAA3B4L,EAAW9W,cAAgC4E,EAAMuP,mBAC/D2C,EAAW9X,IAAMgqB,aAAWlS,EAAW9X,MAE3CgpB,EAAgBH,QAAQ/Q,KAErBkR,GAEX7nB,KAAKhI,KAAK4xB,eAAiB,SAAU5mB,GACjC,GAAI+H,cAActG,EAAMuP,kBAAyC,oBAArBhR,EAAKnD,YAAmC,CAEhF,IAAK,GADDqF,GAAOT,EAAM1F,UACRrH,EAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAAK,EAC9BwN,EAAKxN,GAAG8N,UAAUC,SAAS,uBAAyBP,EAAKxN,GAAG8N,UAAUC,SAAS,wBAC9EhB,EAAMyJ,mBAA0C,WAArBlL,EAAKnD,YAA4ByK,eAAapF,EAAKxN,IAAK,qBAChF4S,eAAapF,EAAKxN,IAAK,sBAC1B+M,EAAMyJ,mBAA0C,WAArBlL,EAAKnD,YAA4ByN,YAAUpI,EAAKxN,IAAK,sBAC7E4V,YAAUpI,EAAKxN,IAAK,qBAE5B,IAAI8H,GAAQ0F,EAAKxN,GAAGiO,iBAAiB,cACjCmkB,EAAatqB,EAAMiF,EAAMhF,iBAAiByU,uBAAuB,sBAAsB,IACvF1U,EAAMiF,EAAMhF,iBAAiByU,uBAAuB,oBAAoB,EACxE4V,KACCrlB,EAAMyJ,mBAA0C,WAArBlL,EAAKnD,YAA4ByK,eAAawf,GAAa,oBACnFxf,eAAawf,GAAa,sBAC7BrlB,EAAMyJ,mBAA0C,WAArBlL,EAAKnD,YAA4ByN,YAAUwc,GAAa,sBAChFxc,YAAUwc,GAAa,qBAG/BF,GAA4C,kBAAnBA,IACzBA,EAAe5nB,MAAMyC,GAAQzB,IAiBrC,GAdAyB,EAAM4K,OAAO,iBAAkBrM,GAC/ByB,EAAM2Y,oBACN3Y,EAAMslB,sBACmB,YAArB/mB,EAAKnD,aACL4E,EAAM4K,OAAO,qBAEjB5K,EAAM4K,OAAO,kBAAoBpU,WAAY+H,IACpB,QAArBA,EAAKnD,aAAgE,QAAtC4E,EAAMxI,aAAaQ,gBAAkE,WAAtCgI,EAAMxI,aAAaQ,gBACjGgI,EAAM4K,OZtjCA,WYsjCwBrM,GAET,cAArBA,EAAKnD,aACL4E,EAAM4K,OZniCC,YYmiCwBrM,GAEnCyB,EAAM4K,OAAO,oBAAqBrM,GAC9B+H,cAAmC,WAArB/H,EAAKnD,cAA6B4E,EAAMuP,iBAAkB,CAExEhR,EAAS,KAAIA,EAAS,KAAE,GAE5ByB,EAAM4B,QZhnCU,iBYgnCqBrD,KAG7CsX,EAASrZ,UAAUwlB,mBAAqB,WACpC,GAAIhiB,GAAQzE,KACRiE,EAAWjE,IACfA,MAAKhI,KAAKqtB,kBAAoB,SAAUriB,GACpCyB,EAAM4B,QZrkCa,oBYqkCqBrD,GACxCyB,EAAM4K,OZtkCa,oBYskCoBrM,IAE3ChD,KAAKhI,KAAKgyB,gBAAkB,SAAUhnB,GAClCyB,EAAM4K,OAAO,kBAAmBrM,GAChCyB,EAAM4B,QZhiCW,kBYgiCqBrD,IAE1ChD,KAAKhI,KAAKoV,aAAe,SAAUpK,GAC3BjL,oBAAkBiI,KAAK0W,YACvBnE,WAAS,cAAc,EAAOvP,GAG9BuP,WAAS,aAAcvS,KAAK0W,WAAY1T,GAE5CiB,EAAS5E,aAAayO,YAAY9K,IAEtChD,KAAKhI,KAAKmV,cAAgB,SAAUnK,GAC5BjL,oBAAkBiI,KAAK0W,YACvBnE,WAAS,cAAc,EAAOvP,GAG9BuP,WAAS,aAAcvS,KAAK0W,WAAY1T,GAE5CiB,EAAS5E,aAAaC,WAAW0D,IAErChD,KAAKhI,KAAKiyB,iBAAmB,SAAUjnB,GACnCyB,EAAM4K,OZ7mCY,mBY6mCoBrM,GACtCyB,EAAM4B,QZ9mCY,mBY8mCqBrD,IAE3ChD,KAAKhI,KAAKkyB,gBAAkB,SAAUlnB,GAClCyB,EAAM4K,OZnnCW,kBYmnCoBrM,GACrCyB,EAAM4B,QZpnCW,kBYonCqBrD,IAE1ChD,KAAKhI,KAAKmV,cAAgB,SAAUnK,GAChCyB,EAAMpF,aAAaC,WAAW0D,KAGtCsX,EAASrZ,UAAU2lB,mBAAqB,WACpC,GAAIniB,GAAQzE,KACRiE,EAAWjE,IACfA,MAAKhI,KAAKmyB,mBAAqB,SAAUnnB,GACrCiB,EAASoC,QZhkCW,qBYgkCwBrD,IAEhDhD,KAAKhI,KAAKoyB,aAAe,SAAUpnB,GAC/BiB,EAASoC,QZ/jCK,eY+jCwBrD,IAE1ChD,KAAKhI,KAAKqyB,QAAU,SAAUrnB,GAC1B,GAAIyB,EAAMzM,KAAKsyB,OAEX,YADAtnB,EAAKoD,QAAS,EAGlBnC,GAASoL,OZhkCG,cYgkCuBrM,GACnCiB,EAASoC,QZ7kCA,UY6kCwBrD,IAErChD,KAAKhI,KAAKuyB,QAAU,SAAUvnB,GAC1B,GAAIyB,EAAMzM,KAAKsyB,OAEX,YADAtnB,EAAKoD,QAAS,EAGlBnC,GAASoL,OZtkCG,cYskCuBrM,GACnCA,EAAKoD,QAAS,IAOtBkU,EAASrZ,UAAU8gB,SAAW,WAC1B/hB,KAAKojB,qBACLpjB,KAAKgjB,iBACLzQ,WAAS,qBAAsBvS,KAAKwqB,mBAAoBxqB,KAAKhI,KAE7Dua,YAAS,mBAAoBvS,KAAQ,iBAAGA,KAAKhI,OAMjDsiB,EAASrZ,UAAU4gB,oBAAsB,WACrC,IAAK7hB,KAAKrI,QAAQC,SAAYoI,KAAK4hB,WAAWxQ,YAAc1Y,OAAOC,KAAKqH,KAAKhJ,YAAYY,OAAS,CAC9FoI,KAAKrI,UACL,IAAIoB,OAAS,EAIbA,GAASiH,KAAKhJ,WAAW,EAGzB,KAAK,GADD2B,GAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/DsI,KAAK/C,aAAc+C,KAAKlD,iBAAiB4B,QAAQ/F,EAAKjB,KACvDsI,KAAKrI,QAAQkB,KAAKF,EAAKjB,MAKvC4iB,EAASrZ,UAAUqjB,oBAAsB,WACrC,GAAIpkB,KAYJ,QAVAA,EAAK8gB,YAAchhB,KAAK/D,aAAa+kB,YACrC9gB,EAAKD,aAAeD,KAAK/D,aAAagE,aACtCC,EAAK+gB,cAAgBjhB,KAAK/D,aAAaglB,cACvC/gB,EAAKzD,eAAsD,WAArCuD,KAAK/D,aAAaQ,eAA8B,SAAW,MACjFyD,EAAKuqB,oBAAsBzqB,KAAK/D,aAAawuB,oBAC7CvqB,EAAKwqB,kBAAoB1qB,KAAK/D,aAAayuB,kBAC3CxqB,EAAK0P,SAAW5P,KAAK/D,aAAa2T,SAClC1P,EAAKyqB,wBAA0B3qB,KAAK/D,aAAa0uB,wBACjDzqB,EAAS,KAAIF,KAAK/D,aAAiB,KACnCiE,EAAK0qB,OAAS5qB,KAAK/D,aAAa2uB,OACxB5qB,KAAK/D,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDgE,EAAKhE,KAAO8D,KAAK/D,aAAaC,IAC9B,MACJ,KAAK,MACDgE,EAAKhE,KAAO,QACZ,MACJ,KAAK,OACDgE,EAAKhE,KAAO,SACZgE,EAAKwqB,mBAAoB,EAGjC,MAAOxqB,IAMXoa,EAASrZ,UAAUmjB,eAAiB,WAChC,GAAIpkB,KAAK0gB,iBAAkB,CAEvB,IAAK,GADDxN,MACKxb,EAAI,EAAGA,EAAIsI,KAAK0gB,iBAAiB9oB,OAAQF,IAC9C,OACQsI,KAAK0gB,iBAAiBhpB,IAC1B,IAAK,SACL,IAAK4gB,oBAAiB2D,OAClB/I,EAAMra,MAAOgyB,KAAM7qB,KAAKsc,KAAKwO,YAAY,UACrCzpB,OAAQ,aAAc8O,GAAInQ,KAAKkQ,QAAQC,GAAK,4BAC5C+C,QAAU2X,KAAM7qB,KAAKsc,KAAKwO,YAAY,SAAU3a,GAAI,UAAa0a,KAAM7qB,KAAKsc,KAAKwO,YAAY,SAAU3a,GAAI,WAC/G,MACJ,SACI+C,EAAMra,KAAKmH,KAAK0gB,iBAAiBhpB,IAG7C,MAAOwb,GAGP,MAAO,OAOfoH,EAASrZ,UAAU+iB,eAAiB,WAChC,GAAIhkB,KAAKygB,QAAS,CAEd,IAAK,GADDvN,MACKxb,EAAI,EAAGA,EAAIsI,KAAKygB,QAAQ7oB,OAAQF,IACrC,OACQsI,KAAKygB,QAAQ/oB,IACjB,IAAK,SACL,IAAK2gB,eAAY0S,OACb7X,EAAMra,KAAK,SACX,MACJ,KAAK,QACL,IAAKwf,eAAYvL,MACboG,EAAMra,KAAK,QACX,MACJ,KAAK,YACL,IAAKwf,eAAY6D,UACb,GAAI8O,GAAchrB,KAAKsc,KAAKwO,YAAY,YACxC5X,GAAMra,MAAOgyB,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAY9a,GAAInQ,KAAKkQ,QAAQC,GAAK,0BAClD,MACJ,KAAK,cACL,IAAKkI,eAAY8D,YACb,GAAI+O,GAAUlrB,KAAKsc,KAAKwO,YAAY,cACpC5X,GAAMra,MAAOgyB,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAc9a,GAAInQ,KAAKkQ,QAAQC,GAAK,4BAE1E,MACJ,KAAK,SACL,IAAKkI,eAAY+D,UACb,GAAI+O,GAAgBnrB,KAAKsc,KAAKwO,YAAY,YAC1C5X,GAAMra,MACFgyB,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAY9a,GAAInQ,KAAKkQ,QAAQC,GAAK,uBAElD,MACJ,KAAK,UACL,IAAKkI,eAAYgE,WACb,GAAI+O,GAAiBprB,KAAKsc,KAAKwO,YAAY,aAC3C5X,GAAMra,MACFgyB,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAa9a,GAAInQ,KAAKkQ,QAAQC,GAAK,wBAEnD,MACJ,SACI+C,EAAMra,KAAKmH,KAAKygB,QAAQ/oB,IAGpC,MAAOwb,GAGP,MAAO,OAOfoH,EAASrZ,UAAUsiB,eAAiB,SAAU5rB,GAC1C,GAAIgI,GAAShI,CACbqI,MAAKkf,cAIL,KAAK,GAHDmM,GACAC,EACAC,KACK7zB,EAAI,EAAGA,EAAIiI,EAAO/H,OAAQF,IAAK,CACpC,GAAIgY,GAAa1P,KAAKhI,KAAKyW,eAAe9O,EAAOjI,GAAGwR,IAGpD,IAFAoiB,EAAa5b,MACb2b,KAC+B,gBAApBrrB,MAAKrI,QAAQD,GACpB4zB,EAAWhnB,MAAQ+mB,EAAe/mB,MAAQtE,KAAKrI,QAAQD,OAGvD,KAAK,GAAI8zB,GAAK,EAAGC,EAAK/yB,OAAOC,KAAKgH,EAAOjI,IAAK8zB,EAAKC,EAAG7zB,OAAQ4zB,IAAM,CAChE,GAAIxR,GAAOyR,EAAGD,EACV9zB,KAAMsI,KAAKP,iBAA4B,aAATua,EAC9BqR,EAAerR,GAAQra,EAAOjI,GAAGsiB,GAGjCsR,EAAWtR,GAAQqR,EAAerR,GAAQra,EAAOjI,GAAGsiB,GAI5Dra,EAAOjI,GAAGC,QACVqI,KAAKujB,eAAe5rB,EAAQD,GAAGC,SAG/BqI,KAAKkf,YAAYrmB,KAAK,GAAIiH,GAAOurB,IAErCE,EAAqB1yB,KAAKyyB,GAE9B,MAAOC,IAQXjR,EAASrZ,UAAUyqB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,GAFDC,IAAiB,EAEZL,EAAK,EAAGM,EAHApzB,OAAOC,KAAKgzB,GAGeH,EAAKM,EAAal0B,OAAQ4zB,IAAM,CACxE,GAAIxR,GAAO8R,EAAaN,EACxB,QAAQxR,GACJ,IAAK,UACKjP,cAAc/K,KAAKgU,kBAAoBhU,KAAkB,gBAC3DA,KAAKhI,KAAKL,QAAUqI,KAAKujB,eAAevjB,KAAKrI,SAEjD,MACJ,KAAK,kBACDqI,KAAKhI,KAAK+zB,gBACV,MACJ,KAAK,cACD/rB,KAAKhI,KAAK+V,YAAc/N,KAAK+N,WAC7B,MACJ,KAAK,eACD/N,KAAKhI,KAAKgW,aAAeyV,sBAAoBzjB,KAAKgO,cAClD6d,GAAiB,CACjB,MACJ,KAAK,uBACD7rB,KAAKhI,KAAKsG,qBAAuB0B,KAAK1B,oBACtC,MACJ,KAAK,UACD0B,KAAKhI,KAAKyoB,QAAUzgB,KAAKgkB,gBACzB,MACJ,KAAK,iBACDhkB,KAAKhI,KAAKmpB,eAAiBnhB,KAAKmhB,cAChC,MACJ,KAAK,oBACDnhB,KAAKhI,KAAKmN,kBAAoBse,sBAAoBzjB,KAAKmF,kBACvD,MACJ,KAAK,eACDnF,KAAKhI,KAAKsI,aAAeN,KAAKM,YAC9B,MACJ,KAAK,oBACDN,KAAKhI,KAAKg0B,kBAAoBhsB,KAAKgsB,iBACnC,MACJ,KAAK,eACDhsB,KAAKhI,KAAKyG,aAAeglB,sBAAoBzjB,KAAKvB,aAClD,MACJ,KAAK,iBACDuB,KAAKhI,KAAKC,eAAiBwrB,sBAAoBzjB,KAAK/H,eACpD,MACJ,KAAK,iBACD+H,KAAKhI,KAAKI,eAAiB4H,KAAK5H,cAChC,MACJ,KAAK,iBACD4H,KAAKhI,KAAKK,eAAiBorB,sBAAoBzjB,KAAK3H,eACpD,MACJ,KAAK,iBACD2H,KAAKhI,KAAKqI,eAAiBL,KAAKK,cAChC,MACJ,KAAK,sBACDL,KAAKhI,KAAKkM,oBAAsBlE,KAAKkE,mBACrC,MACJ,KAAK,aACDlE,KAAKhI,KAAKkd,WAAauO,sBAAoBzjB,KAAKkV,WAChD,MACJ,KAAK,aAID,GAHAlV,KAAKgX,cAAiBhX,KAAKhJ,qBAAsBC,kBAAkBc,oBAAkBiI,KAAKhJ,WAAW+C,QAC9FiG,KAAKhJ,WAAWE,kBAAmB2oB,qBAC1C7f,KAAK8hB,gBAAgB9hB,KAAKhJ,YACtBgJ,KAAKgX,YAAa,CAClB,GAAIxf,EAAgBwI,MAAO,CACvB,GAAIuL,GAAQhN,WAAS,QAASyB,KAAKhJ,WACnCgJ,MAAKhI,KAAKhB,YAAeqZ,OAAQrQ,KAAK3C,SAAUkO,MAAOA,OAGvDvL,MAAKhI,KAAKhB,WAAegJ,KAAKhJ,qBAAsBC,eAChC,GAAIA,eAAY+I,KAAKhJ,WAAWA,WAAYgJ,KAAKhJ,WAAWyyB,aAAczpB,KAAKhJ,WAAWE,SAA1G8I,KAAK3C,QAET2C,MAAK1B,uBACL0B,KAAKhI,KAAK4d,cAAcqW,qBAAsB,OAIlDjsB,MAAKqjB,mBACDrjB,KAAK1B,uBACL0B,KAAKhI,KAAK4d,cAAcjO,sBACxB3H,KAAKhI,KAAK4d,cAAcsW,cAAc,MACtClsB,KAAKhI,KAAK4d,cAAcuW,cAGhC,MACJ,KAAK,QACDnsB,KAAKhI,KAAKsZ,MAAQtR,KAAKsR,KACvB,MACJ,KAAK,oBACGqa,EAAQ3R,GACRha,KAAKge,cAGLhe,KAAK+d,WAET,MACJ,KAAK,qBACD/d,KAAKhI,KAAKo0B,SACV,MACJ,KAAK,YACDpsB,KAAKhI,KAAK+rB,UAAY/jB,KAAK+jB,SAC3B,MACJ,KAAK,cACD/jB,KAAKhI,KAAKyX,YAAcgU,sBAAoBzjB,KAAKyP,YACjD,MACJ,KAAK,aACDzP,KAAKhI,KAAKkH,WAAac,KAAKd,UAC5B,MACJ,KAAK,gBACDc,KAAKhI,KAAK0H,cAAgBM,KAAKN,aAC/B,MACJ,KAAK,YACDM,KAAKhI,KAAK8rB,UAAY9jB,KAAK8jB,SAC3B,MACJ,KAAK,SACI/rB,oBAAkBiI,KAAKoiB,SAAoC,gBAAjBpiB,eAA2D,IAA9BA,KAAKoiB,OAAO1jB,QAAQ,OAC5FsB,KAAKkQ,QAAQtV,MAAMwnB,OAASpiB,KAAKoiB,QAErCpiB,KAAKhI,KAAKoqB,OAASpiB,KAAKoiB,MACxB,MACJ,KAAK,QACIrqB,oBAAkBiI,KAAK8J,QAAkC,gBAAhB9J,cAAyD,IAA7BA,KAAK8J,MAAMpL,QAAQ,OACzFsB,KAAKkQ,QAAQtV,MAAMkP,MAAQ9J,KAAK8J,OAEpC9J,KAAKhI,KAAK8R,MAAQ9J,KAAK8J,KACvB,MACJ,KAAK,SACD9J,KAAKhI,KAAKwkB,OAASxc,KAAKwc,MACxB,MACJ,KAAK,mBACDxc,KAAKhI,KAAKmsB,iBAAmBnkB,KAAKmkB,gBAClC,MACJ,KAAK,eACDnkB,KAAKhI,KAAK2rB,aAAe3jB,KAAK2jB,YAC9B,MACJ,KAAK,cACD3jB,KAAKhI,KAAK4rB,YAAc5jB,KAAK4jB,WAC7B,MACJ,KAAK,iBACD5jB,KAAKhI,KAAK6rB,eAAiB7jB,KAAK6jB,cAChC,MACJ,KAAK,mBACD7jB,KAAKhI,KAAK2oB,iBAAmB3gB,KAAK2gB,gBAClC,MACJ,KAAK,iBACD3gB,KAAKhI,KAAK6oB,eAAiB7gB,KAAK6gB,cAChC,MACJ,KAAK,YACD7gB,KAAKhI,KAAKsrB,UAAYtjB,KAAKsjB,SAC3B,MACJ,KAAK,kBACDtjB,KAAKhI,KAAKoI,gBAAkBJ,KAAKI,eACjC,MACJ,KAAK,gBACDJ,KAAKhI,KAAKuI,cAAgBP,KAAKO,aAC/B,MACJ,KAAK,mBACDP,KAAKhI,KAAKksB,iBAAmBT,sBAAoBzjB,KAAKkkB,iBACtD,MACJ,KAAK,gBACDlkB,KAAKhI,KAAKmX,cAAgBsU,sBAAoBzjB,KAAKmP,eACnDnP,KAAKhI,KAAKo0B,SACV,MACJ,KAAK,mBACDpsB,KAAKhI,KAAK0oB,iBAAmB1gB,KAAKokB,gBAClC,MACJ,KAAK,oBACDpkB,KAAKhI,KAAK8oB,kBAAoB9gB,KAAK8gB,iBACnC,MACJ,KAAK,iBACD9gB,KAAKhI,KAAK4oB,eAAiB6C,sBAAoBzjB,KAAK4gB,eACpD,MACJ,KAAK,kBACD5gB,KAAKhI,KAAKqsB,gBAAkBZ,sBAAoBzjB,KAAKqkB,gBACrD,MACJ,KAAK,eAMD,GALIrkB,KAAKhI,KAAKsyB,QAA0C,WAAhCtqB,KAAKhI,KAAKiE,aAAaC,MAAqByvB,EAAQ3R,GAAM9d,OACtD,SAAvByvB,EAAQ3R,GAAM9d,MAA0C,QAAvByvB,EAAQ3R,GAAM9d,OAChD8D,KAAKhI,KAAKq0B,YAEdrsB,KAAKhI,KAAKiE,aAAe+D,KAAKskB,sBAC1BtkB,KAAKhI,KAAKiE,aAAagE,aAAc,CAErCD,KAAK7D,WAAoB,WAAI,GAIrC0vB,GACA7rB,KAAKhI,KAAKo0B,YAStB9R,EAASrZ,UAAU+F,QAAU,WACzBhH,KAAKssB,iBACLtsB,KAAKuhB,eACLxf,EAAOd,UAAU+F,QAAQpE,KAAK5C,MAC1BA,KAAKhI,MACLgI,KAAKhI,KAAKgP,UAEVhH,KAAK4hB,YACL5hB,KAAK4hB,WAAW5a,SAMpB,KAAK,GAJDuZ,IAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnD7oB,EAAI,EAAGA,EAAI6oB,EAAQ3oB,OAAQF,IAC5BsI,KAAKugB,EAAQ7oB,MACbsI,KAAKugB,EAAQ7oB,IAAM,KAG3BsI,MAAKkQ,QAAQxF,UAAY,GACzB1K,KAAKhI,KAAO,MAQhBsiB,EAASrZ,UAAUsrB,SAAW,WAC1BxqB,EAAOd,UAAUsrB,SAAS3pB,KAAK5C,MACzB+K,cAAc/K,KAAKgU,oBAAqBzV,WAAS,aAAcyB,KAAKhI,OAAUgI,KAAK1G,gBACrF0G,KAAKhI,KAAKu0B,YAQlBjS,EAASrZ,UAAUurB,eAAiB,WAWhC,IAAK,GAVDC,IAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACA1e,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG3V,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvCwG,gBAAkB9G,WAAawsB,qBAE/BwI,GAAkB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAC1Bj1B,EAAI,EAAGA,EAAI+0B,EAAU70B,OAAQF,IAElC,IAAK,GADDk1B,GAAgB5sB,KAAKysB,EAAU/0B,IAC1B8zB,EAAK,EAAGC,EAAKiB,EAAgBD,EAAU/0B,IAAK8zB,EAAKC,EAAG7zB,OAAQ4zB,UAE1DoB,GADGnB,EAAGD,GAKrB,OADAxrB,MAAK6sB,eAAeF,EAAgB3sB,KAAKrI,SAClCqI,KAAK8sB,aAAaL,IAE7BnS,EAASrZ,UAAU4rB,eAAiB,SAAUF,EAAgBh1B,GAC1D,IAAK,GAAID,GAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACXqI,KAAK+sB,eAAeJ,EAAgBh1B,EAAQD,IAC5CsI,KAAK6sB,eAAeF,EAAgBh1B,EAAQD,GAAGC,UAG/CqI,KAAK+sB,eAAeJ,EAAgBh1B,EAAQD,KAIxD4iB,EAASrZ,UAAU8rB,eAAiB,SAAUJ,EAAgBhtB,GAC1D,IAAK,GAAIjI,GAAI,EAAGA,EAAIi1B,EAAe/0B,OAAQF,UAChCiI,GAAOgtB,EAAej1B,IAC7BiI,EAAOrC,WAGfgd,EAASrZ,UAAU+e,kBAAoB,SAAUziB,GAC7C,GAAKxF,oBAAkBwF,EAAEyvB,SAAzB,CAGA,GAAI3rB,GAAS9D,EAAE8D,QACVA,EAAOmE,UAAUC,SAAS,sBAC3BpE,EAAOmE,UAAUC,SAAS,uBAA4BzF,KAAKitB,gBAAmBjtB,KAAKhI,KAAKsyB,QACxFtqB,KAAKme,sBAAsB9c,GAE/BrB,KAAKitB,gBAAiB,EACtBjtB,KAAKqP,OAAO,qBAAuBhO,OAAQA,MAM/CiZ,EAASrZ,UAAUlC,QAAU,WACzB,MAAOiB,MAAKhI,KAAK+G,WAMrBub,EAASrZ,UAAUisB,SAAW,WAC1B,MAAOltB,MAAKhI,KAAKk1B,YASrB5S,EAASrZ,UAAUksB,UAAY,SAAUxuB,EAAMpE,EAAO6yB,GAC9CptB,KAAK7D,YACL6D,KAAK7D,WAAWgxB,UAAUxuB,EAAMpE,EAAO6yB,IAM/C9S,EAASrZ,UAAUorB,UAAY,WACvBrsB,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWkwB,aAM7B/R,EAASrZ,UAAUosB,SAAW,WACtBrtB,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWkxB,YAS7B/S,EAASrZ,UAAUqsB,WAAa,SAAUxmB,EAAUxC,EAAOhK,GACnD0F,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWmxB,WAAWxmB,EAAUxC,EAAOhK,IAQzDggB,EAASrZ,UAAUssB,UAAY,SAAUhzB,EAAOoE,GAC5C,GAAIqB,KAAKhI,KAAKmE,WACV,GAAKpE,oBAAkBwC,GAMnByF,KAAKhI,KAAKmE,WAAWoxB,UAAUhzB,EAAOoE,OANX,CAC3B,GAAIwkB,GAAWnjB,KAAKhI,KAAK2F,wBAAwBpD,EACjDiC,UAAO2mB,EAAUxkB,GACjBqB,KAAKhI,KAAKmE,WAAWoxB,UAAUhzB,EAAO4oB,KAalD7I,EAASrZ,UAAUusB,aAAe,SAAUC,EAAW9uB,GAC/CqB,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWqxB,aAAaC,EAAW9uB,IAOrD2b,EAASrZ,UAAUysB,UAAY,SAAU7uB,GACjCmB,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWuxB,UAAU7uB,IAQvCyb,EAASrZ,UAAU0sB,SAAW,SAAU7mB,EAAUxC,GAC1CtE,KAAK7D,YACL6D,KAAK7D,WAAWwxB,SAAS7mB,EAAUxC,IAQ3CgW,EAASrZ,UAAU2sB,mBAAqB,SAAU1a,EAAO2a,GACjD7tB,KAAKhI,KAAK81B,eACV9tB,KAAKhI,KAAK81B,cAAcC,YAAY7a,EAAO2a,IAMnDvT,EAASrZ,UAAU+sB,QAAU,WACrBhuB,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAW6xB,WAS7B1T,EAASrZ,UAAUgtB,kBAAoB,SAAUC,EAAGC,GAC5CnuB,KAAKouB,qBACLpuB,KAAKouB,oBAAoBH,kBAAkBC,EAAGC,IAOtD7T,EAASrZ,UAAUotB,UAAY,SAAUjiB,GACjCpM,KAAKhI,KAAKmE,YACV6D,KAAKhI,KAAKmE,WAAWkyB,UAAUjiB,IAOvCkO,EAASrZ,UAAUtF,wBAA0B,WACzC,MAAOqE,MAAKhI,KAAK2D,2BASrB2e,EAASrZ,UAAUqtB,aAAe,SAAUp2B,EAAKoM,EAAOhK,GACpD0F,KAAKhI,KAAKs2B,aAAap2B,EAAKoM,EAAOhK,IAQvCggB,EAASrZ,UAAUrC,WAAa,SAAU1G,EAAK0Q,GAC3C,GAAIxK,GAAiB4B,KAAKrC,wBACtB4wB,EAAavuB,KAAKhI,KAAK2D,0BAA0B,GACjDnB,EAAQ,EACRzB,IACJqF,GAAegjB,KAAK,SAAU9mB,EAAO5C,EAAG6F,GACpC,MAAIjD,GAAMi0B,KAAgBr2B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfoO,EAAQpO,MAAQA,EAChBoO,EAAQrO,MAAQxB,EAAOwB,MACvBqO,EAAQjP,aAAeZ,EAAOY,aAC9BiP,EAAQjM,SAAW5D,EAAO4D,SAC1BiM,EAAQvP,SAAWN,EAAOM,SAC1BuP,EAAQzP,WAAaJ,EAAOI,WAC5ByP,EAAQwB,cAAgBrR,EAAOqR,cAC/BxB,EAAQlP,gBAAkBX,EAAOW,gBACjCkP,EAAQpK,eAAiBzF,EAAOyF,eAChCoK,EAAQpP,SAAWT,EAAOS,SAC1BwG,KAAKhI,KAAK4G,WAAW1G,EAAK0Q,IAO9B0R,EAASrZ,UAAUutB,SAAW,SAAUC,GAChCzuB,KAAKhI,KAAK02B,aACV1uB,KAAKhI,KAAK02B,YAAYF,SAASC,IAQvCnU,EAASrZ,UAAU0tB,sBAAwB,SAAUprB,GAC7CvD,KAAK0uB,aACL1uB,KAAKhI,KAAK02B,YAAYC,sBAAsBprB,IASpD+W,EAASrZ,UAAU2tB,iBAAmB,SAAU9nB,EAAUkC,GACtD,MAAOhJ,MAAKhI,KAAK42B,iBAAiB9nB,EAAUkC,IAOhDsR,EAASrZ,UAAUyW,iBAAmB,SAAUpT,GAC5C,MAAIyG,eAAc/K,KAAKgU,iBACZ6a,uBAAqB7uB,KAAKhI,KAAKL,QAAS,SAAUuL,EAAM3I,GAC3D,GAAI2I,EAAKoB,QAAUA,EACf,MAAOpB,KAGZ,GAGI2rB,uBAAqB7uB,KAAKkf,YAAa,SAAUhc,EAAM3I,GAC1D,GAAI2I,EAAKoB,QAAUA,EACf,MAAOpB,KAGZ,IAQXoX,EAASrZ,UAAUwN,eAAiB,SAAUvF,GAC1C,MAAO2lB,wBAAqB7uB,KAAKhI,KAAKL,QAAS,SAAUuL,EAAM3I,GAC3D,GAAI2I,EAAKgG,MAAQA,EACb,MAAOhG,KAGZ,IAMPoX,EAASrZ,UAAU6tB,oBAAsB,WACrC,MAAO9uB,MAAKhI,KAAK82B,uBAMrBxU,EAASrZ,UAAU8tB,iBAAmB,WAClC,MAAO/uB,MAAKhI,KAAK+2B,oBAMrBzU,EAASrZ,UAAU+tB,sBAAwB,WACvC,MAAOhvB,MAAKhI,KAAKg3B,yBAQrB1U,EAASrZ,UAAUguB,YAAc,SAAUt2B,EAAMu2B,GAC7ClvB,KAAKhI,KAAKi3B,YAAYt2B,EAAMu2B,GAC5BlvB,KAAKod,qBAQT9C,EAASrZ,UAAUkuB,YAAc,SAAUx2B,EAAMy2B,GAC7CpvB,KAAKhI,KAAKm3B,YAAYx2B,EAAMy2B,GAC5BpvB,KAAKod,qBAOT9C,EAASrZ,UAAUouB,uBAAyB,SAAU/qB,GAClD,MAAOtE,MAAKhI,KAAKq3B,uBAAuB/qB,IAO5CgW,EAASrZ,UAAUquB,uBAAyB,SAAU/0B,GAClD,MAAOyF,MAAKhI,KAAKs3B,uBAAuB/0B,IAO5C+f,EAASrZ,UAAUsuB,qBAAuB,SAAUrmB,GAChD,MAAOlJ,MAAKhI,KAAKu3B,qBAAqBrmB,IAO1CoR,EAASrZ,UAAUuuB,sBAAwB,SAAUlrB,GACjD,MAAOtE,MAAKhI,KAAKw3B,sBAAsBlrB,IAO3CgW,EAASrZ,UAAU0N,oBAAsB,SAAUzF,GAC/C,MAAOlJ,MAAKhI,KAAK2W,oBAAoBzF,IAMzCoR,EAASrZ,UAAUrB,WAAa,SAAU6vB,GACtC,MAAI1kB,eAAc/K,KAAKgU,iBACZhU,KAAKhI,KAAKL,SAGjBqI,KAAKod,kBAAkBpd,KAAKhI,KAAK4H,WAAW6vB,IACrCzvB,KAAKkf,cAGpB5E,EAASrZ,UAAUmc,kBAAoB,SAAUzd,GAC7C,GAAIsY,GACA3T,EACAorB,EAAc33B,oBAAkB4H,GAAUK,KAAKhI,KAAK4H,aAAeD,GACzC,IAA1BK,KAAKP,iBAA0BO,KAAKrI,QAAQqI,KAAKP,mBAChD1H,oBAAkBiI,KAAKrI,QAAQqI,KAAKP,iBAAiBmQ,YACtDqI,EAAOjY,KAAKrI,QAAQqI,KAAKP,iBAAiBmQ,SAC1CtL,EAAQorB,EAAY1vB,KAAKP,iBAAiB6E,OAE9CtE,KAAKkf,cAGL,KAAK,GADDoM,GADAqE,GAAgB,EAEXj4B,EAAI,EAAGA,EAAIg4B,EAAY93B,OAAQF,IAAK,CACzC4zB,IACA,KAAK,GAAIE,GAAK,EAAGC,EAAK/yB,OAAOC,KAAK+2B,EAAYh4B,IAAK8zB,EAAKC,EAAG7zB,OAAQ4zB,IAAM,CACrE,GAAIxR,GAAOyR,EAAGD,EACTzgB,eAAuB,SAATiP,IACfsR,EAAWtR,GAAQ0V,EAAYh4B,GAAGsiB,IAG1Cha,KAAKkf,YAAYrmB,KAAK,GAAIiH,GAAOwrB,IAC7BhnB,IAAUtE,KAAKkf,YAAYxnB,GAAG4M,OAAWvM,oBAAkBkgB,IAAkB,KAATA,IACpEjY,KAAKkf,YAAYxnB,GAAGkY,SAAWqI,GAGvC,IAAKlN,eAAe/K,KAAKgU,iBAAkB,CAEvChU,KAAU,WAAK,WACXA,KAAKhI,KAAKL,QAAQC,SAAWoI,KAAKkf,YAAYtnB,SAC9C+3B,GAAgB,GAEfA,GACD3vB,KAAKia,eAAgBtiB,QAASqI,KAAKkf,cAAe,GAEtDlf,KAAU,cAAIuZ,GAElB,MAAOvZ,MAAKkf,aAMhB5E,EAASrZ,UAAU2uB,WAAa,WAC5B,MAAO5vB,MAAKhI,KAAK43B,cAErBtV,EAASrZ,UAAU4Z,yBAA2B,WAE1C7a,KAAKhI,KAAa,qBAAEgK,MAAMhC,OAE9Bsa,EAASrZ,UAAU4uB,aAAe,SAAUC,EAAcn4B,GAEtDqI,KAAKhI,KAAa,aAAEgK,MAAMhC,MAAO8vB,EAAcn4B,KAEnD2iB,EAASrZ,UAAU8oB,oBAAsB,WACrC/pB,KAAKia,eAAgB5hB,eAAgBO,YAAU,aAAcoH,KAAKhI,KAAKK,kBAAmB,GAC1F2H,KAAKia,eAAgBjM,aAAcpV,YAAU,aAAcoH,KAAKhI,KAAKgW,gBAAiB,GACtFhO,KAAKia,eAAgBhiB,eAAgBW,YAAU,aAAcoH,KAAKhI,KAAKC,kBAAmB,GAC1F+H,KAAKia,eAAgBxb,aAAc7F,YAAU,aAAcoH,KAAKhI,KAAKyG,gBAAiB,IAM1F6b,EAASrZ,UAAU8S,gBAAkB,WACjC,MAAO/T,MAAKhI,KAAK+b,mBAMrBuG,EAASrZ,UAAU8uB,YAAc,WAG7B,IAAK,GAFDC,MACA9qB,EAAOlF,KAAKhI,KAAK+3B,cACZr4B,EAAI,EAAGe,EAAMyM,EAAKtN,OAAQF,EAAIe,EAAKf,IACnCwN,EAAKxN,GAAG8N,UAAUC,SAAS,iBAC5BuqB,EAAMn3B,KAAKqM,EAAKxN,GAGxB,OAAOs4B,IAOX1V,EAASrZ,UAAUtD,sBAAwB,WACvC,MAAOqC,MAAKhI,KAAK8c,iBAMrBwF,EAASrZ,UAAU7E,gBAAkB,WACjC,MAAO4D,MAAKhI,KAAKmE,WAAWC,mBAMhCke,EAASrZ,UAAUmI,iBAAmB,WAClC,MAAOpJ,MAAKhI,KAAKoR,oBAMrBkR,EAASrZ,UAAUgvB,eAAiB,WAChC,MAAOjwB,MAAKhI,KAAKi4B,kBAOrB3V,EAASrZ,UAAUnC,cAAgB,SAAUvE,GACzC,MAAOyF,MAAKhI,KAAK8G,cAAcvE,IAOnC+f,EAASrZ,UAAUivB,WAAa,SAAU7uB,GACtC,MAAOrB,MAAKhI,KAAKk4B,WAAW7uB,IAOhCiZ,EAASrZ,UAAUkvB,oBAAsB,SAAU7rB,GAC/C,MAAOtE,MAAKhI,KAAKm4B,oBAAoB7rB,IAMzCgW,EAASrZ,UAAUiF,kBAAoB,WAEnC,IAAK,GADDkqB,MACK5E,EAAK,EAAGC,EAAKzrB,KAAKkf,YAAasM,EAAKC,EAAG7zB,OAAQ4zB,IAAM,CAC1D,GAAIviB,GAAMwiB,EAAGD,EACTviB,GAAIonB,SACJD,EAAKv3B,KAAKoQ,GAGlB,MAAOmnB,IAKX9V,EAASrZ,UAAU4T,YAAc,WAC7BA,cAAY7U,KAAKkQ,UAKrBoK,EAASrZ,UAAUyR,YAAc,WAC7BA,cAAY1S,KAAKkQ,UAKrBoK,EAASrZ,UAAUmrB,QAAU,WACzBpsB,KAAK8hB,gBAAgB9hB,KAAKhJ,YAC1BgJ,KAAKhI,KAAKhB,WAAegJ,KAAKhJ,qBAAsBC,eAChC,GAAIA,eAAY+I,KAAKhJ,WAAWA,WAAYgJ,KAAKhJ,WAAWyyB,aAAczpB,KAAKhJ,WAAWE,SAA1G8I,KAAK3C,SACT2C,KAAKhI,KAAKo0B,WAOd9R,EAASrZ,UAAU4H,kBAAoB,WACnC,MAAO7I,MAAKijB,gBAAgBrW,qBAMhC0N,EAASrZ,UAAU4L,qBAAuB,WACtC,MAAO7M,MAAKijB,gBAAgBpW,wBAKhCyN,EAASrZ,UAAUkH,iBAAmB,SAAUmoB,GAC5CtwB,KAAKijB,gBAAgB9a,iBAAiBmoB,IAK1ChW,EAASrZ,UAAU8qB,eAAiB,SAAUwE,GACtCx4B,oBAAkBw4B,IAAcA,GAChCvwB,KAAKhI,KAAKL,QAAUqI,KAAKujB,eAAevjB,KAAKrI,SAC7CqI,KAAKhI,KAAK+zB,kBAGV/rB,KAAKhI,KAAKiiB,eAAgBtiB,QAASqI,KAAKujB,eAAevjB,KAAKrI,WAAY,IAMhF2iB,EAASrZ,UAAUuvB,cAAgB,WAC/BxwB,KAAKhI,KAAKw4B,iBAOdlW,EAASrZ,UAAUkd,sBAAwB,SAAU9c,GACjD,GAA+B,UAA3BrB,KAAK/D,aAAaC,KAAkB,CAGpC,GAAI8D,KAAK5D,kBAAkB4D,KAAKya,gBAAgB7iB,QAC5CoI,KAAK5D,kBAAkB4D,KAAK0a,gBAAgB9iB,QAAUoI,KAAK5D,kBAAkB4D,KAAKuQ,cAAc3Y,OAAQ,CACxG,GAAI64B,GAAYzwB,KAAKhI,KAAKmE,WAAc,SAGxC,OAFA6D,MAAKhI,KAAKmE,WAAqB,WAAE,aAAcs0B,QAC/CzwB,KAAK0wB,cAAgBrvB,IAI7B,GAAIrB,KAAKyP,YAAa,CAClB,GAAIkhB,GAAUtvB,EAAO6G,QAAQ,kBAAkBoW,cAC3CvlB,EAASiH,KAAKrC,wBAAwBgzB,EAAQ7pB,SAC9CzF,GAAOmE,UAAUC,SAAS,oBAC1BzF,KAAKke,YAAYyS,EAAS53B,GAG1BiH,KAAKqe,UAAUsS,EAAS53B,OAG3B,CAEGA,GADA43B,EAAU3wB,KAAKhI,KAAKk4B,WAAW7uB,IACduH,OACjBvH,GAAOmE,UAAUC,SAAS,oBAC1BzF,KAAKke,YAAYyS,EAAQ9xB,IAAK9F,GAG9BiH,KAAKqe,UAAUsS,EAAQ9xB,IAAK9F,KAQxCuhB,EAASrZ,UAAUod,UAAY,SAAUxf,EAAK9F,GAC1C,GAAI0L,GAAQzE,IACZjH,GAASiH,KAAK4wB,yBAAyB/xB,EAAK9F,IACvChB,oBAAkB8G,IAAQA,EAAIW,MAAM,GAAGgG,UAAUC,SAAS,kBAC3DzF,KAAK8mB,cAAcjoB,GAAK,EAE5B,IAAImE,IAASrE,KAAM5F,EAAQ8F,IAAKA,EAAKuH,QAAQ,EAC7CpG,MAAKqG,QZ1tEU,YY0tEgBrD,EAAM,SAAU6tB,GAC3C,IAAKA,EAAczqB,SACf3B,EAAMqsB,eAAe,SAAUjyB,EAAK9F,KAC9BjC,EAAa2N,IAAW5K,EAAU4K,MAAYjN,EAAgBiN,IAAQ,CACxE,GAAIssB,IAAiBpyB,KAAM5F,EAAQ8F,IAAKA,EACxC4F,GAAM4B,QZjuEJ,WYiuE6B0qB,OAK/CzW,EAASrZ,UAAU2vB,yBAA2B,SAAU/xB,EAAK9F,GAUzD,MATIiH,MAAK+N,aAAkD,QAAnC/N,KAAKgO,aAAaC,cAA0BjO,KAAKmf,aAAepnB,oBAAkBgB,KACrGjC,EAAakJ,MACdjH,EAASiH,KAAK3C,SAASC,OAAO,SAAUC,GACpC,MAAOA,GAAE7D,kBAGR3B,oBAAkBgB,KACvBA,EAASiH,KAAKhI,KAAK2F,wBAAwBkB,EAAIiI,WAE5C/N,GAMXuhB,EAASrZ,UAAUid,YAAc,SAAUrf,EAAK9F,GAC5C,GAAI0L,GAAQzE,KAERgD,GAASrE,KADb5F,EAASiH,KAAK4wB,yBAAyB/xB,EAAK9F,GACjB8F,IAAKA,EAAKuH,QAAQ,EAC7CpG,MAAKqG,QZpvEW,aYovEgBrD,EAAM,SAAUguB,GAC5C,IAAKA,EAAe5qB,OAAQ,CACxB3B,EAAMqsB,eAAe,WAAYjyB,EAAK9F,EACtC,IAAIg4B,IAAiBpyB,KAAM5F,EAAQ8F,IAAKA,EACnC/H,GAAa2N,IACdA,EAAM4B,QZ3vEH,YY2vE6B0qB,OAShDzW,EAASrZ,UAAUgwB,cAAgB,SAAUz2B,GACzC,IAAMwF,KAAK+N,aAAkD,QAAnC/N,KAAKgO,aAAaC,cAA2BjO,KAAK1B,wBAA0BxH,EAAakJ,MAAO,CAClHgM,EAAMhM,KAAKhI,KAAKhB,WAAWsG,OAAO,SAAUC,GAI5C,MAHIA,GAAE7D,iBAAmB6D,EAAE/C,QAAUA,IACjC+C,EAAE/D,UAAW,GAEV+D,EAAE7D,iBAAmB6D,EAAE/C,QAAUA,GAE5CwF,MAAKqe,UAAU,KAAMrS,OAMrB,KAAK,GAHDA,GAAMhM,KAAKkxB,iBAAiB12B,GAC5BqE,EAAMjG,YAAU,OAAQoT,GACxBjT,EAASH,YAAU,UAAWoT,GACzBtU,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/BsI,KAAKqe,UAAUxf,EAAInH,GAAIqB,EAAOrB,KAI1C4iB,EAASrZ,UAAUiwB,iBAAmB,SAAU12B,GAC5C,GAAI0K,GAAOlF,KAAKjB,UAAUzB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAEkM,UAAU/K,QAAQ,QAAUlE,KAC9B+C,EAAE0K,cAAc,wBAA0B1K,EAAE0K,cAAc,uBAItE,QADY1P,QADEyH,KAAKrC,wBAAwBL,OAAO,SAAUC,GAAK,MAAOA,GAAE/C,QAAUA,GAAS+C,EAAE7D,kBACjEwL,KAAMA,IAOxCoV,EAASrZ,UAAUkwB,gBAAkB,SAAU32B,GAC3C,IAAMwF,KAAK+N,aAAkD,QAAnC/N,KAAKgO,aAAaC,cAA2BjO,KAAK1B,wBAA0BxH,EAAakJ,MAAO,CACtH,GAAIjH,GAASiH,KAAKhI,KAAKhB,WAAWsG,OAAO,SAAUC,GAI/C,MAHIA,GAAE7D,iBAAmB6D,EAAE/C,QAAUA,IACjC+C,EAAE/D,UAAW,GAEV+D,EAAE7D,iBAAmB6D,EAAE/C,QAAUA,GAE5CwF,MAAKke,YAAY,KAAMnlB,OAMvB,KAAK,GAHDiT,GAAMhM,KAAKkxB,iBAAiB12B,GAC5B0K,EAAOtM,YAAU,OAAQoT,GACzBzT,EAAUK,YAAU,UAAWoT,GAC1BtU,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCsI,KAAKke,YAAYhZ,EAAKxN,GAAIa,EAAQb,GAG1C,KAAKsI,KAAKhI,KAAK4d,cAAcqW,qBAAuBjsB,KAAK1B,sBAAwB0B,KAAKjB,WAC/EiB,KAAK5C,WAAWxF,SAAWoI,KAAKjB,UAAUnH,OAAQ,CAErDoI,KAAKhI,KAAK4d,cAAcwb,YAAc,EACtCpxB,KAAKhI,KAAK4d,cAAsB,UAAK,IAO7C0E,EAASrZ,UAAU8c,UAAY,WAC3B/d,KAAKqxB,kBAAkB,WAM3B/W,EAASrZ,UAAU+c,YAAc,WAC7Bhe,KAAKqxB,kBAAkB,aAE3B/W,EAASrZ,UAAUowB,kBAAoB,SAAU31B,GAC7C,GAAIwJ,GAAOlF,KAAKjB,UAAUzB,OAAO,SAAUC,GACvC,MAAOA,GAAE0K,cAAc,eAA4B,WAAXvM,EAAsB,WAAa,YAI/E,IAFAsE,KAAKmf,aAAc,EACnBnf,KAAKof,eAAgB,GACfpf,KAAK+N,aAAkD,QAAnC/N,KAAKgO,aAAaC,cAA2BjO,KAAK1B,wBAA0BxH,EAAakJ,MAM/G,GALAA,KAAK3C,SAASC,OAAO,SAAUC,GACvBA,EAAE7D,kBACF6D,EAAE/D,SAAsB,aAAXkC,KAGjBwJ,EAAKtN,OACM,aAAX8D,EAAwBsE,KAAKke,YAAYhZ,EAAK,IAAMlF,KAAKqe,UAAUnZ,EAAK,QAEvE,CACD,GAAIosB,GAAsBtxB,KAAKkO,iBAC/BlO,MAAKia,eAAgB/L,mBAAmB,IAAQ,GAChDlO,KAAKhI,KAAK02B,YAAYF,SAAS,GAC/BxuB,KAAKia,eAAgB/L,kBAAmBojB,IAAuB,OAInE,KAAK,GAAI55B,GAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAClB,aAAXgE,EAAwBsE,KAAKke,YAAYhZ,EAAKxN,IAAMsI,KAAKqe,UAAUnZ,EAAKxN,GAGhFsI,MAAKmf,aAAc,EACnBnf,KAAKof,eAAgB,GAEzB9E,EAASrZ,UAAU6vB,eAAiB,SAAUp1B,EAAQmD,EAAK9F,EAAQ8a,GAC/D,GAAIgd,IAAkBhyB,IAAKA,EAAKF,KAAM5F,EAAQkO,aAAepH,YAAanE,IACrE5E,EAAakJ,OAAoB,WAAXtE,GAAuBsE,KAAK5E,iBAAmB5D,EAAgBwI,OACtFA,KAAKuxB,oBAAoBV,EAE7B,IAAI/c,GAAW9T,KAAKjB,SACpB,IAAIiB,KAAKyP,YAAa,CACdvK,EAAOlF,KAAK+T,kBAAkB7O,IAClC4O,MAAcpO,MAAM9C,KAAKsC,GAa7B,GAVInN,oBAAkB8G,GAElBA,EAAMiV,EADK9T,KAAKrC,wBAAwBe,QAAQ3F,KAIpC8F,EAAIwK,aAAa,iBAE5BtR,oBAAkB8G,IACnBA,EAAIsL,aAAa,gBAA4B,WAAXzO,EAAsB,OAAS,WAE/DsE,KAAK+N,aAAkD,QAAnC/N,KAAKgO,aAAaC,cAA2BjO,KAAK1B,uBAA0BxH,EAAakJ,OAC3GxI,EAAgBwI,MAGnB,CACD,GAAIwxB,OAAgB,EACpB,IAAe,WAAX91B,EAAqB,CACrB81B,EAAgB,YACX3d,IACD9a,EAAOS,UAAW,EAClBwG,KAAKua,mBAAmBxhB,EAAOM,UAAUG,SAAWT,EAAOS,SAE3Dya,GAAYpV,EAAIqV,uBAAuB,sBAAsB,EAKjE,IAJIL,IAAY9b,oBAAkBgB,EAAOiH,KAAKzG,sBAC1CR,EAAOiH,KAAKzG,qBAAuBxB,oBAAkBkc,KACrDA,EAAYpV,EAAIqV,uBAAuB,oBAAoB,IAE3Dnc,oBAAkBkc,GAClB,MAECA,GAAUzO,UAAUC,SAAS,qBAC9B6H,YAAU2G,GAAY,oBAE1B3J,eAAa2J,GAAY,0BAExB,CACDud,EAAgB,OACX3d,IAAWrc,EAAgBwI,QAC5BjH,EAAOS,UAAW,EAClBwG,KAAKua,mBAAmBxhB,EAAOM,UAAUG,SAAWT,EAAOS,SAE/D,IAAIya,GAAYpV,EAAIqV,uBAAuB,oBAAoB,EAK/D,IAJIL,IAAY9b,oBAAkBgB,EAAOiH,KAAKzG,uBACzCR,EAAOiH,KAAKzG,qBAAuBxB,oBAAkBkc,KACtDA,EAAYpV,EAAIqV,uBAAuB,sBAAsB,IAE7Dnc,oBAAkBkc,GAClB,MAECA,GAAUzO,UAAUC,SAAS,uBAC9B6H,YAAU2G,GAAY,sBAE1B3J,eAAa2J,GAAY,oBAE7B,GAAIwd,GAAa3d,EAASxW,OAAO,SAAUmE,GACvC,MAAOA,GAAE+D,UAAUC,SAAS,uBAAyB1M,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,KAUlG,IARI1D,EAAakJ,QAAUnG,EAAUmG,MACjCA,KAAK0xB,aAAah2B,EAAQmD,EAAK9F,EAAQ8a,GAGlCrc,EAAgBwI,OAAoB,aAAXtE,GAC1BsE,KAAK2xB,YAAYj2B,EAAQmD,EAAK9F,EAAQ8a,GAG1C7T,KAAKinB,kBAAoBpoB,EAAIW,MAAM,GAAGgG,UAAUC,SAAS,iBAIzD,IAAK,GAHD6hB,GAAYtnB,KAAKjB,UACjBmG,EAAOlF,KAAK+T,kBAAkB7O,KAEzBxN,GADT4vB,KAAe5hB,MAAM9C,KAAKsC,IACHtN,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAAS4sB,EAAU5vB,IAAK,CACzB,GACIk6B,GADQ5xB,KAAK+T,kBACG8d,aAChBC,EAAe9xB,KAAK4vB,aAAakC,YACrC9xB,MAAK8mB,cAAcQ,EAAU5vB,GAAIk6B,GAAWE,EAC5C,OAIZ9xB,KAAKqP,OAAO,qBAAuBoiB,WAAYA,EAAY/1B,OAAQ81B,EAAez4B,OAAQA,EAAQ8F,IAAKA,IACvGmB,KAAKonB,aAAatT,OApElB9T,MAAKqP,OZ13EqB,4BY03EqB3T,OAAQA,EAAQmD,IAAKA,EAAK9F,OAAQA,KAuEzFuhB,EAASrZ,UAAUswB,oBAAsB,SAAUV,GAC/C,GAAIpsB,GAAQzE,KACR+xB,EAAO,GAAIvK,WAEfqJ,GAA2B,cAAIkB,EAAKrK,OACpC,IAAI3uB,GAAS83B,EAAclyB,IAC3BqB,MAAKqG,QZr+EgB,kBYq+EgBwqB,GACrCkB,EAAKhJ,QAAQ7W,KAAK,SAAU3U,GACxB,GAAIszB,EAAc5pB,UAAUrP,OAAQ,CAGhC,IAAK,GAFDye,GAAe5R,EAAe,SAC9BlK,EAAQ,EACH7C,EAAI,EAAGA,EAAI2e,EAAYze,OAAQF,IACpC,GAAI2e,EAAY3e,GAAGiF,WAAa5D,EAAO4D,SAAU,CAC7CpC,EAAQ7C,CACR,OAOR,IAAK,GAJDs6B,GAASzzB,WAAS,SAAUkG,EAAMzN,YAClCiQ,EAAYjN,EAAY62B,EAAc5pB,WACtCgrB,EAAWl5B,EAAO0L,EAAMxH,eACxBlE,EAAO0L,EAAMxH,cAAcrF,OAASqP,EAAUrP,OAASmB,EAAO0L,EAAMxH,cAAcrF,OAA4BqP,EAAUrP,OACnHF,EAAI,EAAGA,EAAIu6B,EAAUv6B,IACtBqB,EAAO0L,EAAMxH,eACb+0B,EAAO10B,OAAO,SAAUC,EAAG7F,GACnB6F,EAAEkH,EAAM3H,mBAAqB/D,EAAO0L,EAAM1H,YAC1Ci1B,EAAOh1B,OAAOtF,EAAG,KAIzBuP,EAAUvP,IACVuP,EAAUvP,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCyM,EAAUvP,GAAG6C,MAAQkZ,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC1M,EAAUvP,GAAGyB,WAAaqD,YAAWzD,GACrCkO,EAAUvP,GAAGiF,SAAWH,YAAWyK,EAAUvP,UACtCuP,GAAUvP,GAAGyB,WAAWQ,mBACxBsN,GAAUvP,GAAGiF,SAASxD,WAC7B8N,EAAUvP,GAAG8G,eAAiBzF,EAAOM,SACrC4N,EAAUvP,GAAG2B,SAAWma,SAAO/O,EAAMyL,QAAQC,GAAK,UAClDoC,WAAS,sBAAwBtL,EAAUvP,GAAG2B,SAAU4N,EAAUvP,GAAI+M,KACjE1M,oBAAkBkP,EAAUvP,GAAG+M,EAAMxH,gBACrCgK,EAAUvP,GAAG+M,EAAMoN,kBAAoBra,EAAgBiN,MACxDwC,EAAUvP,GAAGgC,iBAAkB,GAEnC2c,EAAYrZ,OAAOzC,EAAQ,EAAI7C,EAAGqB,EAAO0L,EAAMxH,eAAiBlE,EAAO0L,EAAMxH,cAAcvF,GAAK,EAAI,EAAGuP,EAAUvP,KAGjH2e,EAAYrZ,OAAOzC,EAAQ,EAAI7C,EAAG,EAG1C2e,GAAY9b,GAAOkK,EAAMxH,cAAgBgK,EACzCoP,EAAY9b,GAAOZ,aAAesN,EAClCoP,EAAY9b,GAAOf,UAAW,EAC9B+Y,WAAS,sBAAwB8D,EAAY9b,GAAOlB,SAAUgd,EAAY9b,GAAQkK,EAClF,KAAK,GAAIrK,GAAI,EAAGA,EAAIy2B,EAAc5pB,UAAUrP,OAAQwC,IAChD43B,EAAOn5B,KAAKg4B,EAAc5pB,UAAU7M,IAG5CqK,EAAM8jB,iBAAkB,EACxB9jB,EAAMzM,KAAKo0B,UACX3nB,EAAM4B,QZtgFI,WYsgFqBwqB,MAGvCvW,EAASrZ,UAAUywB,aAAe,SAAUh2B,EAAQmD,EAAK9F,EAAQ8a,GAC7D,GAAIC,GAAW9T,KAAKjB,SACpB,IAAIiB,KAAKyP,YAAa,CAClB,GAAIyiB,GAASlyB,KAAK+T,kBAAkB7O,IACpC4O,MAAcpO,MAAM9C,KAAKsvB,GAE7B,GAAIlvB,IAASrE,KAAM5F,EAAQ8F,IAAKA,GAC5BqG,IAIJ,IAHAA,EAAO4O,EAASxW,OAAO,SAAUmE,GAC7B,MAAOA,GAAEwG,cAAc,kBAAoBlP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXkB,EAAqB,CACrBsE,KAAKqP,OZ7gFS,gBY6gFqBtW,OAAQA,EAAQmM,KAAMA,EAAMmP,UAAWxV,GAC1E,IAAIszB,IAAWtzB,IAAKA,EAAKF,KAAM5F,EAC3BmM,GAAKtN,OAAS,GACdoI,KAAKqG,QZxhFC,WYwhFwB8rB,OAIlCnyB,MAAKoyB,qBAAsBr5B,OAAQA,EAAQmM,KAAMA,IACjDlF,KAAKqG,QZzhFM,YYyhFoBrD,IAGvCsX,EAASrZ,UAAU0wB,YAAc,SAAUj2B,EAAQmD,EAAK9F,EAAQ8a,GAC5D,GAAIla,GAAeqG,KAAKrC,wBAAwBL,OAAO,SAAUC,GAC7D,MAAOA,GAAEiB,iBAAmBzF,EAAOM,UAEnC2G,MAAKinB,iBAAmBpoB,EAAIW,MAAM,GAAGgG,UAAUC,SAAS,kBACxDzF,KAAK8mB,cAAcjoB,GAAK,EAE5B,IAAIwzB,GACAve,EAAW9T,KAAKjB,SACpB,IAAIiB,KAAKyP,YAAa,CAClB,GAAI6iB,GAAStyB,KAAK+T,kBAAkB7O,IACpC4O,MAAcpO,MAAM9C,KAAK0vB,GAE7B,GAAId,GAA4B,WAAX91B,EAAuB,YAAc,OAEtDwJ,GADQvL,EAAa,GAAGR,WAAWoB,MAC5BuZ,EAASxW,OAAO,SAAUmE,GACjC,MAAOA,GAAEwG,cAAc,kBAAoBlP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpFwF,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9CkzB,EAAcryB,KAAKuyB,iBAAiBj1B,OAAO,SAAUmE,GACjD,MAAOA,GAAEwG,cAAc,kBAAoBlP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAG5F,KAAK,GAAI9C,GAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAC7BwN,EAAKxN,GAAGkD,MAAMG,QAAUy2B,EACnBz5B,oBAAkBs6B,KACnBA,EAAY36B,GAAGkD,MAAMG,QAAUy2B,GAEnCxxB,KAAKqP,OAAO,kBAAoBxQ,IAAKqG,EAAKxN,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAX+B,IACrD3D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/DwG,KAAK8wB,eAAep1B,EAAQwJ,EAAKxN,GAAIiC,EAAajC,IAAI,GAClDsI,KAAKN,eAAiBM,KAAKP,kBAAoB1H,oBAAkBs6B,IACjEryB,KAAK8wB,eAAep1B,EAAQ22B,EAAY36B,GAAIiC,EAAajC,IAAI,KAK7E4iB,EAASrZ,UAAUmmB,aAAe,SAAUliB,GACxC,GAAIlF,KAAK2jB,eAAiB3jB,KAAKyP,YAE3B,IAAK,GADD+iB,GAAkB,EACb96B,EAAI,EAAGwN,GAAQxN,EAAIwN,EAAKtN,OAAQF,IAAK,CAC1C,GAAI+6B,GAAUvtB,EAAKxN,EACW,UAA1B+6B,EAAQ73B,MAAMG,UACV03B,EAAQjtB,UAAUC,SAAS,aAC3B6E,eAAamoB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQjtB,UAAUC,SAAS,iBAAoBgtB,EAAQjtB,UAAUC,SAAS,gBACxG6H,YAAUmlB,GAAU,YAEnBA,EAAQjtB,UAAUC,SAAS,iBAAoBgtB,EAAQjtB,UAAUC,SAAS,gBAC3E+sB,OAMpBlY,EAASrZ,UAAUsoB,sBAAwB,SAAUvmB,GACjD,GAAIhD,KAAKyP,YAAa,CAClB,GAAIvK,GAAOlF,KAAK+T,kBAAkB7O,IAClCA,MAAUQ,MAAM9C,KAAKsC,EACrB,KAAK,GAAIxN,GAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAAK,CAClC,GAAIg7B,GAAQ1yB,KAAKhI,KAAK+b,kBAAkB7O,KAAKxN,GAAG8H,MAAMQ,KAAKP,iBACvDZ,EAAMqG,EAAKxN,GAEXi7B,GAAQh0B,KADEqB,KAAKhI,KAAKgd,gBAAgBtd,GAAGiH,KAChBE,IAAKA,EAAKU,KAAMmzB,EAAO/yB,OAAQK,KAAKJ,aAAaI,KAAKP,iBACjFO,MAAKX,aAAaC,WAAWqzB,MAIzCrY,EAASrZ,UAAUmxB,oBAAsB,SAAUxe,EAAYC,GACtDA,IACDD,EAAW7a,OAAOS,UAAW,EAIjC,KAAK,GADDoS,GADA1G,EAAO0O,EAAW1O,KAEbxN,EAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAAK,CAC9BqT,cAAc/K,KAAKgU,kBACnB1J,eAAapF,EAAKxN,IAAK,qBACvB4V,YAAUpI,EAAKxN,IAAK,uBAGpBwN,EAAKxN,GAAGkD,MAAMG,QAAU,MAE5B,IAAI63B,GAAe1tB,EAAKxN,GAAGuQ,cAAc,qBAIzC,IAHKlQ,oBAAkB66B,IACnB5yB,KAAKhI,KAAKuc,gBAAgBse,SAASD,GAEnC1tB,EAAKxN,GAAGuQ,cAAc,6CAA8C,CACpE,GAAI6qB,GAAgB5tB,EAAKxN,GAAGuQ,cAAc,4CAC1C2D,GAAc5L,KAAKyP,YAAczP,KAAKhI,KAAK2F,wBAAwBuH,EAAKxN,GAAGoP,UACvE9G,KAAKhI,KAAKmc,oBAAoBjP,EAAKxN,GAAG2R,aAAa,aAAa1K,MAC/D5G,oBAAkB+6B,IAAkBlnB,EAAYpS,WACjD8Q,eAAawoB,GAAgB,oBAC7BxlB,YAAUwlB,GAAgB,sBAI9B,KAAK,GAFDC,MACAC,EAAQhzB,KAAKjB,UACRk0B,EAAM,EAAGA,EAAMD,EAAMp7B,OAAQq7B,IAC9BD,EAAMC,GAAKhrB,cAAc,kBAAoB2D,EAAYrR,MAAQ,SAAWqR,EAAYpR,MAAQ,KAChGu4B,EAAKl6B,KAAKm6B,EAAMC,GAGpBF,GAAKn7B,QAAUgU,EAAYpS,UAC3BwG,KAAKoyB,qBAAsBr5B,OAAQ6S,EAAa1G,KAAM6tB,IAAQ,MAQ9EzY,EAASrZ,UAAUihB,YAAc,WAC7BliB,KAAKsH,GAAG,gBAAiBtH,KAAKkzB,kBAAmBlzB,MACjDA,KAAKhI,KAAKsP,GAAG,cAAetH,KAAK4iB,gBAAiB5iB,OAEtDsa,EAASrZ,UAAUiyB,kBAAoB,SAAUC,GAC7CnzB,KAAK8Q,YAAcqiB,GAKvB7Y,EAASrZ,UAAUqrB,eAAiB,WAC5BtsB,KAAK4H,cAGT5H,KAAK6H,IAAI,gBAAiB7H,KAAKkzB,mBAC/BlzB,KAAKhI,KAAK6P,IAAI,cAAe7H,KAAK4iB,mBAgBtCtI,EAASrZ,UAAUmyB,eAAiB,SAAU3F,EAAW4F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzI3zB,KAAKhI,KAAKo7B,eAAe3F,EAAW4F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5HrZ,EAASrZ,UAAU2yB,eAAiB,WAChC5zB,KAAKhI,KAAK47B,kBASdtZ,EAASrZ,UAAU4yB,0BAA4B,SAAUvvB,EAAOwvB,GAC5D9zB,KAAKhI,KAAK67B,0BAA0BvvB,EAAOwvB,IAQ/CxZ,EAASrZ,UAAUwd,UAAY,SAAUlkB,EAAOw5B,GAC5C/zB,KAAKhI,KAAKymB,UAAUlkB,EAAOw5B,IAO/BzZ,EAASrZ,UAAU+yB,WAAa,SAAUnpB,GACtC7K,KAAKhI,KAAKg8B,WAAWnpB,IAMzByP,EAASrZ,UAAU0d,eAAiB,WAChC3e,KAAKhI,KAAK2mB,kBAMdrE,EAASrZ,UAAU2F,KAAO,SAAU9B,GAChC9E,KAAK6iB,gBAAgBjc,KAAK9B,IAQ9BwV,EAASrZ,UAAU4F,MAAQ,SAAUlI,EAAMmI,EAAUC,GACjD/G,KAAK6iB,gBAAgBhc,MAAMlI,EAAMmI,EAAUC,IAQ/CuT,EAASrZ,UAAUgzB,WAAa,SAAUvV,EAAWqV,GACjD/zB,KAAKhI,KAAKi8B,WAAWvV,EAAWqV,IAMpCzZ,EAASrZ,UAAUizB,gBAAkB,WACjC,MAAOl0B,MAAKhI,KAAKk8B,mBAQrB5Z,EAASrZ,UAAUkzB,wBAA0B,SAAUrtB,EAAUkC,GAC7D,MAAOhJ,MAAKhI,KAAKm8B,wBAAwBrtB,EAAUkC,IAMvDsR,EAASrZ,UAAUqL,mBAAqB,WACpC,MAAOtM,MAAKhI,KAAKsU,sBAOrBgO,EAASrZ,UAAU7B,qBAAuB,SAAU7E,GAChD,MAAOyF,MAAKhI,KAAKoH,qBAAqB7E,IAM1C+f,EAASrZ,UAAUsxB,eAAiB,WAChC,MAAOvyB,MAAKhI,KAAKu6B,kBAKrBjY,EAASrZ,UAAU9B,iBAAmB,WAClC,MAAOa,MAAKo0B,eAAep0B,KAAKrI,QAAS,GAAKqI,KAAKN,eAEvD4a,EAASrZ,UAAUmzB,eAAiB,SAAUhE,EAAMiE,GAChD,IAAK,GAAIj6B,GAAI,EAAG3B,EAAM23B,EAAKx4B,OAAQwC,EAAI3B,EAAK2B,IACpCg2B,EAAKh2B,GAAGzC,QACR08B,EAAMr0B,KAAKo0B,eAAehE,EAAKh2B,GAAGzC,QAAS08B,GAGvCjE,EAAKh2B,GAAGk6B,UACRD,GAIZ,OAAOA,IAMX/Z,EAASrZ,UAAUoE,sBAAwB,WACvC,MAAOrF,MAAKhI,KAAKqN,yBAMrBiV,EAASrZ,UAAUszB,0BAA4B,WAC3C,MAAOv0B,MAAKhI,KAAKu8B,6BAOrBja,EAASrZ,UAAU4E,mBAAqB,WACpC,MAAO7F,MAAKhI,KAAK6N,sBAMrByU,EAASrZ,UAAUwT,cAAgB,WAC/B,OAAS+f,WAAYx0B,KAAKhI,KAAKyc,gBAAiBggB,WAAYz0B,KAAK4hB,aAKrEtH,EAASrZ,UAAUyzB,YAAc,SAAUC,EAAaC,EAASxH,GAC7DptB,KAAK60B,qBAAqBH,YAAYC,EAAaC,EAASxH,GAEhE,IAAIzS,EAkXJ,OAjXAxZ,KACIc,WAAS,IACVqY,EAASrZ,UAAW,iBAAc,IACrCE,IACIc,WAAS,IACVqY,EAASrZ,UAAW,oBAAiB,IACxCE,IACIc,WAAS,aACVqY,EAASrZ,UAAW,eAAY,IACnCE,IACIc,gBACDqY,EAASrZ,UAAW,cAAW,IAClCE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,mBAAgB,IACvCE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,IACVqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,gBAAa,IACpCE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,yBAAsB,IAC7CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,0BAAuB,IAC9CE,IACIc,gBACDqY,EAASrZ,UAAW,iBAAc,IACrCE,IACIc,cACDqY,EAASrZ,UAAW,YAAS,IAChCE,IACIc,cACDqY,EAASrZ,UAAW,iBAAc,IACrCE,IACIc,WAAS,aACVqY,EAASrZ,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,oBAAiB,IACxCE,IACI2zB,aAAYzyB,IACbiY,EAASrZ,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,yBAAsB,IAC7CE,IACI2zB,aAAYvc,IACb+B,EAASrZ,UAAW,mBAAgB,IACvCE,IACI2zB,aAAYC,oBACbza,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,cACDqY,EAASrZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,wBAAqB,IAC5CE,IACI2zB,aAAYza,KACbC,EAASrZ,UAAW,mBAAgB,IACvCE,IACIiB,gBAAe8X,IAChBI,EAASrZ,UAAW,iBAAc,IACrCE,IACI2zB,aAAY3a,KACbG,EAASrZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACIc,cACDqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACI2zB,aAAY3yB,IACbmY,EAASrZ,UAAW,qBAAkB,IACzCE,IACI2zB,aAAYtnB,IACb8M,EAASrZ,UAAW,qBAAkB,IACzCE,IACIc,cACDqY,EAASrZ,UAAW,cAAW,IAClCE,IACIc,cACDqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,WAAS,YACVqY,EAASrZ,UAAW,gBAAa,IACpCE,IACIc,cACDqY,EAASrZ,UAAW,uBAAoB,IAC3CE,IACIc,cACDqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACIc,cACDqY,EAASrZ,UAAW,kBAAe,IACtCE,IACIc,WAAS,WACVqY,EAASrZ,UAAW,wBAAqB,IAC5CE,IACIc,WAAS,OACVqY,EAASrZ,UAAW,gBAAa,IACpCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,mBAAgB,IACvCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,kBAAe,IACtCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACIc,WAAS,SACVqY,EAASrZ,UAAW,aAAU,IACjCE,IACIc,WAAS,SACVqY,EAASrZ,UAAW,YAAS,IAChCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,2BAAwB,IAC/CE,IACIc,WAAS,QACVqY,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,cAAW,IAClCE,IACI6zB,WACD1a,EAASrZ,UAAW,WAAQ,IAC/BE,IACI6zB,WACD1a,EAASrZ,UAAW,gBAAa,IACpCE,IACI6zB,WACD1a,EAASrZ,UAAW,eAAY,IACnCE,IACI6zB,WACD1a,EAASrZ,UAAW,iBAAc,IACrCE,IACI6zB,WACD1a,EAASrZ,UAAW,gBAAa,IACpCE,IACI6zB,WACD1a,EAASrZ,UAAW,eAAY,IACnCE,IACI6zB,WACD1a,EAASrZ,UAAW,gBAAa,IACpCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,gBAAa,IACpCE,IACI6zB,WACD1a,EAASrZ,UAAW,eAAY,IACnCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,wBAAqB,IAC5CE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,eAAY,IACnCE,IACI6zB,WACD1a,EAASrZ,UAAW,oBAAiB,IACxCE,IACI6zB,WACD1a,EAASrZ,UAAW,gBAAa,IACpCE,IACI6zB,WACD1a,EAASrZ,UAAW,wBAAqB,IAC5CE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,wBAAqB,IAC5CE,IACI6zB,WACD1a,EAASrZ,UAAW,mBAAgB,IACvCE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,mBAAgB,IACvCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,oBAAiB,IACxCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,oBAAiB,IACxCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,mBAAgB,IACvCE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,eAAY,IACnCE,IACI6zB,WACD1a,EAASrZ,UAAW,iBAAc,IACrCE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,iBAAc,IACrCE,IACI6zB,WACD1a,EAASrZ,UAAW,iBAAc,IACrCE,IACI6zB,WACD1a,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,oBAAiB,IACxCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,mBAAgB,IACvCE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,uBAAoB,IAC3CE,IACI6zB,WACD1a,EAASrZ,UAAW,iBAAc,IACrCE,IACI6zB,WACD1a,EAASrZ,UAAW,kBAAe,IACtCE,IACI6zB,WACD1a,EAASrZ,UAAW,cAAW,IAClCE,IACI6zB,WACD1a,EAASrZ,UAAW,mBAAgB,IACvCE,IACI6zB,WACD1a,EAASrZ,UAAW,yBAAsB,IAC7CE,IACI6zB,WACD1a,EAASrZ,UAAW,cAAW,IAClCE,IACIc,YAAU,IACXqY,EAASrZ,UAAW,uBAAoB,IAC3CE,IACI2zB,aAAYrnB,IACb6M,EAASrZ,UAAW,wBAAqB,IAC5CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,uBAAoB,IAC3CE,IACIc,YAAS,IACVqY,EAASrZ,UAAW,qBAAkB,IACzCE,IACI6zB,WACD1a,EAASrZ,UAAW,uBAAoB,IAC3CE,IACI6zB,WACD1a,EAASrZ,UAAW,6BAA0B,IACjDE,IACI6zB,WACD1a,EAASrZ,UAAW,yBAAsB,IAC7CE,IACI6zB,WACD1a,EAASrZ,UAAW,+BAA4B,IACnDE,IACI6zB,WACD1a,EAASrZ,UAAW,wBAAqB,IAC5CE,IACI6zB,WACD1a,EAASrZ,UAAW,0BAAuB,IAC9CE,IACI6zB,WACD1a,EAASrZ,UAAW,sBAAmB,IAC1CE,IACI6zB,WACD1a,EAASrZ,UAAW,wBAAqB,IAC5CqZ,EAAWK,EAAaxZ,IACpB8zB,yBACD3a,IAEL4a,aCjuGEC,GAAyB,WAIzB,QAASA,GAAQp+B,EAAQ2Y,GACrBjN,OAAKC,OAAO0yB,WACZp1B,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBA4CT,MAtCA8tB,GAAQl0B,UAAU4B,cAAgB,WAC9B,MAAO,WAKXsyB,EAAQl0B,UAAUoG,iBAAmB,WACjCrH,KAAKjJ,OAAOuQ,GAAG,iBAAkBtH,KAAKq1B,cAAer1B,OAEzDm1B,EAAQl0B,UAAU0G,oBAAsB,WAChC3H,KAAKjJ,OAAO6Q,aAGhB5H,KAAKjJ,OAAO8Q,IAAI,iBAAkB7H,KAAKq1B,gBAO3CF,EAAQl0B,UAAU+F,QAAU,WACxBhH,KAAK2H,uBAETwtB,EAAQl0B,UAAUo0B,cAAgB,WAK9B,IAAK,GAFDC,GADA5lB,EAAa1P,KAAKjJ,OAAkB,YAAEiJ,KAAKjJ,OAAO0I,iBAElD81B,EAAcv1B,KAAKjJ,OAAO6I,aACrB41B,EAAI,EAAGA,EAAID,EAAY39B,OAAQ49B,IAGpC,GAFsB58B,YAAU,QAAS8W,KACjB9W,YAAU,QAAS28B,EAAYC,IACZ,CACvCF,EAAYE,CACZ,OAGRx1B,KAAKjJ,OAAOkjB,eAAgBxa,gBAAiB61B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,QAASA,GAAO1+B,GACZ0L,OAAKC,OAAOgzB,UACZ11B,KAAKjJ,OAASA,EA4BlB,MArBA0+B,GAAOx0B,UAAUgc,eAAiB,SAAU0Y,GACxC31B,KAAKjJ,OAAOiB,KAAKilB,eAAe0Y,IAMpCF,EAAOx0B,UAAU4B,cAAgB,WAC7B,MAAO,UAOX4yB,EAAOx0B,UAAU+F,QAAU,WACnBhH,KAAKjJ,OAAO6Q,aAGhB5H,KAAKjJ,OAAOiB,KAAKmlB,aAAanW,WAE3ByuB,KC5BPG,GAAuB,WAKvB,QAASA,GAAM7+B,GAEXiJ,KAAK61B,SAAU,EAEf71B,KAAK81B,oBAAqB,EAE1B91B,KAAK+1B,eAAgB,EACrBtzB,OAAKC,OAAOszB,SACZh2B,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBAu+BT,MAr+BAuuB,GAAM30B,UAAUg1B,0BAA4B,SAAU9lB,GAYlD,OATInQ,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,QAC3CiJ,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAGvCmE,KAAKjJ,OAAOiB,KAAKhB,YAEVsG,OAAO,SAAUC,GAC7C,MAAOA,GAAElE,WAAa8W,KAO9BylB,EAAM30B,UAAUoG,iBAAmB,WAC/BrH,KAAKjJ,OAAOuQ,Gf8EI,ce9EkBtH,KAAKk2B,WAAYl2B,MACnDA,KAAKjJ,OAAOuQ,Gf+EI,ce/EkBtH,KAAKm2B,WAAYn2B,MACnDA,KAAKjJ,OAAOuQ,GfwEC,WexEkBtH,KAAKo2B,UAAWp2B,MAC/CA,KAAKjJ,OAAOuQ,GfyEI,cezEkBtH,KAAKq2B,YAAar2B,OAKxD41B,EAAM30B,UAAUyzB,YAAc,SAAUC,EAAaC,EAASxH,GAC1D,GAAIkJ,GAAOt2B,KAAKjJ,MAChB,IAAI49B,EAAY,IAAZA,EAAJ,CACqB,UAAbvH,IACAptB,KAAKu2B,aAAe,cAEP,UAAbnJ,IACAptB,KAAKu2B,aAAe,iBAEP,UAAbnJ,IACAptB,KAAKu2B,aAAe,gBAGxB,KAAK,GADD53B,MACKjH,EAAI,EAAGA,EAAIi9B,EAAY/8B,OAAQF,IACpCiH,EAAKjH,GAAKsI,KAAKjJ,OAAO4G,wBAAwBg3B,EAAYj9B,GAE9D,IACIsL,IACArE,KAAMA,EACN63B,UAAW5B,EAEVp9B,GAAgBwI,KAAKjJ,SACtBiJ,KAAKy2B,SAASzzB,GAND,GASbszB,EAAKtf,cACLsf,EAAKj5B,SAAW2C,KAAK02B,aAAaJ,EAAKj5B,WAE3C2C,KAAKjJ,OAAOiB,KAAKo0B,YAMzBwJ,EAAM30B,UAAUy1B,aAAe,SAAUrgB,GAUrC,IAAK,GAAI3e,GAAI,EAAGA,EAAI2e,EAAYze,OAAQF,KAT1B,SAAUA,GAEpB,GADA2e,EAAY3e,GAAG6C,MAAQ7C,GAClBK,oBAAkBse,EAAY3e,GAAGyB,YAAa,CAC/C,GAAIw9B,GAAgBtgB,EAAY/Y,OAAO,SAAUqB,GAC7C,MAAOA,GAAKtF,WAAagd,EAAY3e,GAAG8G,iBACzC,EACH6X,GAAY3e,GAAGyB,WAAWoB,MAAQo8B,EAAcp8B,QAI5C7C,EAEZ,OAAO2e,IAEXuf,EAAM30B,UAAUm1B,UAAY,SAAU74B,GAGlC,IAAK,GAFDq5B,GACAC,EAAct5B,EAAEhF,QACXb,EAAI6F,EAAEhF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAk/B,EAAgBC,EAAYn/B,IACV8G,eAAgB,CAC9B,GAAIzF,GAAS89B,EAAYv5B,OAAO,SAAUqB,GACtC,MAAOA,GAAKtF,WAAau9B,EAAcp4B,gBAE3C,IAAIzF,EAAOnB,OAAQ,CACf,GAAI2C,GAAQxB,EAAO,GAAGY,aAAa+E,QAAQk4B,GACvC19B,EAAeH,EAAO,IACX,IAAXwB,IACArB,EAAaS,aAAaqD,OAAOzC,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAa8V,yBAA0B,GAE3ChP,KAAK81B,oBAAqB,IAK1C,GAAI/9B,oBAAkBiI,KAAKjJ,OAAOC,cAAgBgJ,KAAKjJ,OAAOC,WAAWY,OAAQ,CAK7E,IAAK,GAHDk/B,GADAR,EAAOt2B,KAAKjJ,OAEZggC,EAAgBx5B,EAAEhF,QAEbb,EADQ6F,EAAEhF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtCo/B,EAAkBC,EAAcr/B,EAMhC,IAJKK,oBAAkB++B,EAAgBn6B,WAClCm6B,EAAgBn6B,SAASC,eAAe05B,EAAKr5B,gBAC9C65B,EAAgBn6B,SAAS25B,EAAKr5B,kBAE9B65B,EAAgBl6B,eAAe05B,EAAKr5B,eACnC65B,EAAgBR,EAAKr5B,cAAerF,SAAWoI,KAAK81B,qBACpD/9B,oBAAkBu+B,EAAKx5B,iBAExB,IAAK,GADDmK,GAAa6vB,EAAgBR,EAAKr5B,cAC7B7C,EAAI,EAAGA,EAAI6M,EAAUrP,OAAQwC,KACW,IAAzC28B,EAAcr4B,QAAQuI,EAAU7M,MAChC28B,EAAc/5B,OAAO5C,EAAG,EAAG6M,EAAU7M,IACrC6M,EAAU7M,GAAGuC,SAAWH,YAAWyK,EAAU7M,IAC7C1C,GAAK,EAIbo/B,GAAgBl6B,eAAe05B,EAAKx5B,kBAA6D,MAAzCg6B,EAAgBR,EAAKx5B,mBACzEkD,KAAK81B,qBACTgB,EAAgBn6B,SAAS25B,EAAKx5B,iBAAmB,WAC1Cg6B,GAAgB39B,iBAChB29B,GAAgBt4B,gBAEvBzG,oBAAkBu+B,EAAKt/B,cACvBs/B,EAAKt/B,eAETs/B,EAAKt/B,WAAWgG,OA1BG,EA0BkB,EAAG85B,EAAgBn6B,UAE5D25B,EAAKrc,eAAgBjjB,WAAYs/B,EAAKt/B,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIm/B,EAAYj/B,OAAQF,IACpC6a,WAAS,sBAAwBskB,EAAYn/B,GAAG2B,SAAUw9B,EAAYn/B,GAAIsI,KAAKjJ,OAEnF,IAAIiM,IAASrE,KAAMpB,EAAEhF,QAASi+B,UAAWj5B,EAAEq3B,QACvC50B,MAAKjJ,OAAOC,qBAAsBC,gBAClC+I,KAAKoW,aAAepW,KAAKjJ,OAAOC,WAAWA,WAAW6E,KACtDmE,KAAKpE,SAAWoE,KAAKjJ,OAAOC,WAAWA,WAAW6E,OAGlDmE,KAAKoW,aAAepW,KAAKjJ,OAAOiB,KAAKhB,WACrCgJ,KAAKpE,SAAWoE,KAAKjJ,OAAOC,YAEhCgJ,KAAKy2B,SAASzzB,KAGtB4yB,EAAM30B,UAAUo1B,YAAc,SAAU94B,GACpC,IAAK,GAAI7F,GAAI,EAAGA,EAAI6F,EAAEhF,QAAQX,OAAQF,IAClCsI,KAAK42B,cAAgBr5B,EAAEhF,QAAQb,IAC3BsI,KAAK42B,cAAcl9B,iBAAmBsG,KAAK42B,cAAcz9B,aAE8B,IADvF6G,KAAKjJ,OAAOiB,KAAKhB,WACb0H,QAAQsB,KAAKi2B,0BAA0Bj2B,KAAK42B,cAAcp4B,gBAAgB,KACjD,IAA7BwB,KAAK42B,cAAcp8B,QACnBwF,KAAKg3B,iBAIjBpB,EAAM30B,UAAUg2B,sBAAwB,WACpC,GAGIC,GACAC,EAJAP,EAAgB52B,KAAK42B,cACrBQ,EAAgBp3B,KAAKo3B,cACrBC,EAAQr3B,KAAKjJ,MASjB,MALImgC,EADAl3B,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,QAC/CsgC,EAAMrgC,WAAWA,WAAW6E,KAG5Bw7B,EAAMrgC,aAEHe,oBAAkBq/B,IAAmBA,EAAcj+B,YAiBtE,IAAK6G,KAAKjJ,OAAO+F,kBAAqB/E,oBAAkBq/B,IAAkBA,EAAcj+B,aAC/D,eAAtB6G,KAAKu2B,cAAuD,kBAAtBv2B,KAAKu2B,cAG3C,IAAK,GADD58B,GADSqG,KAAKi2B,0BAA0BmB,EAAc54B,gBAAgB,GAChD7E,aACjBjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrC0/B,EAAcj+B,WAAWwD,SAASqD,KAAKjJ,OAAOkG,cAAcvF,GAAKiC,EAAajC,GAAGiF,aAtBL,CACpF,IAASjF,EAAI,EAAGA,EAAIgB,OAAOC,KAAKu+B,GAAgBt/B,OAAQF,IAChDw/B,EAAex/B,GAAGsI,KAAKjJ,OAAOkG,gBAAkBm6B,EAAcz6B,SAASqD,KAAKjJ,OAAOkG,gBACnFk6B,EAAMz/B,EAGY,gBAAtBsI,KAAKu2B,aACAv2B,KAAKjJ,OAAOgG,WACbm6B,EAAel6B,OAAOm6B,EAAK,EAAGP,EAAcj6B,UAGrB,kBAAtBqD,KAAKu2B,eACLv2B,KAAKjJ,OAAOgG,WACbm6B,EAAel6B,OAAOm6B,EAAM,EAAG,EAAGP,EAAcj6B,WAaxDqD,KAAKjJ,OAAO+F,kBACR85B,EAAcz9B,WACY,eAAtB6G,KAAKu2B,cAAuD,kBAAtBv2B,KAAKu2B,cAC3CK,EAAc52B,KAAKjJ,OAAO+F,iBAAmBs6B,EAAcp3B,KAAKjJ,OAAO+F,iBACvE85B,EAAcj6B,SAASqD,KAAKjJ,OAAO+F,iBAAmBs6B,EAAcp3B,KAAKjJ,OAAO+F,mBAGhF85B,EAAc52B,KAAKjJ,OAAO+F,iBAAmBs6B,EAAcp3B,KAAKjJ,OAAOgG,WACvE65B,EAAcj6B,SAASqD,KAAKjJ,OAAO+F,iBAAmBs6B,EAAcp3B,KAAKjJ,OAAOgG,aAIpF65B,EAAcj6B,SAASqD,KAAKjJ,OAAO+F,iBAAmB,KACtD85B,EAAc52B,KAAKjJ,OAAO+F,iBAAmB,QAIzD84B,EAAM30B,UAAUq2B,qBAAuB,SAAUpnB,EAASqnB,GACtD,GAAIC,GAAkC,kBAAtBx3B,KAAKu2B,YACjBv2B,MAAKjJ,OAAOmZ,QAAQgE,uBAAuB,qBAAqBtc,OAAS,GAAKsY,IACxD,IAArBA,EAAQpJ,UAAkB0wB,IAC3Bx3B,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,qBAAqB,GAAGsN,UAG3EoU,EAAM30B,UAAUw2B,oBAAsB,SAAUvnB,EAASqnB,GACrD,GAAIG,GAAaxnB,IAAYA,EAAQ1K,UAAUC,SAAS,eAAiByK,EAAQ1K,UAAUC,SAAS,mBAChGkyB,EAAiBznB,IAAYwnB,GAC7B13B,KAAKjJ,OAAO+H,cAAckB,KAAKjJ,OAAOgI,UAAUnH,OAAS,GAAGyR,aAAa,cACrE6G,EAAQ7G,aAAa,YACzBmuB,EAAYG,GAAwC,eAAtB33B,KAAKu2B,YACnCv2B,MAAKjJ,OAAOmZ,QAAQgE,uBAAuB,oBAAoBtc,OAAS,GAAKsY,IAAYynB,GAAkBH,IAC3Gx3B,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,oBAAoB,GAAGsN,UAG1EoU,EAAM30B,UAAU22B,WAAa,SAAU/4B,EAAKtE,EAAOyI,GAC/C,GAAI60B,GAAS70B,EAAK3B,OAAS6G,UAAQlF,EAAK3B,OAAQ,MAAQ,IACxDrB,MAAKu2B,iBAAehd,EACpB,IAAIue,GAAoB,CACxB93B,MAAKs3B,qBAAqBO,GAC1B73B,KAAKy3B,oBAAoBI,EACzB,KAAK,GAAIngC,GAAI,EAAGA,EAAIsL,EAAKkC,KAAKtN,OAAQF,KAC7BK,oBAAkB8/B,IAAWA,EAAOxuB,aAAa,cAAgBrG,EAAKkC,KAAKxN,GAAG2R,aAAa,cACxFrB,eAAahF,EAAK3B,OAAQ,mBAC9BrB,KAAKu2B,aAAe,UACpBv2B,KAAK+3B,eAIb,IAAIzB,GAAOt2B,KAAKjJ,OACZihC,EAAS,EAETC,EAAa3B,EAAK7V,SAAW6V,EAAK7V,QAAQ7oB,OAC1CsgC,SAASC,eAAe7B,EAAKpmB,QAAQC,GAAK,6BAA6BioB,aAAe,EAEtFC,EAAiBr4B,KAAKs4B,UAAUhC,EAAKpmB,SAErCqoB,EAAgBjC,EAAKltB,mBAAmBgvB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAK1G,aAAa8I,kBAAkBD,SAC/C1gC,qBAAkB8/B,KACnBC,EAAoBD,EAAOc,UAAYF,EAS3C,IAEIG,KAPAZ,EADA1B,EAAKnnB,cACItQ,EAAI,GAAGu5B,aAGPN,EAAoBS,EAhBlB,GAkBU15B,EAAI,GAAGu5B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACTrgC,YAAU,sBAAuBoK,GAC5Bk2B,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,CAC7D,IAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBn5B,KAAKu2B,eACrBv2B,KAAKs5B,oBACLt5B,KAAKu2B,aAAe,aACpBv2B,KAAKu5B,0BACLv5B,KAAKw5B,kBAAkB3B,GACvB73B,KAAKy5B,kBACLz5B,KAAKy3B,oBAAoBI,GACzB73B,KAAK05B,kBAAkB12B,EAAK3B,SAE5B+3B,GAA4C,YAAtBp5B,KAAKu2B,aAA4B,CACvDv2B,KAAKu5B,yBACL,IAAIrpB,OAAU,GACVxH,IACJwH,GAAUhI,UAAQlF,EAAK3B,OAAQ,OAC/BqH,KAAgBhD,MAAM9C,KAAKsN,EAAQvK,iBAAiB,oDACrC/N,OAAS,GACpBoI,KAAK25B,iBAAiBjxB,GAAY,EAAM,iBAE5C1I,KAAK45B,iBAAiB/B,GACtB73B,KAAKw5B,kBAAkB3B,GACvB73B,KAAKu2B,aAAe,gBAEpB8C,GAA4C,YAAtBr5B,KAAKu2B,eAC3Bv2B,KAAKy5B,kBACLz5B,KAAKu5B,0BACLv5B,KAAKs5B,oBACLt5B,KAAKu2B,aAAe,gBACpBv2B,KAAK45B,iBAAiB/B,GACtB73B,KAAKs3B,qBAAqBO,GAC1B73B,KAAK05B,kBAAkB12B,EAAK3B,SAGpC,MAAOrB,MAAKu2B,cAEhBX,EAAM30B,UAAUq4B,kBAAoB,WAChC,GAAIO,OACJA,KAAgBn0B,MAAM9C,KAAK5C,KAAKjJ,OAAOmZ,QAAQvK,iBAAiB,oBACjD/N,OAAS,GACpBoI,KAAK25B,iBAAiBE,GAAY,EAAO,kBAGjDjE,EAAM30B,UAAUu4B,kBAAoB,SAAU5a,GAC1C,GAAIkb,GAAO95B,KAAKjJ,OAAOmZ,QACnBomB,EAAOt2B,KAAKjJ,MAChB,IAAI6nB,GAAoC,IAAvBA,EAAU9X,WAAmB8X,EAAUpZ,UAAUC,SAAS,cAAe,CACtF,GAAIs0B,GAAM/5B,KAAKjJ,OAAOyS,cAAc,OAASC,UAAW,sBACpDuwB,EAAgBh6B,KAAKjJ,OAAOqS,mBAC5B6wB,EAAgB,CAChB3D,GAAK7V,UACLwZ,EAAgB3D,EAAKxI,cAAcoM,aAAa9B,aAEpD,IAAI+B,IAAgBpiC,oBAAkBiI,KAAKjJ,OAAOirB,gBAAgBC,SAC9DkY,KACAJ,EAAIn/B,MAAM49B,IAAMx4B,KAAKjJ,OAAOiB,KAAKkY,QAAQgE,uBAAuB,gBAAgB,GAAGkkB,aAC7E6B,EAAgB,MAE1BF,EAAIn/B,MAAMkP,MAAQqwB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAcp6B,KAAKq6B,iBAAmB,KAC1CL,EAAcr0B,iBAAiB,sBAAsB/N,QACtDoiC,EAAcpvB,YAAYmvB,KAItCnE,EAAM30B,UAAU24B,iBAAmB,SAAUU,GACzC,GAAI5C,GAAa4C,IAAcA,EAAU90B,UAAUC,SAAS,eACxD60B,EAAU90B,UAAUC,SAAS,kBACjC,IAAI60B,IAAc5C,GAAc13B,KAAKjJ,OAAO+H,cAAckB,KAAKjJ,OAAOgI,UAAUnH,OAAS,GAAGyR,aAAa,cACrGixB,EAAUjxB,aAAa,YAAa,CACpC,GAAIkxB,GAAev6B,KAAKjJ,OAAOyS,cAAc,OAASC,UAAW,qBAC7D+wB,EAAiBx6B,KAAKjJ,OAAO64B,YACjC2K,GAAa3/B,MAAMkP,MAAQ9J,KAAKjJ,OAAOmZ,QAAQkqB,YAAcp6B,KAAKq6B,iBAAmB,KAChFG,EAAe70B,iBAAiB,qBAAqB/N,SACtD4iC,EAAeh1B,UAAUqE,IAAI,uBAC7B2wB,EAAe5vB,YAAY2vB,GAC3BA,EAAa3/B,MAAM6/B,OAASz6B,KAAKq6B,iBAAmB,QAIhEzE,EAAM30B,UAAUo5B,eAAiB,WAC7B,GAAIK,GAAa16B,KAAKjJ,OAAO64B,aAAa8I,iBAC1C,OAAOgC,GAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FjF,EAAM30B,UAAU82B,aAAe,WAC3B,GAAI+C,GAAW5C,SAAShkB,uBAAuB,qBAAqB,EAEpE,KADgB4mB,EAASn1B,iBAAiB,gBAAgB/N,SACvCoI,KAAKjJ,OAAOirB,gBAAgBC,SAAU,CACrD,GAAI8Y,GAAM7C,SAAS1uB,cAAc,MACjChE,aAAUu1B,GAAM,wBAChBv1B,YAAUu1B,GAAM,UAAW,kBAC3B,IAAIC,GAAWF,EAAS7yB,cAAc,eAClCgzB,EAAUH,EAAS7yB,cAAc,cAAcyC,SAC/CswB,KACAC,EAAUD,EAAStwB,UACnBswB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS7yB,cAAc,cAAcyC,UAAY,EACjD,IAAI0wB,GAAclD,SAAS1uB,cAAc,OACzC4xB,GAAY3xB,UAAY,aACxB2xB,EAAYxgC,MAAMygC,YAAc,OAChCD,EAAY1wB,UAAYuwB,EACxBH,EAAS7yB,cAAc,cAAc2C,YAAYmwB,GACjDD,EAAS7yB,cAAc,cAAc2C,YAAYwwB,KAGzDxF,EAAM30B,UAAUw4B,gBAAkB,WAC9B,GAAI6B,GAAYpD,SAASjwB,cAAc,eACnCqzB,IACAA,EAAU9Z,UAGlBoU,EAAM30B,UAAUy4B,kBAAoB,SAAUr4B,GAEtBtJ,oBAAkBiI,KAAKjJ,OAAOirB,gBAAgBC,SADlE,IAAI/R,GAEAxH,MAEJA,GADAwH,EAAUhI,UAAQ7G,EAAQ,UACAqE,MAAM9C,KAAKsN,EAAQvK,iBAAiB,uDAC/C/N,SACe,eAAtBoI,KAAKu2B,eACLv2B,KAAK25B,iBAAiBjxB,GAAY,EAAM,aACpC1I,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,wBAAwBtc,OAAS,GAC5EoI,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,wBAAwB,GAAGsN,UAGpD,kBAAtBxhB,KAAKu2B,cACLv2B,KAAK25B,iBAAiBjxB,GAAY,EAAM,kBAIpDktB,EAAM30B,UAAUs4B,wBAA0B,WACtC,GAAIgC,OACJA,KAAY71B,MAAM9C,KAAK5C,KAAKjJ,OAAOmZ,QAAQvK,iBAAiB,+BACjD/N,SACPoI,KAAK25B,iBAAiB4B,GAAQ,EAAO,gBACrCv7B,KAAK25B,iBAAiB4B,GAAQ,EAAO,eAG7C3F,EAAM30B,UAAU04B,iBAAmB,SAAUn6B,EAAOqK,EAAKJ,GACrD,IAAK,GAAI/R,GAAI,EAAGe,EAAM+G,EAAM5H,OAAQF,EAAIe,EAAKf,IACrCmS,EACArK,EAAM9H,GAAG8N,UAAUqE,IAAIJ,GAGvBjK,EAAM9H,GAAG8N,UAAUgc,OAAO/X,IAItCmsB,EAAM30B,UAAUq3B,UAAY,SAAUpoB,GAClC,GAAIsrB,GAAMtrB,EAAQurB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAY59B,OAAOghC,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAajhC,OAAOkhC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,CACnC,QAASzD,IAAK/kB,KAAKyoB,MAAM1D,GAAMS,KAAMxlB,KAAKyoB,MAAMjD,KAEpDrD,EAAM30B,UAAUi1B,WAAa,SAAUlzB,GACnC,GAAIszB,GAAOt2B,KAAKjJ,OACZolC,EAAen8B,KAAKjJ,OAAOmZ,QAAQjI,cAAc,qBACrDk0B,GAAavhC,MAAMwhC,OAAS,EAC5B,IAAIvE,GAAS70B,EAAK3B,OAAS6G,UAAQlF,EAAK3B,OAAQ,MAAQ,KACpDg7B,EAASxE,EAASA,EAAO/wB,UAAY,EACrC+vB,KACAO,EAAgBd,EAAK34B,wBAAwB0+B,EA0BjD,IAzBAr8B,KAAKy5B,kBACLz5B,KAAK61B,SAAU,EACV7yB,EAAKrE,KAAK,GAIXk4B,EAAc7zB,EAAKrE,KAHnBk4B,EAAYh+B,KAAKmK,EAAKrE,OAKV,IAAZ09B,EACAr8B,KAAKs8B,mBAAmBzF,EAAaO,IAGrCp3B,KAAK61B,SAAU,EACf71B,KAAK+3B,iBAEJzB,EAAKtU,gBAAgBC,UAAYjiB,KAAK61B,SACvCS,EAAKzB,qBAAqB+C,WAAW50B,EAAKkC,KAAMm3B,EAAQr5B,GAExDszB,EAAKtU,gBAAgBC,WACjBsa,EAAcv0B,eAAahF,EAAK3B,OAAQ,gBACzBk7B,EAAYpsB,KAAOnQ,KAAKjJ,OAAOirB,gBAAgBC,UAC7Csa,EAAYC,cAAc,GAChC3H,qBAAqB+C,WAAW50B,EAAKkC,KAAMm3B,EAAQr5B,GAGlEA,EAAK3B,QAAU6G,UAAQlF,EAAK3B,OAAQ,IAAMi1B,EAAKtU,gBAAgBC,UAAW,CAC1E,GAAIsa,GAAcv0B,eAAahF,EAAK3B,OAAQ,aACvCk7B,KACDJ,EAAavhC,MAAMwhC,OAAS,aAIxCxG,EAAM30B,UAAUk1B,WAAa,SAAUnzB,GACnC,GAAIszB,GAAOt2B,KAAKjJ,MACXu/B,GAAKtU,gBAAgBC,UAuBlBjf,EAAK3B,QAAU6G,UAAQlF,EAAK3B,OAAQ,IAAMi1B,EAAKtU,gBAAgBC,WAAaja,eAAahF,EAAK3B,OAAQ,eACtG2G,eAAahF,EAAK3B,OAAQ,cAAc8O,KAAOmmB,EAAKtU,gBAAgBC,YACpE1P,WAAS,eAAgBvS,KAAKu2B,aAAcvzB,GAC5CszB,EAAKjwB,QfnaA,UemawBrD,IACxBA,EAAKoD,QAAUkwB,EAAKtU,gBAAgBC,WACrCjiB,KAAKy8B,aAAaz5B,GACdszB,EAAKtf,cACLsf,EAAKj5B,SAAW2C,KAAK02B,aAAaJ,EAAKj5B,aA7B/C2K,eAAahF,EAAK3B,OAAQ,eACtBrB,KAAKjJ,OAAOmZ,QAAQjI,cAAc,kBAClCjI,KAAKu2B,aAAe,WAExBhkB,WAAS,eAAgBvS,KAAKu2B,aAAcvzB,GAC5CA,EAAKwzB,UAAYxzB,EAAKwzB,YAAcxzB,EAAK05B,UAAY18B,KAAK28B,aAAa35B,EAAK3B,OAAOid,eAAiBtb,EAAKwzB,UACzGF,EAAKjwB,QfhZA,UegZwBrD,GACxBA,EAAKoD,SACD5O,EAAgBwI,KAAKjJ,SACtBiJ,KAAKy2B,SAASzzB,GAEdszB,EAAKtf,cACLsf,EAAKj5B,SAAW2C,KAAK02B,aAAaJ,EAAKj5B,WAE3Ci5B,EAAKt+B,KAAKo0B,UACLr0B,oBAAkBu+B,EAAKltB,mBAAmBnB,cAAc,wBACzDquB,EAAKltB,mBAAmBnB,cAAc,sBAAsBuZ,WAkB5ExhB,KAAKu5B,0BACLv5B,KAAKs5B,oBACAvhC,oBAAkBiI,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,qBAAqB,IAG7Enc,oBAAkBiI,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,oBAAoB,KACvFlU,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,oBAAoB,GAAGsN,SAHlExhB,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,qBAAqB,GAAGsN,UAM3EoU,EAAM30B,UAAUw7B,aAAe,SAAUz5B,GACrC,GAKI45B,GALAtG,EAAOt2B,KAAKjJ,OAEZ6nB,EAAY1W,UAAQlF,EAAK3B,OAAQ,MACjCw7B,EAAcC,MAAM98B,KAAK28B,aAAa/d,IAAc,EAAI5e,KAAK28B,aAAa/d,GAC1E2d,EAAcv0B,eAAahF,EAAK3B,OAAQ,aAE5C,IAAIk7B,GAAeA,EAAYpsB,KAAOnQ,KAAKjJ,OAAOirB,gBAAgBC,WAAanrB,EAAakJ,KAAKjJ,UACzFS,EAAgBwI,KAAKjJ,QAAS,CAClC6lC,EAAaL,EAAYC,cAAc,EAGvC,KAAK,GAFDjkC,GAAU+9B,EAAKzwB,qBACfyqB,KACK54B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC44B,EAAQ54B,GAAKa,EAAQb,GAAG6C,KAE5B+7B,GAAKjnB,Of9bO,ee8bqBihB,QAASA,EAAS/3B,QAASA,IAC5DqkC,EAAWvtB,OfjcF,Yeic2BulB,QAASiI,EAAatkC,QAASA,GACnE,IAAIwkC,GAAqBH,EAAW/H,qBAAqBze,YACzD,KAAKre,oBAAkBglC,GACnB,IAASrlC,EAAI,EAAGA,EAAIqlC,EAAmBnlC,OAAQF,IAE3C,GADAqlC,EAAmBrlC,GAAG6C,MAAQ7C,GACzBK,oBAAkBglC,EAAmBrlC,GAAGyB,YAAa,CACtD,GAAI6jC,GAAcz+B,WAAS,sBAAwBw+B,EAAmBrlC,GAAG8G,eAAiB,SAAUo+B,EACpGG,GAAmBrlC,GAAGyB,WAAWoB,MAAQyiC,EAIrD1G,EAAKt+B,KAAKo0B,UACVwQ,EAAW5kC,KAAKo0B,UACZwQ,EAAW5kC,KAAKhB,WAAWY,OAAS,IACpCglC,EAAW5kC,KAAKo0B,UACXr0B,oBAAkB6kC,EAAWxzB,mBAAmBnB,cAAc,wBAC/D20B,EAAWxzB,mBAAmBnB,cAAc,sBAAsBuZ,SAEjEzpB,oBAAkB6kC,EAAWhN,aAAa3nB,cAAc,uBACzD20B,EAAWhN,aAAa3nB,cAAc,qBAAqBuZ,UAInEhqB,EAAgBwI,KAAKjJ,UACrB6lC,EAAaL,EAAYC,cAAc,GACvClG,EAAKt+B,KAAKo0B,UACVwQ,EAAW5kC,KAAKo0B,YAGxBwJ,EAAM30B,UAAU07B,aAAe,SAAU/d,GACrC,MAAOA,GAAYrP,SAASqP,EAAUvV,aAAa,iBAAkB,IAAM,GAE/EusB,EAAM30B,UAAU7H,cAAgB,SAAUL,GACtC,GAAII,GAAaJ,EAAOI,UACxB,IAA0B,kBAAtB6G,KAAKu2B,aAAkC,CACvC,GAAI0G,GAAiBj9B,KAAKjJ,OAAO8O,qBAAqB,EACtD7F,MAAKo3B,cAAgBh+B,EAAc4G,KAAKjJ,OAAQkmC,EAAe9jC,WAAWE,UAEpD,kBAAtB2G,KAAKu2B,eACOv2B,KAAKjJ,OAAO8O,qBAAqB,GAAGrL,QAClCrB,EAAWqB,MACrBwF,KAAKo3B,cAAgBh+B,EAAc4G,KAAKjJ,OAAQoC,EAAWE,UAG3D2G,KAAK5G,cAAcD,KAI/By8B,EAAM30B,UAAUw1B,SAAW,SAAUzzB,EAAMk6B,GACvC,GAA0B,YAAtBl9B,KAAKu2B,eAA+Bz/B,EAAakJ,KAAKjJ,QAAS,CAC/D,GAAIu/B,GAAOt2B,KAAKjJ,OACZ6/B,MAAgB,GAChBQ,MAAgB,EACpB,IAAIr/B,oBAAkBiL,EAAKwzB,WAAY,CACnC,GAAI1vB,GAAWwvB,EAAKjxB,wBAAwB,GAAK,EAC7CtM,EAASu9B,EAAK34B,wBAAwBmJ,EAC1C9G,MAAK5G,cAAcL,OAGnBiK,GAAKwzB,UAAYxzB,EAAKwzB,YAAcxzB,EAAK05B,UAAY18B,KAAK28B,aAAa35B,EAAK3B,OAAOid,eAAiBtb,EAAKwzB,UACzGx2B,KAAKo3B,cAAgBd,EAAK34B,wBAAwBqF,EAAKwzB,UAE3D,IAAIK,KACJO,GAAgBp3B,KAAKo3B,cAChBp0B,EAAKrE,KAAK,GAIXk4B,EAAc7zB,EAAKrE,KAHnBk4B,EAAYh+B,KAAKmK,EAAKrE,KAK1B,IAAI4M,GAAQ,EACR4uB,EAAen6B,KAAKjJ,OAAOirB,gBAAgBC,QAC/CjiB,MAAKm9B,eAAiBhD,CAEjBA,GAIDn6B,KAAK+1B,cAA8BoE,GAAgBn6B,KAAK81B,mBAHxD91B,KAAKs8B,mBAAmBzF,EAAaO,EAMzC,KAAK,GADDgG,GAAavG,EAAYj/B,OACpBF,EAAI,EAAGA,EAAI0lC,EAAY1lC,IAAK,CACjCk/B,EAAgBC,EAAYn/B,GAC5BsI,KAAK42B,cAAgBA,CACrB,IAAI1qB,GAAclJ,EAAKwzB,UACnBp7B,GAAmBrD,oBAAkBu+B,EAAKx5B,gBAC9C,IAA0B,YAAtBkD,KAAKu2B,aAA4B,CAIjC,GAHKD,EAAKtU,gBAAgBC,WAAYib,GAClCl9B,KAAKg3B,gBAELh3B,KAAK42B,gBAAkB52B,KAAKo3B,cAAe,CAC3C,GAAIiG,GAAer9B,KAAK28B,aAAa35B,EAAK3B,OAAOi8B,aAAahf,cAC1Dwe,OAAMO,KACNA,EAAer9B,KAAK28B,aAAa35B,EAAK3B,OAAOid,gBAEjDpS,EAAclJ,EAAKwzB,UAAY6G,EAC/BjG,EAAgBp3B,KAAKo3B,cAAgBp3B,KAAKjJ,OAAO4G,wBAAwBqF,EAAKwzB,WAElF,GAAI+G,GAAev9B,KAAKoW,aAAa1X,QAAQ04B,EAE7C,IADAp3B,KAAKw9B,UAAUD,EAAcniC,EAAiB1D,GACpB,kBAAtBsI,KAAKu2B,aAAkC,CAiBvC,GAhBKa,EAAc19B,iBAOf6R,EAAQvL,KAAKy9B,cAAcrG,EAAe,GACtCp3B,KAAKjJ,OAAO+F,iBACZkD,KAAKpE,SAASoB,OAAOugC,EAAehyB,EAAQ,EAAG,EAAGvL,KAAK42B,cAAcj6B,UAEzEqD,KAAKoW,aAAapZ,OAAOugC,EAAehyB,EAAQ,EAAG,EAAGvL,KAAK42B,iBAVvD52B,KAAKjJ,OAAO+F,iBACZkD,KAAKpE,SAASoB,OAAOugC,EAAe,EAAG,EAAGv9B,KAAK42B,cAAcj6B,UAEjEqD,KAAKoW,aAAapZ,OAAOugC,EAAe,EAAG,EAAGv9B,KAAK42B,gBASvDA,EAAcz9B,WAAa6G,KAAKoW,aAAamnB,GAAcpkC,WAC3Dy9B,EAAcp4B,eAAiBwB,KAAKoW,aAAamnB,GAAc/+B,eAC/Do4B,EAAcp8B,MAAQwF,KAAKoW,aAAamnB,GAAc/iC,MAClDo8B,EAAcl9B,gBAAiB,CAE/BsG,KAAK09B,uBAAuB9G,EADhB,GAEZ52B,KAAK29B,kBAAkB/G,EAAe2G,EAAehyB,EAAQ,GAEjE,GAAI6rB,EAAcj+B,WAAY,CAC1B,GACIQ,GADMqG,KAAKi2B,0BAA0BmB,EAAc54B,gBAChC,GAAG7E,aACtBikC,EAAqBjkC,EAAa+E,QAAQ04B,GAAiB,CAC/Dz9B,GAAaqD,OAAO4gC,EAAoB,EAAGhH,IAGnD52B,KAAK69B,WAAW3xB,EAAaqxB,EAAcv6B,EAAMk6B,EAAY9hC,EAAiB1D,GAElF,GAAIK,oBAAkB6+B,EAAcz9B,YAAa,CAC7C,GAAIgd,GAAgBmgB,EAAKl5B,WACrB0gC,EAAiB3nB,EAAczX,QAAQsB,KAAKo3B,cACtB,mBAAtBp3B,KAAKu2B,aACLpgB,EAAcnZ,OAAO8gC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtB52B,KAAKu2B,cACVpgB,EAAcnZ,OAAO8gC,EAAgB,EAAGlH,GAGhDN,EAAKzB,qBAAqBoC,2BAItCrB,EAAM30B,UAAU48B,WAAa,SAAU3xB,EAAaqxB,EAAcv6B,EAAM5H,EAAiB8hC,EAAYxlC,GACjG,GAAI4+B,GAAOt2B,KAAKjJ,OACZ4C,EAAeF,EAAoBuG,KAAKo3B,eACxC2G,EAAsBhmC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgB2lC,EAAe,EAC5C5jC,EAAa/B,OAAS2lC,EAAe,CACf,mBAAtBv9B,KAAKu2B,eACDD,EAAKx5B,iBACLkD,KAAKpE,SAASoB,OAAO+gC,EAAoB,EAAG/9B,KAAK42B,cAAcj6B,UAC/DqD,KAAKoW,aAAapZ,OAAO+gC,EAAoB,EAAG/9B,KAAK42B,gBAGrD52B,KAAKoW,aAAapZ,OAAO+gC,EAAoB,EAAG/9B,KAAK42B,eAEzD52B,KAAKg+B,cACDh+B,KAAK42B,cAAcl9B,iBACnBsG,KAAK29B,kBAAkB39B,KAAK42B,cAAemH,EAAoB/9B,KAAKo3B,cAAc59B,YAI9Fo8B,EAAM30B,UAAUu8B,UAAY,SAAUD,EAAcniC,EAAiB1D,GACjE,GAAI4+B,GAAOt2B,KAAKjJ,MAChB,IAA0B,eAAtBiJ,KAAKu2B,aAA+B,CAQpC,GAPID,EAAKx5B,iBACLkD,KAAKpE,SAASoB,OAAOugC,EAAc,EAAGv9B,KAAK42B,cAAcj6B,UAE7DqD,KAAK42B,cAAcz9B,WAAa6G,KAAKoW,aAAamnB,GAAcpkC,WAChE6G,KAAK42B,cAAcp4B,eAAiBwB,KAAKoW,aAAamnB,GAAc/+B,eACpEwB,KAAK42B,cAAcp8B,MAAQwF,KAAKoW,aAAamnB,GAAc/iC,MAC3DwF,KAAKoW,aAAapZ,OAAOugC,EAAc,EAAGv9B,KAAK42B,eAC3C52B,KAAK42B,cAAcl9B,gBAAiB,CAEpCsG,KAAK29B,kBAAkB39B,KAAK42B,cAAe2G,GAC3Cv9B,KAAK09B,uBAAuB19B,KAAK42B,cAFrB,GAIhB,GAAI52B,KAAKo3B,cAAcj+B,WAAY,CAC/B,GACIQ,GADMqG,KAAKi2B,0BAA0Bj2B,KAAKo3B,cAAc54B,gBACrC,GAAG7E,aACtBikC,EAAqBjkC,EAAa+E,QAAQsB,KAAKo3B,cACnDz9B,GAAaqD,OAAO4gC,EAAoB,EAAG59B,KAAK42B,kBAI5DhB,EAAM30B,UAAU+8B,YAAc,WAC1B,GAAI1H,GAAOt2B,KAAKjJ,OACZ6/B,EAAgB52B,KAAK42B,cACrBQ,EAAgBp3B,KAAKo3B,cACrB6G,EAAY3H,EAAKr5B,YAWrB,IAVKm6B,EAAc19B,kBACf09B,EAAc19B,iBAAkB,EAChC09B,EAAcpoB,yBAA0B,EACpCjX,oBAAkBq/B,EAAcz9B,gBAChCy9B,EAAcz9B,iBACT28B,EAAKx5B,iBAAmB/E,oBAAkBq/B,EAAcz6B,SAASshC,MAClE7G,EAAcz6B,SAASshC,SAIT,kBAAtBj+B,KAAKu2B,aAAkC,CACvC,GAAIp9B,GAAaqD,YAAW46B,EAQ5B,UAPOj+B,GAAWQ,aAClBi9B,EAAcz9B,WAAaA,EAC3By9B,EAAcp4B,eAAiB44B,EAAc/9B,SAC7C+9B,EAAcz9B,aAAaqD,OAAOo6B,EAAcz9B,aAAa/B,OAAQ,EAAGg/B,GACnE7+B,oBAAkB6+B,IAAmBN,EAAKx5B,iBAAoB/E,oBAAkBq/B,EAAcz6B,SAASshC,KACxG7G,EAAcz6B,SAAS25B,EAAKr5B,cAAcD,OAAOo6B,EAAcz9B,aAAa/B,OAAQ,EAAGg/B,EAAcj6B,UAEpGi6B,EAAcl9B,gBAGd,CAEDk9B,EAAcp8B,MAAQ48B,EAAc58B,MAAQ,EAC5CwF,KAAK09B,uBAAuB9G,EAFhB,OAHZA,GAAcp8B,MAAQ48B,EAAc58B,MAAQ,CAOhD48B,GAAc59B,UAAW,IAMjCo8B,EAAM30B,UAAU+1B,cAAgB,WACxBh3B,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,SAChEiJ,KAAKoW,aAAepW,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAC3DmE,KAAKpE,SAAWoE,KAAKjJ,OAAOC,WAAWA,WAAW6E,OAGlDmE,KAAKoW,aAAepW,KAAKjJ,OAAOiB,KAAKhB,WACrCgJ,KAAKpE,SAAWoE,KAAKjJ,OAAOC,WAEhC,IAAIknC,EACJA,GAAa9kC,EAAc4G,KAAKjJ,OAAQiJ,KAAK42B,cAAcv9B,UAC3D2G,KAAKm+B,cAAcD,IAEvBtI,EAAM30B,UAAU08B,kBAAoB,SAAU5kC,EAAQwS,EAAO/R,GACzD,GAAIqS,GACAyqB,EAAOt2B,KAAKjJ,OACZa,EAAS,CACb,KAAKmB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IACxBmU,EAAgB9S,EAAOY,aAAajC,GACpC6T,IACA+qB,EAAKj5B,SAASL,OAAOuO,EAAO,EAAGM,GAC/B0G,WAAS,sBAAwB1G,EAAcxS,SAAUwS,EAAe7L,KAAKjJ,QACzEu/B,EAAKx5B,iBACLkD,KAAKpE,SAASoB,OAAOuO,EAAO,EAAGM,EAAclP,UAE7CkP,EAAcnS,kBACd6R,EAAQvL,KAAK29B,kBAAkB9xB,EAAeN,GAGtD,OAAOA,IAEXqqB,EAAM30B,UAAUy8B,uBAAyB,SAAU3kC,EAAQyB,GACvD,GACIqR,GADAjU,EAAS,CAGb,IADA4C,KACKzB,EAAOW,gBACR,MAAO,EAEX9B,GAASmB,EAAOY,aAAa/B,MAC7B,KAAK,GAAIF,GAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BmU,EAAgB9S,EAAOY,aAAajC,EACpC,IAAI0F,OAAa,EACbrE,GAAOI,aACPiE,EAAahE,EAAc4G,KAAKjJ,OAAQgC,EAAOI,WAAWE,WAE9DwS,EAAcrR,MAAQzB,EAAOI,WAAaiE,EAAW5C,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFqR,EAAcnS,kBACdc,IACAA,EAAQwF,KAAK09B,uBAAuB7xB,EAAerR,IAG3D,MAAOA,IAEXo7B,EAAM30B,UAAUk9B,cAAgB,SAAUplC,GACtC,GACI/B,GADAs/B,EAAOt2B,KAAKjJ,MAGZC,GADAgJ,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,QACnDiJ,KAAKjJ,OAAOC,WAAWA,WAAW6E,KAGlCmE,KAAKjJ,OAAOC,UAE7B,IAAIknC,GAAanlC,EAGbqC,GAAmBrD,oBAAkBu+B,EAAKx5B,iBAC1CshC,EAAiBp+B,KAAKi2B,0BAA0BiI,EAAW1/B,gBAAgB,EAC/E,IAAI0/B,EAAY,CACZ,GAAIA,EAAW/kC,WAAY,CACvB,GAAIQ,GAAeykC,EAAiBA,EAAezkC,gBAC/C0kC,EAAa,CACb1kC,IAAgBA,EAAa/B,OAAS,IACtCymC,EAAa1kC,EAAa+E,QAAQw/B,GAClCE,EAAezkC,aAAaqD,OAAOqhC,EAAY,GAC1Cr+B,KAAKjJ,OAAO+F,iBACb7B,GAAaX,MAAO4jC,EAAYxiC,OAAQ,UAAYsE,KAAKjJ,OAAQqE,EAAiB8iC,EAAW3jC,MAAO2jC,EAAW3jC,QAI3H,GAAI+7B,EAAKx5B,gBAAiB,CAClBohC,EAAWxkC,iBAAmBwkC,EAAWvkC,aAAa/B,OAAS,GAC/DoI,KAAKs+B,gBAAgBJ,EAKzB,KAAK,GAHD/G,OAAM,GACNoH,MAAM,GACNnoB,EAAepf,EACVU,EAAI,EAAGA,EAAI0e,EAAaxe,OAAQF,IACjC0e,EAAa1e,GAAGsI,KAAKjJ,OAAOgG,aAAemhC,EAAWvhC,SAASqD,KAAKjJ,OAAOgG,aAC3Eo6B,EAAMz/B,EAGd,KAASA,EAAI,EAAGA,EAAIsI,KAAKoW,aAAaxe,OAAQF,IACtCsI,KAAKoW,aAAa1e,GAAGsI,KAAKjJ,OAAOgG,aAAemhC,EAAWvhC,SAASqD,KAAKjJ,OAAOgG,aAChFwhC,EAAM7mC,IAGD,IAATy/B,IAAuB,IAAToH,IACdvnC,EAAWgG,OAAOm6B,EAAK,GACvBn3B,KAAKoW,aAAapZ,OAAOuhC,EAAK,IAGtC,GAAIC,GAAgBx+B,KAAKoW,aAAa1X,QAAQw/B,EAC9C,KAAK5H,EAAKx5B,gBAAiB,CACvB,GAAI2hC,GAAcz+B,KAAKjJ,OAAOqG,WAAWsB,QAAQw/B,IAC5B,IAAjBO,IACAnI,EAAKl5B,WAAWJ,OAAOyhC,EAAa,GACpCznC,EAAWgG,OAAOyhC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyBlI,EAAKx5B,gBAE9B,IAAK,GADD4hC,GAAkBpI,EAAK36B,0BAA0B,GAC5CvB,EAAI,EAAGA,EAAI4F,KAAKoW,aAAaxe,OAAQwC,IACtC4F,KAAKoW,aAAahc,GAAGskC,KAAqBR,EAAWQ,KACrDF,EAAgBpkC,EAI5B,KAAKk8B,EAAKx5B,gBAAiB,CACvB,GAAI6hC,GAAqB3+B,KAAKy9B,cAAcS,EAAY,EACxDl+B,MAAKoW,aAAapZ,OAAOwhC,EAAeG,EAAqB,GAE7DT,EAAW/kC,YAAcilC,GAAkBA,EAAezkC,eAAiBykC,EAAezkC,aAAa/B,SACvGwmC,EAAe5kC,UAAW,EAC1B4kC,EAAe1kC,iBAAkB,EACjC0kC,EAAepvB,yBAA0B,KAIrD4mB,EAAM30B,UAAUq9B,gBAAkB,SAAUvlC,GACxC,GACI8S,GACAsrB,EACAoH,EACAvnC,CAJOgJ,MAAKjJ,MAMZC,GADAgJ,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,QACnDiJ,KAAKjJ,OAAOC,WAAWA,WAAW6E,KAGlCmE,KAAKjJ,OAAOC,UAE7B,KAAK,GAAIU,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDmU,EAAgB9S,EAAOY,aAAajC,EACpC,IAAI0e,OAAe,EAEfA,GADApW,KAAKjJ,OAAOC,qBAAsBC,gBAAe4C,EAAUmG,KAAKjJ,QACjDiJ,KAAKjJ,OAAOC,WAAWA,WAAW6E,KAGlCmE,KAAKjJ,OAAOC,UAE/B,KAAK,GAAIi8B,GAAM,EAAGA,EAAM7c,EAAaxe,OAAQq7B,IACrC7c,EAAa6c,GAAKjzB,KAAKjJ,OAAOgG,aAAe8O,EAAclP,SAASqD,KAAKjJ,OAAOgG,aAChFo6B,EAAMlE,EAGd,KAAK,GAAI2L,GAAM,EAAGA,EAAM5+B,KAAKoW,aAAaxe,OAAQgnC,IAC9C,GAAI5+B,KAAKoW,aAAawoB,GAAK5+B,KAAKjJ,OAAOgG,aAAe8O,EAAclP,SAASqD,KAAKjJ,OAAOgG,WAAY,CACjGwhC,EAAMK,CACN,QAGK,IAATzH,IAAuB,IAAToH,IACdvnC,EAAWgG,OAAOm6B,EAAK,GACvBn3B,KAAKoW,aAAapZ,OAAOuhC,EAAK,IAE9B1yB,EAAcnS,iBACdsG,KAAKs+B,gBAAgBzyB,KAIjC+pB,EAAM30B,UAAUw8B,cAAgB,SAAU1kC,EAAQwS,GAC9C,GAAIM,EACJ,KAAK9S,EAAOW,gBACR,MAAO,EAEX,KAAK,GAAIhC,GAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C6T,KADAM,EAAgB9S,EAAOY,aAAajC,IAElBgC,kBACd6R,EAAQvL,KAAKy9B,cAAc5xB,EAAeN,GAGlD,OAAOA,IAEXqqB,EAAM30B,UAAUq7B,mBAAqB,SAAUuC,EAAgBhzB,GAChD7L,KAAKjJ,MAAhB,IACI+nC,GAAiB9+B,IACrB6+B,GAAevhC,OAAO,SAAUC,GAC5B,GAAIA,EAAE7D,kBAAoB3B,oBAAkBwF,EAAE5D,cAAe,CAEzD,IAAe,IADH4D,EAAE5D,aAAa+E,QAAQmN,GAQ/B,MAHAizB,GAAevI,aAAe,UAC9BuI,EAAe/G,oBACf+G,EAAejJ,SAAU,EALzBiJ,GAAexC,mBAAmB/+B,EAAE5D,aAAckS,OAWlE+pB,EAAM30B,UAAU+F,QAAU,WACtBhH,KAAK2H,uBAKTiuB,EAAM30B,UAAU0G,oBAAsB,WAC9B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,Ift3BI,ces3BmB7H,KAAKk2B,YACxCl2B,KAAKjJ,OAAO8Q,Ifr3BI,ceq3BmB7H,KAAKm2B,YACxCn2B,KAAKjJ,OAAO8Q,If53BC,We43BmB7H,KAAKo2B,WACrCp2B,KAAKjJ,OAAO8Q,If33BI,ce23BmB7H,KAAKq2B,eAS5CT,EAAM30B,UAAU4B,cAAgB,WAC5B,MAAO,kBAEJ+yB,KChgCPn1B,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAGnFI,GAA0C,SAAUC,EAAYC,EAAQnJ,EAAKoJ,GAC7E,GAA2HX,GAAvHY,EAAIC,UAAU5J,OAAQ6J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO5I,OAAOgJ,yBAAyBL,EAAQnJ,GAAOoJ,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQnJ,EAAKoJ,OACpH,KAAK,GAAI5J,GAAI0J,EAAWxJ,OAAS,EAAGF,GAAK,EAAGA,KAASiJ,EAAIS,EAAW1J,MAAI+J,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQnJ,EAAKuJ,GAAKd,EAAEU,EAAQnJ,KAASuJ,EAChJ,OAAOF,GAAI,GAAKE,GAAK/I,OAAOmJ,eAAeR,EAAQnJ,EAAKuJ,GAAIA,GAM5DszB,GAAiC,SAAUhzB,GAE3C,QAASgzB,KACL,MAAkB,QAAXhzB,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,MAPAS,IAAUs0B,EAAiBhzB,GAI3BZ,IACIc,cACD8yB,EAAgB9zB,UAAW,eAAY,IACnC8zB,GACT7yB,iBChCEzB,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAYnFg+B,GAA8C,SAAUh9B,GAExD,QAASg9B,GAA6BhoC,GAClC,GAAI0N,GAAQ1C,EAAOa,KAAK5C,KAAMjJ,IAAWiJ,IAEzC,OADAyE,GAAM4C,mBACC5C,EAkDX,MAtDAhE,IAAUs+B,EAA8Bh9B,GAMxCg9B,EAA6B99B,UAAUoG,iBAAmB,WACtDrH,KAAKjJ,OAAOuQ,GjBqEM,gBiBrEkBtH,KAAKg/B,SAAUh/B,OAEvD++B,EAA6B99B,UAAU+9B,SAAW,SAAUh8B,GACxDhD,KAAKi/B,WAAaj8B,EAAKrE,MAE3BogC,EAA6B99B,UAAUi+B,aAAe,SAAUvgC,EAAMwgC,GAClE,GAAKn/B,KAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACvC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAe5nC,EAAgBwI,KAAKjJ,QACzE,MAAOgL,GAAOd,UAAUi+B,aAAat8B,KAAK5C,KAAMrB,EAAMwgC,EAGjDpnC,qBAAkBonC,EAAWt/B,cAAsD,gBAAtCs/B,EAAWt/B,YAAYmF,aACrEm6B,EAAWt/B,YAAc,UAG7B,KAAK,GADDqF,GAAOnD,EAAOd,UAAUi+B,aAAat8B,KAAK5C,KAAMrB,EAAMwgC,GACjD19B,EAAI,EAAGA,EAAIyD,EAAKtN,OAAQ6J,IAC7ByD,EAAKzD,GAAGlH,MAASyF,gBAAiBtB,QAAQwG,EAAKzD,GAAG9C,KAEtD,OAAOuG,IAGf65B,EAA6B99B,UAAUo+B,mBAAqB,SAAU3jC,GAClE,GAAI4jC,IAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAUle,KAAK,SAAU9mB,GAAS,MAAOoB,KAAWpB,GAChE,IAAK0F,KAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACvC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAe5nC,EAAgBwI,KAAKjJ,QAAS,CAClF,GACIif,GAAchW,KAAU,MAAEgW,WAC1BspB,IACAt/B,KAAKu/B,SACLv/B,KAAKrB,QACLqB,KAAKw/B,WAEW,kBAAX9jC,GAA8BsE,KAAKu/B,MAAMvpB,IAC9ChW,KAAKu/B,MAAMvpB,GAAape,OAAUoI,KAAKjJ,qBAAsB0oC,sBACtDz/B,MAAKu/B,MAAMvpB,QAIlBspB,GAAoB,kBAAX5jC,KACTsE,KAAKu/B,SACLv/B,KAAKrB,QACLqB,KAAKw/B,UAGb,OAAOF,IAEJP,GACTW,4BCvEEC,GAAwB,WAIxB,QAASA,GAAO5oC,GACZ0L,OAAKC,OAAOk9B,UACZ5/B,KAAKjJ,OAASA,EACdiJ,KAAK6/B,mBAAoB,EACzB7/B,KAAKqL,kBACLrL,KAAK8/B,oBACL9/B,KAAK+/B,sBACL//B,KAAKqH,mBAyMT,MAnMAs4B,GAAO1+B,UAAU4B,cAAgB,WAC7B,MAAO,UAOX88B,EAAO1+B,UAAU+F,QAAU,WACvBhH,KAAK2H,uBAKTg4B,EAAO1+B,UAAUoG,iBAAmB,WAChCrH,KAAKjJ,OAAOuQ,GAAG,mBAAoBtH,KAAKggC,sBAAuBhgC,MAC/DA,KAAKjJ,OAAOuQ,GAAG,eAAgBtH,KAAKigC,iBAAkBjgC,OAK1D2/B,EAAO1+B,UAAU0G,oBAAsB,WAC/B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,mBAAoB7H,KAAKggC,uBACzChgC,KAAKjJ,OAAO8Q,IAAI,eAAgB7H,KAAKigC,oBAMzCN,EAAO1+B,UAAU++B,sBAAwB,SAAUE,GAC/C3tB,WAAS,8BAAgCvS,KAAKjJ,QAC9CiJ,KAAK8/B,iBAAmBI,EAAYvhC,KACpCqB,KAAK+/B,sBACL//B,KAAKqL,kBACLrL,KAAK6/B,mBAAoB,CACzB,KAAK,GAAIrK,GAAI,EAAGA,EAAIx1B,KAAK8/B,iBAAiBloC,OAAQ49B,IAAK,CACnD,GAAIxpB,GAAMhM,KAAK8/B,iBAAiBtK,EAChCx1B,MAAKmgC,gBAAgBn0B,EACrB,IAAI7T,GAAwD,KAAxC6H,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAAa8H,KAAKjJ,OAAOsB,eAAeF,cACtF6H,KAAKjJ,OAAOkB,eAAeE,aACT,WAAlBA,GAA+C,SAAlBA,GACqB,IAAnD6H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,MACzF8H,KAAK6/B,mBAAoB,EAE7B,IAAIO,GAAUxnC,YAAU,eAAgBoT,IACnCjU,oBAAkBqoC,IAAYA,EAAQxoC,QACvC2a,WAAS,0BAA2BvS,KAAKqgC,iBAAiBr0B,GAAMA,EAEpE,IAAIs0B,GAAW1nC,YAAU,aAAcoT,EACvC,KAAKjU,oBAAkBuoC,GAAW,CAC9B,GAAIC,GAAYnnC,EAAc4G,KAAKjJ,OAAQiV,EAAI7S,WAAWE,UAAU,EAGpEkZ,YAAS,2BAA2B,EAAMguB,GACtCA,GAAaA,EAAUpnC,YACvB6G,KAAKwgC,2BAA2BD,IAIxCvgC,KAAK8/B,iBAAiBloC,OAAS,GAAKoI,KAAK6/B,mBACzC7/B,KAAKygC,oBAETzgC,KAAKjJ,OAAOsY,OAAO,gBAAkBgB,OAAQrQ,KAAKqL,kBAEtDs0B,EAAO1+B,UAAUu/B,2BAA6B,SAAUznC,GACpD,GAAIwnC,GAAYnnC,EAAc4G,KAAKjJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEqnC,EAAgBniC,WAAS,2BAA4ByB,KAAKjJ,OAC1DwpC,IAAaG,EAAc9jC,eAAe2jC,EAAUlnC,WACpDkZ,WAAS,2BAA2B,EAAMguB,GAE1CA,GAAaA,EAAUpnC,YACvB6G,KAAKwgC,2BAA2BD,IAIxCZ,EAAO1+B,UAAUk/B,gBAAkB,SAAUpnC,GACzC,GAAIhC,GAASqC,EAAc4G,KAAKjJ,OAAQgC,EAAOyF,eAI/C,IAAsB,UAFsC,KAAxCwB,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAAa8H,KAAKjJ,OAAOsB,eAAeF,cACtF6H,KAAKjJ,OAAOkB,eAAeE,gBACmD,IAAnD6H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,IA4B9BH,oBAAkBhB,KAGK,WAFsC,KAAxCiJ,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAClD8H,KAAKjJ,OAAOsB,eAAeF,cAAgB6H,KAAKjJ,OAAOkB,eAAeE,gBACa,IAAnD6H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAMnC8H,KAAKmgC,gBAAgBppC,IAL0B,IAA3CiJ,KAAK8/B,iBAAiBphC,QAAQ3H,IAC9BiJ,KAAKmgC,gBAAgBppC,KAOY,IAAzCiJ,KAAKqL,eAAe3M,QAAQ3F,KAC5BiH,KAAKqL,eAAexS,KAAKE,GACzBwZ,WAAS,4BAA8BxZ,EAAOM,SAAUN,EAAQiH,KAAKjJ,aA1CzE,IAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CiJ,KAAK8/B,iBAAiBphC,QAAQ3F,GAM9B,aAL6C,IAAzCiH,KAAKqL,eAAe3M,QAAQ3F,KAC5BiH,KAAKqL,eAAexS,KAAKE,GACzBwZ,WAAS,4BAA8BxZ,EAAOM,SAAUN,EAAQiH,KAAKjJ,QACrEgC,EAAOiW,yBAA0B,QAMzChP,MAAKmgC,gBAAgBppC,IAC0B,IAA3CiJ,KAAK8/B,iBAAiBphC,QAAQ3H,KAA2D,IAAzCiJ,KAAKqL,eAAe3M,QAAQ3H,IAC/B,IAAzCiJ,KAAKqL,eAAe3M,QAAQ3F,KAC5BiH,KAAKqL,eAAexS,KAAKE,GACzBwZ,WAAS,4BAA8BxZ,EAAOM,SAAUN,EAAQiH,KAAKjJ,UAI5B,IAAzCiJ,KAAKqL,eAAe3M,QAAQ3F,KAA6D,IAA3CiH,KAAK8/B,iBAAiBphC,QAAQ3F,KAC5EiH,KAAKqL,eAAexS,KAAKE,GACzBwZ,WAAS,4BAA8BxZ,EAAOM,SAAUN,EAAQiH,KAAKjJ,UAyBzF4oC,EAAO1+B,UAAUo/B,iBAAmB,SAAU9nC,GAG1C,IAAK,GAFDooC,GAAW/nC,YAAU,eAAgBL,GACrCqoC,GAAU,EACLr1B,EAAQ,EAAGA,EAAQo1B,EAAS/oC,OAAQ2T,IAAS,CAClD,GAAI60B,GAAUO,EAASp1B,GAAO5R,aAC1BxB,EAAwD,KAAxC6H,KAAKjJ,OAAOiB,KAAKC,eAAeC,IAChD8H,KAAKjJ,OAAOsB,eAAeF,cAAgB6H,KAAKjJ,OAAOkB,eAAeE,aAU1E,IATwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnD6H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,KACfqG,WAAS,2BAA4ByB,KAAKjJ,QAC3C6F,eAAe+jC,EAASp1B,GAAOlS,YAC9C2G,KAAKqL,eAAexS,KAAK8nC,EAASp1B,IAClCgH,WAAS,4BAA8BouB,EAASp1B,GAAOlS,SAAUsnC,EAASp1B,GAAQvL,KAAKjJ,QACvF6pC,GAAU,GAGK,SAAlBzoC,IACsD,IAAnD6H,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApD8H,KAAK8/B,iBAAiBphC,QAAQiiC,EAASp1B,IAAgB,CACvDq1B,GAAU,CACV,QAGH7oC,oBAAkBqoC,IAAYA,EAAQxoC,SACvCgpC,EAAU5gC,KAAKqgC,iBAAiBM,EAASp1B,KAEtB,UAAlBpT,GAA+C,SAAlBA,IAA6BwoC,EAAS/oC,SACpEgpC,GAAU,GAGlB,MAAOA,IAEXjB,EAAO1+B,UAAUw/B,kBAAoB,WAGjC,IAAK,GAFD1nC,GAASiH,KAAKqL,eACd5S,EAAMuH,KAAKqL,eAAezT,OACrB2J,EAAI,EAAGA,EAAI9I,EAAK8I,IAAK,CAC1B,GAAIs/B,GAAWznC,EAAc4G,KAAKjJ,OAAQgC,EAAOwI,GAAG/C,eAEpD,KAD2C,IAA9BzF,EAAO2F,QAAQmiC,GAChB,CACR,GAAIC,GAAW1nC,EAAc4G,KAAKjJ,OAAQgC,EAAOwI,GAAG/C,gBAAgB,EACpEzF,GAAOwI,GAAGgN,YAAcuyB,EAASvyB,YAAc,MAG/CxV,GAAOwI,GAAGgN,YAAc,EACxBvO,KAAK+/B,mBAAmBlnC,KAAKE,EAAOwI,MAIhDo+B,EAAO1+B,UAAUg/B,iBAAmB,SAAUthC,GAC1C,GAGIkN,GAHAN,EAAQ,EACRlO,EAAWsB,EAAKtB,SAChB5E,EAAM4E,EAASzF,MAEnB,KAAK2T,EAAOA,EAAQ9S,EAAK8S,IAAS,CAE9B,GAAIw1B,IADJl1B,EAAgBxO,EAASkO,IACEgD,aACvBwyB,GAAqB,IAAXA,GAAiBhpC,oBAAkB8T,EAAcmD,2BAC3DnD,EAAcmD,wBAA0B,KACxCnD,EAAc0C,YAAc,MAGpCvO,KAAKqL,kBACLrL,KAAKjJ,OAAOsY,OAAO,iBAAmBgB,OAAQhT,EAAUkO,MAAOlO,EAASzF,UAErE+nC,KClNPqB,GAA6B,WAI7B,QAASA,GAAYjqC,GACjB0L,OAAKC,OAAOu+B,eACZjhC,KAAKjJ,OAASA,EACdiJ,KAAK8Q,eACL9Q,KAAKqH,mBA6JT,MAvJA25B,GAAY//B,UAAU4B,cAAgB,WAClC,MAAO,eAKXm+B,EAAY//B,UAAUoG,iBAAmB,WACrCrH,KAAKjJ,OAAOuQ,GAAG,gBAAiBtH,KAAKkhC,uBAAwBlhC,MAC7DA,KAAKjJ,OAAOuQ,GAAG,gBAAiBtH,KAAK6kB,mBAAoB7kB,MACzDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,sBAAuBtH,KAAKmhC,mBAAoBnhC,MACpEA,KAAKjJ,OAAOiB,KAAKsP,GAAG,iBAAkBtH,KAAKohC,eAAgBphC,OAO/DghC,EAAY//B,UAAU+F,QAAU,WAC5BhH,KAAK2H,uBAKTq5B,EAAY//B,UAAU0G,oBAAsB,WACpC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,gBAAiB7H,KAAKkhC,wBACtClhC,KAAKjJ,OAAO8Q,IAAI,gBAAiB7H,KAAK6kB,oBACtC7kB,KAAKjJ,OAAOiB,KAAK6P,IAAI,sBAAuB7H,KAAKmhC,oBACjDnhC,KAAKjJ,OAAOiB,KAAK6P,IAAI,iBAAkB7H,KAAKohC,kBAEhDJ,EAAY//B,UAAUigC,uBAAyB,SAAU/N,GACrDnzB,KAAK8Q,YAAcqiB,GAEvB6N,EAAY//B,UAAUoa,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQkmB,GAChC,GAAI58B,GAAQzE,KACRhJ,EAAagJ,KAAKjJ,OAAOC,WACzB6iB,EAAWnhB,QAGf,OAFA6Z,YAAS,QAAS8uB,EAAOxnB,GACzBtH,WAAS,UAAU,EAAOsH,GACnB,GAAIynB,SAAQ,SAAU5Z,EAAS6Z,GAClC,GAAIznC,GAAK2K,EAAM+8B,UAAY,GAAIvqC,eAAYD,GAAcyN,EAAM1N,OAAOC,WAClEsa,EAAQ,GAAIC,QAMhB,IALK9M,EAAM+8B,YACPlwB,EAAQ7M,EAAMiQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOuI,IAE7BpV,EAAM1N,OAAOsP,QnB5CM,oBmB4C2B7J,SAAOqd,EAAUmB,IAC3DpiB,YAAU,SAAUihB,GACpB,MAAO,KAEX/f,GAAGmY,aAAaX,GAAOY,KAAK,SAAU3U,GAClC,GAAIkkC,GAAa,IAKjB,OAJK1pC,qBAAkBijB,IAA2BjjB,oBAAkBijB,EAAsBhkB,cACtFyqC,EAAazmB,EAAsBhkB,YAEvCgkB,EAAwBvW,EAAMi9B,2BAA2B1mB,EAAuBhkB,EAAYuG,GACrFkH,EAAM1N,OAAOiB,KAAKojB,kBAAkBC,IAAI5W,EAAM1N,OAAOiB,KAAMgjB,EAAuBC,EAAkBC,EAAUmmB,EAAOlmB,GAAQjJ,KAAK,SAAUyvB,GAC7H,MAAdF,EACAzmB,EAAsBhkB,WAAayqC,QAG5BzmB,GAAsBhkB,WAEjC0wB,EAAQia,UAKxBX,EAAY//B,UAAUyT,cAAgB,SAAUpD,EAAOuI,GAQnD,OAPK9hB,oBAAkB8hB,IAAqC,gBAAxBA,EAASpD,YACtCzW,KAAKjJ,OAAOgX,cACf8L,EAASpD,WAAa,WACtBnF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM3R,KAAKjJ,OAAO+F,gBAAiB,QAAS,MAClDwU,EAAQ1Y,YAAU,mCAAoCoH,KAAKjJ,QAAQua,IAEhEA,GAEX0vB,EAAY//B,UAAUygC,2BAA6B,SAAU7nB,EAAU+nB,EAAOC,GAE1E,GAAI7+B,GAAOtK,QAkBX,IAjBA6Z,WAAS,QAASvS,KAAKjJ,OAAOiB,KAAKyc,gBAAgBC,eAAc,GAAO1R,GACxEuP,WAAS,YAAY,EAAMvP,GACtBjL,oBAAkB8hB,IAAc9hB,oBAAkB8hB,EAASpD,aAC5DlE,WAAS,aAAcsH,EAASpD,WAAYzT,GAE3ChD,KAAKwhC,WAAczpC,oBAAkBiI,KAAKjJ,OAAO+F,mBAClDkD,KAAKjJ,OAAOqG,cACZ4C,KAAKjJ,OAAO6qB,WAAWvQ,kBAAkBzY,YAAU,SAAUipC,IAC7DtvB,WAAS,aAAcvS,KAAKjJ,OAAOsG,SAAU2F,IAEjDhD,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,GAEpCA,EAAOhD,KAAK8Q,YACZ8wB,EAAQ7pC,oBAAkBiL,EAAKqN,QAAUrQ,KAAKjJ,OAAOsG,SAASqI,MAAM,GAAK1C,EAAKqN,OACzErQ,KAAKwhC,YACNxhC,KAAKjJ,OAAOsG,aAEZwc,GAAYA,EAAS7iB,YAAcgJ,KAAKwhC,UAAW,CACnD,GAAIM,GAAY9hC,KAAKjJ,OAAOsG,SACxB0kC,EAAUloB,EAAS7iB,qBAAsBC,eAAc4iB,EAAS7iB,WAAWA,WAAW6E,KAAOge,EAAS7iB,UAC1GgJ,MAAKjJ,OAAO6qB,WAAWvQ,kBAAkB0wB,GACzCH,EAAQ5hC,KAAKjJ,OAAOsG,SACpB2C,KAAKjJ,OAAOsG,SAAWykC,EAI3B,MAFAjoB,GAAW9hB,oBAAkB8hB,GAAYnhB,SAAWmhB,EACpDA,EAAS7iB,WAAa,GAAIC,gBAAc4E,KAAM+lC,IACvC/nB,GAMXmnB,EAAY//B,UAAU4jB,mBAAqB,SAAU7hB,GACjD,GAAIhD,KAAKjJ,OAAOiB,KAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO0I,gBAAiB,CACvF,GAAI7E,MACA+D,EAAOqE,EAAKrE,KAEZ2P,EADcvW,oBAAkB4G,EAAK4P,aACjB5P,EAAKnE,MAAQmE,EAAK4P,WAC1C3T,GAAMonC,OAAS1zB,EACftL,EAAKpI,MAAQA,EAEjBoF,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,GACpChD,KAAKjJ,OAAOsP,QAAQ,qBAAsBrD,IAE9Cg+B,EAAY//B,UAAUkgC,mBAAqB,SAAUc,GACjD,GAAsB,UAAlBA,EAASh/B,KAAkB,CAC3B,GAAIi/B,GAAcD,EAASE,OAAOxjC,KAC9ByjC,EAAqBpiC,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,MACjE,IAAIsqC,EAAY/oC,YAAcC,EAAc4G,KAAKjJ,OAAQmrC,EAAY/oC,WAAWE,SAAUgpC,QAAQD,IAAsB,CACpH,GAAIE,GAAYL,EAASM,UAAU3qC,OAC/B4qC,EAAWN,EAAY1nC,KAC3BynC,GAASM,UAAUD,EAAY,GAAGG,UAAaC,aAAcF,EAAUG,aAAa,MAKhG3B,EAAY//B,UAAUmgC,eAAiB,SAAgDlmB,GACnF,IAAK,GAAIxjB,GAAI,EAAGA,EAAIwjB,EAAS0nB,WAAWhrC,OAAQF,IACxCwjB,EAAS0nB,WAAWlrC,GAAGwN,OACvBgW,EAAS0nB,WAAWlrC,GAAGmrC,WAAcC,mBAAmB,KAIpE9B,EAAY//B,UAAUugC,QAAU,WAC5B,OAAQ1qC,EAAakJ,KAAKjJ,SAAW8C,EAAUmG,KAAKjJ,SAEjDiqC,KCrKP+B,GAA2B,WAI3B,QAASA,GAAUhsC,GACf0L,OAAKC,OAAOsgC,aACZhjC,KAAKjJ,OAASA,EACdiJ,KAAK8Q,eACL9Q,KAAKqH,mBAoIT,MA9HA07B,GAAU9hC,UAAU4B,cAAgB,WAChC,MAAO,aAKXkgC,EAAU9hC,UAAUoG,iBAAmB,WACnCrH,KAAKjJ,OAAOuQ,GAAG,cAAetH,KAAK8kB,iBAAkB9kB,MACrDA,KAAKjJ,OAAOuQ,GAAG,gBAAiBtH,KAAKijC,qBAAsBjjC,OAK/D+iC,EAAU9hC,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,cAAe7H,KAAK8kB,kBACpC9kB,KAAKjJ,OAAO8Q,IAAI,gBAAiB7H,KAAKijC,wBAO1CF,EAAU9hC,UAAU+F,QAAU,WAC1BhH,KAAK2H,uBAETo7B,EAAU9hC,UAAUgiC,qBAAuB,SAAU9P,GACjDnzB,KAAK8Q,YAAcqiB,GAEvB4P,EAAU9hC,UAAUoa,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,GAAI1W,GAAQzE,KACR4hC,EAAQ5hC,KAAKjJ,OAAOC,WACpBgjB,EAAOthB,SACP8oC,GAAW1qC,EAAakJ,KAAKjJ,SAAW8C,EAAUmG,KAAKjJ,OAE3D,OADAwb,YAAS,UAAU,EAAOyH,GACnB,GAAIsnB,SAAQ,SAAU5Z,EAAS6Z,GAClC,GAAIznC,GAAK0nC,EAAU,GAAIvqC,eAAY2qC,GAASn9B,EAAM1N,OAAOC,WACrDsa,EAAQ,GAAIC,QAMhB,IALKiwB,IACDlwB,EAAQ7M,EAAMiQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAO0I,IAE7BvV,EAAM1N,OAAOsP,QpBtCI,kBoBsC2B7J,SAAOwd,EAAMwB,IACrD5iB,YAAU,SAAUohB,GACpB,MAAO,KAEXlgB,GAAGmY,aAAaX,GAAOY,KAAK,SAAU3U,GAClC,GAAI2lC,GAAc,IAKlB,OAJKnrC,qBAAkByjB,IAAyBzjB,oBAAkByjB,EAAoBxkB,cAClFksC,EAAc1nB,EAAoBxkB,YAEtCwkB,EAAsB/W,EAAM0+B,wBAAwB3nB,EAAqBomB,EAAOrkC,GACzEkH,EAAM1N,OAAOiB,KAAK0jB,gBAAgBL,IAAI5W,EAAM1N,OAAOiB,KAAMwjB,EAAqBP,EAAkBQ,EAAQN,GAAQjJ,KAAK,SAAUgmB,GAC/G,MAAfgL,EACA1nB,EAAoBxkB,WAAaksC,QAG1B1nB,GAAoBxkB,WAE/B0wB,EAAQwQ,UAKxB6K,EAAU9hC,UAAUyT,cAAgB,SAAUpD,EAAO0I,GAQjD,OAPKjiB,oBAAkBiiB,IAA6B,gBAApBA,EAAKvD,YAC9BzW,KAAKjJ,OAAOgX,cACfiM,EAAKvD,WAAa,WAClBnF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM3R,KAAKjJ,OAAO+F,gBAAiB,QAAS,MAClDwU,EAAQ1Y,YAAU,mCAAoCoH,KAAKjJ,QAAQua,IAEhEA,GAEXyxB,EAAU9hC,UAAUkiC,wBAA0B,SAAUnpB,EAAM4nB,EAAOC,GACjE,GAAI7+B,MAEAw+B,GAAW1qC,EAAakJ,KAAKjJ,SAAW8C,EAAUmG,KAAKjJ,OAkB3D,IAjBAwb,WAAS,QAASvS,KAAKjJ,OAAOiB,KAAKyc,gBAAgBC,eAAc,GAAO1R,GACxEuP,WAAS,YAAY,EAAMvP,GACtBjL,oBAAkBiiB,IAAUjiB,oBAAkBiiB,EAAKvD,aACpDlE,WAAS,aAAcyH,EAAKvD,WAAYzT,GAEvCw+B,GAAYzpC,oBAAkBiI,KAAKjJ,OAAO+F,mBAC3CkD,KAAKjJ,OAAOqG,cACZ4C,KAAKjJ,OAAO6qB,WAAWvQ,kBAAkB9S,WAAS,SAAUsjC,IAC5DtvB,WAAS,aAAcvS,KAAKjJ,OAAOsG,SAAU2F,IAEjDhD,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,GAEpCA,EAAOhD,KAAK8Q,YACZ8wB,EAAQ7pC,oBAAkBiL,EAAKqN,QAAUrQ,KAAKjJ,OAAOsG,SAASqI,MAAM,GAAK1C,EAAKqN,OACzEmxB,IACDxhC,KAAKjJ,OAAOsG,aAEZ2c,GAAQA,EAAKhjB,YAAcwqC,EAAS,CACpC,GAAI4B,GAAYpjC,KAAKjJ,OAAOsG,SACxB0kC,EAAU/nB,EAAKhjB,qBAAsBC,eAAc+iB,EAAKhjB,WAAWA,WAAW6E,KAAOme,EAAKhjB,UAC9FgJ,MAAKjJ,OAAO6qB,WAAWvQ,kBAAkB0wB,GACzCH,EAAQ5hC,KAAKjJ,OAAOsG,SACpB2C,KAAKjJ,OAAOsG,SAAW+lC,EAI3B,MAFAppB,GAAOjiB,oBAAkBiiB,MAAaA,EACtCA,EAAKhjB,WAAa,GAAIC,gBAAc4E,KAAM+lC,IACnC5nB,GAMX+oB,EAAU9hC,UAAU6jB,iBAAmB,SAAU9hB,GAC7C,GAAIhD,KAAKjJ,OAAOiB,KAAK2W,oBAAoB3L,EAAKrD,OAAOuJ,OAASlJ,KAAKjJ,OAAO0I,gBAAiB,CACvF,GAAI7E,MACA+D,EAAO/F,YAAU,OAAQoK,GAEzBsL,EADcvW,oBAAkB4G,EAAK4P,aACjB5P,EAAKnE,MAAQmE,EAAK4P,WAC1C3T,GAAMyoC,gBAAwB,EAAN/0B,EACxBtL,EAAKpI,MAAQA,EAEjBoF,KAAKjJ,OAAOsY,OAAO,gBAAiBrM,GACpChD,KAAKjJ,OAAOsP,QAAQ,mBAAoBrD,IAErC+/B,KC3IPO,GAAsB,WACtB,QAASA,GAAKvsC,GACV0L,OAAKC,OAAO6gC,QACZvjC,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBA8IT,MAzIAi8B,GAAKriC,UAAUoG,iBAAmB,WAC9BrH,KAAKjJ,OAAOuQ,GrByBkB,2BqBzBkBtH,KAAKwjC,0BAA2BxjC,MAChFA,KAAKjJ,OAAOuQ,GrB0BO,gBqB1BkBtH,KAAKyjC,WAAYzjC,OAK1DsjC,EAAKriC,UAAU0G,oBAAsB,WAC7B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IrBekB,2BqBfmB7H,KAAKwjC,2BACtDxjC,KAAKjJ,OAAO8Q,IrBgBO,gBqBhBmB7H,KAAKyjC,cAM/CH,EAAKriC,UAAU4B,cAAgB,WAC3B,MAAO,SAMXygC,EAAKriC,UAAUmrB,QAAU,WACrBpsB,KAAKjJ,OAAOiB,KAAK02B,YAAYtC,WAOjCkX,EAAKriC,UAAU+F,QAAU,WACrBhH,KAAK2H,uBAOT27B,EAAKriC,UAAUutB,SAAW,SAAUC,GAChCzuB,KAAKjJ,OAAOiB,KAAK02B,YAAYF,SAASC,IAO1C6U,EAAKriC,UAAU0tB,sBAAwB,SAAUprB,GAC7CvD,KAAKjJ,OAAOiB,KAAK02B,YAAYC,sBAAsBprB,IAKvD+/B,EAAKriC,UAAUuiC,0BAA4B,SAAU5vB,GACjDA,EAAW7a,OAAOS,SAAiC,aAAtBoa,EAAWlY,OACpCqP,eACA/K,KAAKjJ,OAAOsG,SAASC,OAAO,SAAUC,GAClC,MAAOA,GAAElE,WAAaua,EAAW7a,OAAOM,WACzC,GAAGG,SAAiC,aAAtBoa,EAAWlY,OAEhC,IAAIgoC,IACArzB,OAAQrQ,KAAKjJ,OAAOsG,SACpBwB,IAAK+U,EAAW/U,IAChBnD,OAAQkY,EAAWlY,OACnB3C,OAAQ6a,EAAW7a,OACnBwS,MAAOvL,KAAKjJ,OAAOsG,SAASzF,OAEhC2G,YAAS,oBAAqByB,KAAKjJ,QAAQ0b,mBAAmBixB,IAElEJ,EAAKriC,UAAU0iC,SAAW,SAAUC,EAAc3rB,EAAM5H,GAapD,IAAK,GAZDwzB,GAAa9rC,oBAAkBsY,MAAeA,EAW9C1E,EAAS3L,KACJ8jC,EAAI,EAAGA,EAAI7rB,EAAKrgB,OAAQksC,KAXnB,SAAUA,GACpBD,EAAWhrC,KAAKof,EAAK6rB,GACrB,IAAIC,KACA9rB,GAAK6rB,GAAGpqC,kBACRqqC,EAAMH,EAAatmC,OAAO,SAAUC,GAChC,MAAO0a,GAAK6rB,GAAGzqC,WAAakE,EAAEiB,iBAElCqlC,EAAal4B,EAAOg4B,SAASC,EAAcG,EAAKF,KAK5CC,EAEZ,OAAOD,IAEXP,EAAKriC,UAAUwiC,WAAa,SAAUO,GAClC,GAAIv/B,GAAQzE,KACRlG,EAAK,GAAI7C,eAAY+sC,EAAe3zB,OACxC,IAA8C,SAA1CrQ,KAAKjJ,OAAOiX,aAAaC,aAAyB,CAClD,GAAIgK,MACAgsB,EAAYjkC,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CoI,KAAKjJ,OAAOsB,eAAeF,eAA0E,SAA7C6H,KAAKjJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBmZ,GAAQ,GAAIC,UAAQI,MAAMsyB,EAAU,QAAS,EACjDhsB,GAAOne,EAAGiZ,aAAazB,GACvB0yB,EAAez4B,MAAQ0M,EAAKrgB,MAGxBssC,IAFAC,EAAOnkC,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,YACrCC,EAAUrkC,KAAKjJ,OAAOiB,KAAKgW,aAAagI,aACf,EAC7B1E,GAAQA,EAAM4yB,KAAKA,GAAMI,KAAKH,GAC9BlsB,EAAOne,EAAGiZ,aAAazB,EACvB,IAAIuyB,GAAa7jC,KAAK2jC,SAASK,EAAe3zB,OAAQ4H,EACtD+rB,GAAe3zB,OAASwzB,MAEvB,CACD,GAAIna,GAAO,GAAIzyB,eAAY+sC,EAAe3zB,QACtC7W,EAAW,GAAIsI,aAAU,WAAY,WAAY,MAAMyiC,GAAG,WAAY,eAAYhrB,IAClFirB,EAAY9a,EAAK3W,cAAa,GAAIxB,UAAQI,MAAMnY,IAChDylC,MAAa,EAEbA,GADAnnC,EAAuBkI,KAAKjJ,QACfytC,EAGAA,EAAUlnC,OAAO,SAAUC,GACpC,MAAOzE,GAAgB2L,EAAM1N,OAAQwG,EAAGinC,KAGhDR,EAAez4B,MAAQ0zB,EAAWrnC,MAClC,IAAI0Z,GAAQ,GAAIC,SACZ4yB,EAAOnkC,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,SACrCC,EAAUrkC,KAAKjJ,OAAOiB,KAAKgW,aAAagI,WACxCipB,GAAWrnC,OAAUysC,EAAUF,IAE/BE,GADAA,EAAW5wB,KAAKgxB,MAAMxF,EAAWrnC,OAASusC,IAAWlF,EAAWrnC,OAASusC,EAAQ,EAAI,KACvD,EAC9BnkC,KAAKjJ,OAAOiB,KAAKiiB,eAAgBjM,cAAgBgI,YAAaquB,KAAa,GAE/E,IAAIH,GAAOC,GAAQE,EAAU,EAC7B/yB,GAAQA,EAAM4yB,KAAKA,GAAMI,KAAKH,GAC9Bza,EAAK1yB,WAAW6E,KAAOojC,EACvB+E,EAAe3zB,OAASqZ,EAAK3W,aAAazB,GAE9CtR,KAAKjJ,OAAOsY,OAAO,eAAgB20B,IAEhCV,KCrJPoB,GAAyB,WACzB,QAASA,GAAQ3tC,GACb0L,OAAKC,OAAOiiC,WACZ3kC,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBA4HT,MAtHAq9B,GAAQzjC,UAAU4B,cAAgB,WAC9B,MAAO,WAKX6hC,EAAQzjC,UAAUoG,iBAAmB,WACjCrH,KAAKjJ,OAAOuQ,GtBHK,csBGkBtH,KAAK4kC,eAAgB5kC,MACxDA,KAAKjJ,OAAOuQ,GtBEM,esBFkBtH,KAAK6kC,oBAAqB7kC,OAKlE0kC,EAAQzjC,UAAU0G,oBAAsB,WAChC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,ItBbK,csBamB7H,KAAK4kC,gBACzC5kC,KAAKjJ,OAAO8Q,ItBRM,esBQmB7H,KAAK6kC,uBAE9CH,EAAQzjC,UAAU2jC,eAAiB,SAAU5hC,GACzC,GAAIszB,GAAOt2B,KAAKjJ,MAEU,KAAtBiM,EAAKnE,IAAIiI,UAAkBwvB,EAAKzwB,qBAAqBjO,OAAS,EAC9DoI,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,sBAAuBmmB,EAAKpmB,QAAQC,GAAK,yBAAyB,GAGjGpY,oBAAkBu+B,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,cACpD/O,oBAAkBu+B,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,YACxDwvB,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,UAAUtM,MAC7C87B,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,SAAW,GAAGtM,MACxDwF,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,wBAAwB,GAG5DnQ,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,wBAAwB,GAE5DmmB,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,UAAUtM,QAChD87B,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,SAAW,GAAGtM,OACpDwF,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DmmB,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,UAAUtM,OAChDwF,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DmmB,EAAK34B,wBAAwBqF,EAAKnE,IAAIiI,UAAUtM,OAChDwF,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBnN,EAAKnE,IAAIiI,UAAmB/O,oBAAkBiL,EAAKrE,KAAKxF,aACxD6G,KAAK+tB,aAAauI,EAAKpmB,QAAQC,GAAK,yBAAyB,IAGrEu0B,EAAQzjC,UAAU4jC,oBAAsB,SAAU7hC,GAC9C,GAAIszB,GAAOt2B,KAAKjJ,MAYhB,IAXsC,SAAlCiJ,KAAKjJ,OAAOkF,aAAaC,MAA0D,UAAvC8D,KAAKjJ,OAAOiB,KAAKiE,aAAaC,MAC1E8G,EAAKE,KAAKiN,KAAOnQ,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAK,YAC/CnN,EAAKoD,QAAS,EACdpG,KAAKjJ,OAAOiB,KAAKmE,WAAWkxB,YAE5BrqB,EAAKE,KAAKiN,KAAOnQ,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAK,cAC/CnQ,KAAKjJ,OAAOgnB,YAEZ/a,EAAKE,KAAKiN,KAAOnQ,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAK,gBAC/CnQ,KAAKjJ,OAAOinB,cAEZhb,EAAKE,KAAKiN,KAAOmmB,EAAKt+B,KAAKkY,QAAQC,GAAK,WAAammB,EAAKzwB,qBAAqBjO,OAAQ,CACvF,GAAImB,GAASu9B,EAAK34B,wBAAwB24B,EAAKjxB,wBAAwB,GAAK,GACxEmxB,MAAY,EAChB,IAAIz9B,EAAOyB,MAAQ87B,EAAKzwB,qBAAqB,GAAGrL,MAC5C,IAAS9C,EAAI,EAAGA,EAAI4+B,EAAK34B,wBAAwB/F,OAAQF,IACjD4+B,EAAK34B,wBAAwBjG,GAAGiF,WAAa5D,EAAOI,WAAWwD,WAC/D65B,EAAY9+B,OAKpB8+B,GAAYF,EAAKjxB,wBAAwB,GAAK,CAElDixB,GAAK5B,aAAa4B,EAAKjxB,wBAAwB,IAAKmxB,EAAW,SAEnE,GAAIxzB,EAAKE,KAAKiN,KAAOmmB,EAAKt+B,KAAKkY,QAAQC,GAAK,YAAcmmB,EAAKzwB,qBAAqBjO,OAAQ,CAIxF,IAAK,GAHD2C,GAAQ+7B,EAAKjxB,wBAAwB,GACrCmxB,MAAY,GACZr9B,EAAam9B,EAAKzwB,qBAAqB,GAAG1M,WACrCzB,EAAI,EAAGA,EAAI4+B,EAAK34B,wBAAwB/F,OAAQF,IACjD4+B,EAAK34B,wBAAwBjG,GAAGiF,WAAaxD,EAAWwD,WACxD65B,EAAY9+B,EAGpB4+B,GAAK5B,aAAan6B,GAAQi8B,EAAW,WAQ7CkO,EAAQzjC,UAAUi5B,WAAa,WAC3B,MAAOl6B,MAAKjJ,OAAOiB,KAAK81B,cAAcoM,cAS1CwK,EAAQzjC,UAAU8sB,YAAc,SAAU7a,EAAO2a,GAC7C7tB,KAAKjJ,OAAOiB,KAAK81B,cAAcC,YAAY7a,EAAO2a,IAOtD6W,EAAQzjC,UAAU+F,QAAU,WACxBhH,KAAK2H,uBAEF+8B,KC/HPI,GAA2B,WAI3B,QAASA,GAAU/tC,GACf0L,OAAKC,OAAOqiC,aACZ/kC,KAAKjJ,OAASA,EACdiJ,KAAKglC,oBACLhlC,KAAKqV,gBAiOT,MA3NAyvB,GAAU7jC,UAAU4B,cAAgB,WAChC,MAAO,WAEXiiC,EAAU7jC,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAO6Q,aAQpBk9B,EAAU7jC,UAAUuU,sBAAwB,SAAUH,EAAckC,EAAc0tB,GAC9EjlC,KAAKqV,aAAeA,CACpB,IAAInc,GAEAkE,CACJA,KACA,KAAK,GAAII,GAAI,EAAG/E,EAHOC,OAAOC,KAAK4e,GAAc3f,OAGT4F,EAAI/E,EAAK+E,IAC5B5E,YAAU,eAAgB2e,EAAa/Z,KAEpDJ,EAAWvE,KAAK0e,EAAa/Z,GAGrC,IACI0nC,GADA/uB,EAAgB7d,EAAkB8E,EAEtC8nC,GAAc9nC,EAAWsI,OACzB,IAGIq4B,GAHAoH,EAAezsC,OAAOC,KAAKqH,KAAKjJ,OAAOY,SAASC,OAChDwtC,EAAgB1sC,OAAOC,KAAKqH,KAAKjJ,OAAOme,YAAYtd,OACpDytC,EAAa3sC,OAAOC,KAAKwd,GAAeve,MAE5C,IAAIoI,KAAKjJ,OAAOme,WAAW5X,OAAO,SAAU4wB,GAAK,MAAOA,GAAEoX,mBAAqB1tC,QAC3E,IAAK,GAAIF,GAAI,EAAGe,EAAM4sC,EAAY3tC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAeid,EAAcze,GAC7BqmC,EAAqB/9B,KAAKulC,sBAAsBrsC,EAAcgsC,GACtC,CAyCpB,IAAK,GADDv5B,GAAS3L,KACJwlC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,KAxCjE,SAAUA,EAAiBC,GACrC,GAAIviC,OAAO,EACXA,KACA,KAAK,GAAI8F,GAAc,EAAG08B,EAAQP,EAAcn8B,EAAc08B,EAAO18B,IAGjE9F,EAFYnL,oBAAkBa,YAAU,QAAS+S,EAAO5U,OAAOY,QAAQqR,KACnE2C,EAAO5U,OAAOY,QAAQqR,GAAepQ,YAAU,QAAS+S,EAAO5U,OAAOY,QAAQqR,KACpE,IAGlB,IADA9F,EAAOyI,EAAOg6B,kBAAkBziC,EAAMyI,EAAO5U,OAAOme,WAAWswB,EAAkB,KAC7E75B,EAAO5U,OAAOme,WAAWswB,EAAkB,GAAGF,iBA2B9C,MAAO,UA1BP,IAAIM,EACJV,GAAY7mC,IAAI,SAAUd,EAAG7F,GACzB,GAAI6F,EAAElE,WAAaH,EAAaG,SAE5B,YADAusC,EAAQluC,IAIhB,IAAImuC,GAAeD,EAAQ7H,EAAqByH,EAC5CM,EAAgBtpC,YAAWtD,SACxB4sC,GAAcnsC,mBACdmsC,GAAcn6B,EAAO5U,OAAOkG,cACnCsV,WAAS,aAAcuzB,EAAe5iC,EACtC,IAAI1I,GAAQ5B,YAAU,QAASktC,EAC/BvzB,YAAS,QAAS/X,EAAQ,EAAG0I,EACjBtK,aAAU,QAASktC,EAG/B,IAFAvzB,WAAS,gBAAgB,EAAMrP,GAC/BqP,WAAS,iBAAkBuzB,EAAczsC,SAAU6J,GAC/C+hC,EAAQ,CACR,GAAItrC,GAAef,YAAU,eAAgBM,EACzCS,GAAa/B,QACb+B,EAAad,KAAKqK,GAG1BgiC,EAAYloC,OAAO6oC,EAAc,EAAG3iC,IAQhCsiC,EAEZxlC,MAAKglC,yBAIZ,CACD,GAAI9xB,OAAQ,EACZA,KACA,KAAK,GAAIlK,GAAc,EAAGipB,EAAWkT,EAAcn8B,EAAcipB,EAAUjpB,IAGvEkK,EAFanb,oBAAkBa,YAAU,QAASoH,KAAKjJ,OAAOY,QAAQqR,KAClEhJ,KAAKjJ,OAAOY,QAAQqR,GAAepQ,YAAU,QAASoH,KAAKjJ,OAAOY,QAAQqR,KAC9D,IAEpB,KAAK,GAAIw8B,GAAkB,EAAGO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjFxlC,KAAK2lC,kBAAkBzyB,EAAOlT,KAAKjJ,OAAOme,WAAWswB,EAAkB,IAG/E,MAAON,IAEXJ,EAAU7jC,UAAUskC,sBAAwB,SAAUnoC,EAAYC,GAG9D,IAAK,GADDtE,GACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAK0E,GAAUzF,OAELF,EAAIe,EAAKf,IAIzC,GAHAqB,EAASsE,EAAS3F,GAGd0F,KAFWrF,oBAAkBgB,EAAOI,YAAc,KAClDkE,EAASC,OAAO,SAAUC,GAAK,MAAOA,GAAElE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CAGzB,GAFA2G,KAAKglC,iBAAiBnsC,KAAKE,IACZH,YAAU,kBAAmBG,GAKxC,QAHAiH,MAAKulC,sBAAsBxsC,EAAQsE,GAO/C,MAAO2C,MAAKglC,iBAAiBptC,QAEjCktC,EAAU7jC,UAAU0kC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,GAAIvuC,GAAI,EAAGe,EADUC,OAAOC,KAAKstC,EAAQtuC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,GAHDwuC,GAAgBnuC,oBAAkBkuC,EAAQtuC,QAAQD,GAAG6D,YAAc0qC,EAAQtuC,QAAQD,GAAG4M,MACtF2hC,EAAQtuC,QAAQD,GAAG6D,WAEdiwB,EAAK,EAAG2a,EADNztC,OAAOC,KAAKqtC,GACSxa,EAAK2a,EAAOvuC,OAAQ4zB,IAAM,CACtD,GAAItzB,GAAMiuC,EAAO3a,EACjB,IAAItzB,IAAQguC,EACR,GAAIlmC,KAAKglC,iBAAiBptC,OACtBouC,EAAS9tC,GAAO8H,KAAKomC,iBAAiBH,EAAQtuC,QAAQD,GAAIsI,KAAKglC,sBAE9D,IAAIhlC,KAAKjJ,OAAOigB,YAAa,CAC9B,GAAIrY,GAAOqB,KAAKjJ,OAAOC,qBAAsBC,eAAc+I,KAAKjJ,OAAOC,WAAWA,WAAW6E,KACvFmE,KAAKjJ,OAAOsG,QAClB2oC,GAAS9tC,GAAO8H,KAAKomC,iBAAiBH,EAAQtuC,QAAQD,GAAIiH,IAQ1E,MAAOqnC,IAEXlB,EAAU7jC,UAAUmlC,iBAAmB,SAAUC,EAAe72B,GAC5D,GACI82B,GADAx0B,EAAM,GAAIP,QAEd+0B,KACA,IAAIhtB,MACArW,EAAQlL,oBAAkBsuC,EAAc/hC,WACiBiV,GAAzDvZ,KAAKjJ,OAAO2gB,iBAAiB2uB,EAAc/hC,OAAOrB,IACtDojC,GAActsB,qBAAsBjB,OAAQ9Y,KAAKumC,kBAAkBF,EAAcvtB,OAAQ7V,KACzFojC,EAAcztB,aAAa5Y,KAAKjJ,OAAOiB,KAAKwkB,OAC5C,IAAIxD,GAAWqtB,EAAcjtB,gBAAkB,WAAe,MAAO,UAAU7T,GAAK,MAAOA,MAC3F8gC,GAAchtB,YAAYC,EAC1B,IAAIktB,GAAUH,EAAcvsB,YAAY,EACxChI,GAAIE,QAAUhS,KAAKqV,aACnBvD,EAAI20B,eACJ,IAEIC,GAFAC,EAAU,GAAI1vC,eAAYuY,GAAauD,aAAajB,GACpD/O,EAAQsjC,EAAcpjC,IAE1BF,IAASsjC,EAAcpjC,KACvB,KAAK,GAAIvL,GAAI,EAAGA,EAAIqL,EAAMnL,OAAQF,IAAK,CACnCgvC,EAAa3jC,EAAMrL,EACnB,IAAIQ,GAAMmuC,EAAc/hC,MAAQ,MAAQvB,EAAMrL,GAAGkvC,cAC7CC,EAAmB,WAAb9jC,EAAMrL,GAAkBkB,YAAU,aAAc+tC,GACtDG,qBAAmB/jC,EAAMrL,GAAIivC,EAASN,EAAermC,KAAKjJ,QAC1DgwC,EAAOV,EAAc9qC,WACrByrC,EAAuB,WAAbjkC,EAAMrL,GAAkBmvC,EAAI3uC,GAAO2uC,CACjDP,GAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAM7uC,GAAO8uC,EACpBV,EAAOS,GAAMhkC,EAAMrL,IAAOK,oBAAkB8uC,GAA2B,IAApB7tB,EAASguB,GAEhE1tB,EAAOR,OAASutB,EAAcjtB,cAC9B,IAAI/K,GAAc7E,gBAAc,MAC5BC,UAAW,aAEf,IAAIzJ,KAAKjJ,OAAOqZ,QAAS,CAErBo2B,EAAQ5xB,GAAG0xB,EAAOD,EAAc9qC,YAAayE,KAAKjJ,OAAQyvC,EAAQ3sB,SAAU,GAAI,KAAM,KAAMxL,GAC5FrO,KAAKjJ,OAA2B,2BAGhCgZ,kBAAe1B,EAAam4B,EAAQ5xB,GAAG0xB,EAAOD,EAAc9qC,YAAayE,KAAKjJ,OAAQyvC,EAAQ3sB,UAElG,IAAIvf,GAAQgsC,EAAOD,EAAc9qC,YAAYmrC,EAE7C,QAA8C,IAA1Cr4B,EAAY3D,UAAUhM,QAAQpE,GACf+T,EAAY3D,UAAYpQ,EAIhC+T,EAAY3D,WAG3Bo6B,EAAU7jC,UAAUslC,kBAAoB,SAAUU,EAAehkC,GAC7D,GAAIlL,oBAAkBkL,IAAkC,gBAAlBgkC,GAClC,MAAOA,EAEX,IAAI/sC,EACJ,QAAQ+I,GACJ,IAAK,SACD/I,GAAQ4e,OAAQmuB,EAChB,MACJ,KAAK,WACD/sC,GAAQ+I,KAAM,WAAY8V,SAAUkuB,EACpC,MACJ,KAAK,OACD/sC,GAAQ+I,KAAMA,EAAM8V,SAAUkuB,GAGtC,MAAO/sC,IAOX4qC,EAAU7jC,UAAU+F,QAAU,WAC1BhH,KAAK2H,uBAEFm9B,KCzOPoC,GAAsB,WACtB,QAASA,GAAKlvC,GACVyK,OAAKC,OAAOykC,QACZnnC,KAAKjJ,OAASiB,EACdgI,KAAKyQ,WACLzQ,KAAKonC,kBACLpnC,KAAK2Q,aAAe,EACpB3Q,KAAK5E,iBAAmBrD,oBAAkBiI,KAAKjJ,OAAO+F,iBACtDkD,KAAKqH,mBAyFT,MAnFA6/B,GAAKjmC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXqkC,EAAKjmC,UAAUoG,iBAAmB,WAC9BrH,KAAKjJ,OAAOuQ,GAAG,cAAetH,KAAKqnC,YAAarnC,MAChDA,KAAKjJ,OAAOuQ,GAAG,aAActH,KAAKsnC,qBAAsBtnC,OAK5DknC,EAAKjmC,UAAU0G,oBAAsB,WAC7B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,cAAe7H,KAAKqnC,aACpCrnC,KAAKjJ,OAAO8Q,IAAI,aAAc7H,KAAKsnC,wBAEvCJ,EAAKjmC,UAAUqmC,qBAAuB,SAAUC,GAC5C,GAAI5oC,GAAO4oC,EAAWzrC,aAClB0b,EAAS+vB,EAAW/vB,MACxBxX,MAAKwnC,YAAY7oC,EAAM6Y,GACvBxX,KAAK2Q,aAAe,EACpB42B,EAAWzrC,aAAekE,KAAKonC,eAC/BpnC,KAAKonC,mBAETF,EAAKjmC,UAAUumC,YAAc,SAAU7oC,EAAM6Y,GACzC,IAAK,GAAI7W,GAAI,EAAGA,EAAIhC,EAAK/G,OAAQ+I,IAW7B,GAVIX,KAAKjJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCoI,KAAKjJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAc4G,KAAKjJ,OAAQ4H,EAAKgC,GAAGtH,UAAU,MAChE2G,KAAK2Q,cACL3Q,KAAKonC,eAAepnC,KAAK2Q,aAAehS,EAAKgC,KAIjDX,KAAK2Q,cACL3Q,KAAKonC,eAAepnC,KAAK2Q,aAAehS,EAAKgC,IAE7ChC,EAAKgC,GAAGjH,gBAAiB,CACzB,GAAI+tC,GAAa,GAAIxwC,eAAY0H,EAAKgC,GAAGhH,cAAcoZ,aAAayE,EACpExX,MAAKwnC,YAAYC,EAAWjwB,KAWxC0vB,EAAKjmC,UAAU2b,WAAa,SAAUrhB,EAAYuc,EAAW4E,GACzD1c,KAAKjJ,OAAOiB,KAAK4kB,WAAWrhB,EAAYuc,EAAW4E,IAEvDwqB,EAAKjmC,UAAU6b,iBAAmB,SAAUxY,GACxCtE,KAAKjJ,OAAOiB,KAAK8kB,iBAAiBxY,IAOtC4iC,EAAKjmC,UAAUomC,YAAc,WACzBrnC,KAAKjJ,OAAOkjB,eAAgBxb,aAAcglB,sBAAoBzjB,KAAKjJ,OAAOiB,KAAKyG,gBAAiB,IAMpGyoC,EAAKjmC,UAAU4b,aAAe,WAC1B7c,KAAKjJ,OAAOiB,KAAK6kB,eACjB7c,KAAKqnC,eAOTH,EAAKjmC,UAAU+F,QAAU,WACrBhH,KAAK2H,uBAEFu/B,KCpGPQ,GAA4B,WAI5B,QAASA,GAAW3wC,GAChB0L,OAAKC,OAAOilC,cACZ3nC,KAAKjJ,OAASA,EAelB,MAbA2wC,GAAWzmC,UAAU2mC,cAAgB,WACjC,MAAO5nC,MAAKjJ,OAAOiB,KAAK6vC,iBAAiBD,iBAE7CF,EAAWzmC,UAAU+F,QAAU,aAO/B0gC,EAAWzmC,UAAU4B,cAAgB,WACjC,MAAO,cAEJ6kC,KCpBPI,GAA6B,WAC7B,QAASA,GAAY/wC,GACjB0L,OAAKC,OAAOqlC,eACZ/nC,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBAgET,MA3DAygC,GAAY7mC,UAAUoG,iBAAmB,WACrCrH,KAAKjJ,OAAOuQ,GAAG,kBAAmBtH,KAAKkqB,gBAAiBlqB,MACxDA,KAAKjJ,OAAOuQ,GAAG,mBAAoBtH,KAAKiqB,iBAAkBjqB,OAK9D8nC,EAAY7mC,UAAU0G,oBAAsB,WACpC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,kBAAmB7H,KAAKkqB,iBACxClqB,KAAKjJ,OAAO8Q,IAAI,mBAAoB7H,KAAKiqB,oBAE7C6d,EAAY7mC,UAAUipB,gBAAkB,SAAUlnB,GAC9C,GAAIglC,GAASthC,SAAO,IAAM1G,KAAKjJ,OAAOmZ,QAAQC,GAAK,4BAA6BnN,EAAKkN,SACjF+3B,EAAavhC,SAAO,IAAM1G,KAAKjJ,OAAOmZ,QAAQC,GAAK,0BAA2BnN,EAAKkN,QACnF83B,MACkD,IAA9ChoC,KAAKjJ,OAAOiB,KAAKiE,aAAa+kB,YAC9BgnB,EAAOptC,MAAMG,QAAU,OAGvBitC,EAAOptC,MAAMG,QAAU,SAGQ,SAAlCiF,KAAKjJ,OAAOkF,aAAaC,MAAqD,UAAlC8D,KAAKjJ,OAAOkF,aAAaC,MACjEnE,oBAAkBkwC,IAAkBA,EAAWziC,UAAUC,SAAS,iBACvEwiC,EAAWrtC,MAAMG,QAAU,SAGnC+sC,EAAY7mC,UAAUgpB,iBAAmB,SAAUjnB,GAC1B,UAAjBA,EAAKE,KAAKiN,IAAmC,UAAjBnN,EAAKE,KAAKiN,KACtCnQ,KAAKjJ,OAAOsY,OAAO,0BAA2BrM,GAC9ChD,KAAKjJ,OAAOkjB,eAAgBhe,cAAgBQ,eAAgBuG,EAAKE,KAAKiN,MAAQ,GAC9EnQ,KAAKjJ,OAAOo2B,cAOpB2a,EAAY7mC,UAAU4B,cAAgB,WAClC,MAAO,eAOXilC,EAAY7mC,UAAU+F,QAAU,WAC5BhH,KAAK2H,uBAMTmgC,EAAY7mC,UAAUmjB,eAAiB,WACnC,MAAOpkB,MAAKjJ,OAAOiB,KAAK0wB,kBAAkBtE,kBAEvC0jB,KChEPI,GAA2B,WAC3B,QAASA,GAAUnxC,GACfiJ,KAAKmoC,gBAAkB,EACvBnoC,KAAKuQ,aAAe,eACpBvQ,KAAK0a,eAAiB,iBACtB1a,KAAKooC,qBACLpoC,KAAKqoC,uBACLroC,KAAKsoC,qBACLtoC,KAAKjJ,OAASA,EACdiJ,KAAK5E,iBAAmBrD,oBAAkBhB,EAAO+F,iBACjDkD,KAAKuoC,gBACLvoC,KAAKtC,sBACLsC,KAAKwoC,OAAQ,EACbxoC,KAAKqH,mBAugBT,MArgBA6gC,GAAUjnC,UAAUoG,iBAAmB,WACnCrH,KAAKjJ,OAAOuQ,G3B6CG,Y2B7CkBtH,KAAK8oB,UAAW9oB,MACjDA,KAAKjJ,OAAOuQ,G3BoDE,W2BpDkBtH,KAAKgpB,SAAUhpB,MAC/CA,KAAKjJ,OAAOuQ,G3BuDQ,iB2BvDkBtH,KAAKkpB,eAAgBlpB,MAC3DA,KAAKjJ,OAAOuQ,G3B0DG,Y2B1DkBtH,KAAKyoC,UAAWzoC,MACjDA,KAAKjJ,OAAOuQ,G3BmDW,oB2BnDkBtH,KAAKopB,kBAAmBppB,MACjEA,KAAKjJ,OAAOuQ,G3BsDS,kB2BtDkBtH,KAAKipB,gBAAiBjpB,MAC7DA,KAAKjJ,OAAOuQ,GAAG,kBAAmBtH,KAAK0oC,gBAAiB1oC,MACxDA,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAK2oC,kBAAmB3oC,OAKhEkoC,EAAUjnC,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,I3B6BG,Y2B7BmB7H,KAAK8oB,WACvC9oB,KAAKjJ,OAAO8Q,I3BoCE,W2BpCmB7H,KAAKgpB,UACtChpB,KAAKjJ,OAAO8Q,I3B2CG,Y2B3CmB7H,KAAKyoC,WACvCzoC,KAAKjJ,OAAO8Q,I3BsCQ,iB2BtCmB7H,KAAKkpB,gBAC5ClpB,KAAKjJ,OAAO8Q,I3BmCW,oB2BnCmB7H,KAAKopB,mBAC/CppB,KAAKjJ,OAAO8Q,I3BsCS,kB2BtCmB7H,KAAKipB,iBAC7CjpB,KAAKjJ,OAAO8Q,IAAI,kBAAmB7H,KAAK0oC,iBACxC1oC,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAK2oC,qBAO9CT,EAAUjnC,UAAU+F,QAAU,WAC1BhH,KAAK2H,uBAKTugC,EAAUjnC,UAAU2nC,gBAAkB,WAClC,MAAO5oC,MAAKuoC,cAKhBL,EAAUjnC,UAAU4nC,eAAiB,WACjC,MAAO7oC,MAAK3E,aAKhB6sC,EAAUjnC,UAAU6nC,iBAAmB,WACnC,MAAO9oC,MAAK1E,eAKhB4sC,EAAUjnC,UAAU8nC,mBAAqB,WACrC,MAAO/oC,MAAKmoC,iBAEhBD,EAAUjnC,UAAUynC,gBAAkB,WAClC,GAGInuC,GAHAoE,EAAQqB,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eAC/C+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,WAC/Du3B,EAAavuB,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,EAE5D,KAAK5D,oBAAkBiI,KAAKooC,oBAAsBpoC,KAAKooC,kBAAkBxwC,OACrE,IAAK,GAAIF,GAAI,EAAGA,EAAIsI,KAAKooC,kBAAkBxwC,OAAQF,IAC/C6C,EAAQoE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEgxB,KAAgB7vB,QAAQsB,KAAKooC,kBAAkB1wC,GAAG62B,IAC3F5vB,EAAK3B,OAAOzC,EAAO,EAG3ByF,MAAKooC,kBAAoBpoC,KAAKuoC,aAAevoC,KAAKsoC,kBAAoBtoC,KAAKqoC,oBAAsBroC,KAAKtC,uBAE1GwqC,EAAUjnC,UAAU6nB,UAAY,SAAU9lB,GACtC,GAAIgmC,GAAkBhmC,EAAKzD,KAAKmf,UAC5BuqB,EAAajpC,KAAKjJ,OAAO2I,eAAiBM,KAAKjJ,OAAOoI,kBAS1D,IARI8pC,GAAcjmC,EAAKkmC,aAAa3uC,MAAQ0uC,IACxCD,GAAoCC,GAEpCD,IAAoBhpC,KAAKjJ,OAAO0I,iBAChCO,KAAKjJ,OAAOsI,aAAaC,YAAaX,KAAMqE,EAAK4F,QAASrJ,KAAMyD,EAAKzD,KACjEI,OAAQK,KAAKjJ,OAAOiB,KAAKmxC,iBAAiBnmC,EAAKzD,KAAKmf,aAGxD1e,KAAKwoC,OAA2C,UAAlCxoC,KAAKjJ,OAAOkF,aAAaC,MAAgE,WAA5C8D,KAAKjJ,OAAOkF,aAAaQ,eAA6B,CACjH,GAAIkC,GAAQqB,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eAC/C+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,WAC/DoyC,MAAQ,GAGRC,EAAerpC,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,GAC1D2tC,MAAmB,GACnBpwC,MAAe,GACfqwC,MAAa,EAIjBrwC,GAAe8G,KAAK1E,eAAiB,EAAI0E,KAAKuoC,aAAavoC,KAAK3E,aAAuB,WAAI,IAC3F,IAAI0B,OAAY,GACZyB,MAAiB,GACjB1B,MAAkB,GAClB0sC,EAA6D,QAA5CxpC,KAAKjJ,OAAOkF,aAAaQ,iBAAoD,IAAxBuD,KAAK1E,cAAuB,EACtD,UAA5C0E,KAAKjJ,OAAOkF,aAAaQ,eAA6BuD,KAAK3E,YACrD2E,KAAK3E,YAAc,CAE7B,IADAmuC,EAAiBxpC,KAAKypC,wBAAwBD,GAC1CxpC,KAAK0pC,iBAAkB,CAcvB,GAbI1pC,KAAKuoC,aAAa3wC,SAClBmF,EAAYiD,KAAKuoC,aAAavoC,KAAK3E,aAAa2E,KAAKjJ,OAAOgG,WAC5DD,EAAkBkD,KAAKuoC,aAAavoC,KAAK3E,aAAa2E,KAAKjJ,OAAO+F,iBAC9DkD,KAAKuoC,aAAavoC,KAAK3E,aAAuB,aAC9CmD,EAAiBwB,KAAKuoC,aAAavoC,KAAK3E,aAAuB,WAAU,WAGjF2E,KAAKooC,kBAAoBpuC,EAAYgG,KAAKooC,mBAC1CpoC,KAAKsoC,kBAAoBtuC,EAAYgG,KAAKsoC,mBAC1CtoC,KAAKsoC,kBAAkBzvC,KAAKmH,KAAKuoC,aAAavoC,KAAK3E,cACnD+tC,EAAQppC,KAAKjJ,OAAOiB,KAAKgd,gBAAgBw0B,GAAgBG,QACzDP,EAAM/vC,SAAWma,SAAOxT,KAAKjJ,OAAOmZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwB62B,EAAM/vC,SAAU+vC,EAAOppC,KAAKjJ,SACxDqyC,EAAMxsC,eAAe,SAAU,CAEhC,GADAoD,KAAK4pC,YAAqC,IAAxB5pC,KAAK1E,cAAuB,EAAI0E,KAAK4pC,WACP,UAA5C5pC,KAAKjJ,OAAOkF,aAAaQ,gBAEzB,GADA2sC,EAAMS,cAAgB3wC,EAClB8G,KAAK1E,eAAiB,EAAG,CACzB8tC,EAAMjwC,WAAaqD,YAAWwD,KAAKuoC,aAAavoC,KAAK3E,cACrD+tC,EAAM5qC,eAAiB4qC,EAAMjwC,WAAWE,eACjC+vC,GAAMjwC,WAAWQ,mBACjByvC,GAAMjwC,WAAW6G,KAAKjJ,OAAOkG,cACpCmsC,EAAM5uC,MAAQ4uC,EAAMjwC,WAAWqB,MAAQ,EACvC4uC,EAAM7uC,MAAQyF,KAAK4pC,UACnB,IAAIE,GAAmBrwC,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAczD,OAC5EmB,EAASU,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAcyuC,EAAmB,EACzF/wC,GAAShB,oBAAkBgB,GAAUiH,KAAKuoC,aAAavoC,KAAK3E,aAAetC,EAC3EuwC,EAAmB3qC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE8rC,KAAkB3qC,QAAQ3F,EAAOswC,IACjFrpC,KAAK5E,kBACLguC,EAAMppC,KAAKjJ,OAAO+F,iBAAmBC,GAEzCG,EAAgBmsC,EAAcD,EAAMjwC,WAAY,MAAO6G,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBguC,QAG7F,KAAiD,UAA5CppC,KAAKjJ,OAAOkF,aAAaQ,gBAA0E,UAA5CuD,KAAKjJ,OAAOkF,aAAaQ,kBAClF1E,oBAAkBiI,KAAKuoC,aAAavoC,KAAK3E,cAAe,CAS5D,GARA+tC,EAAM5uC,MAAQwF,KAAKuoC,aAAavoC,KAAK3E,aAAkB,MACnD+tC,EAAM5uC,OAASwF,KAAK1E,eAAiB,IACrC8tC,EAAMjwC,WAAaD,EACnBkwC,EAAM5qC,eAAiBA,QAChB4qC,GAAMjwC,WAAWQ,mBACjByvC,GAAMjwC,WAAW6G,KAAKjJ,OAAOkG,eAExCmsC,EAAM7uC,MAAoD,UAA5CyF,KAAKjJ,OAAOkF,aAAaQ,eAA6BuD,KAAK4pC,WAAa5pC,KAAK4pC,WAAa,EACxD,UAA5C5pC,KAAKjJ,OAAOkF,aAAaQ,gBAA8BuD,KAAK1E,eAAiB,EAAG,CAChF,GAAIwuC,GAAmBrwC,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAczD,OAC5EmB,EAASU,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAcyuC,EAAmB,EACzF/wC,GAAShB,oBAAkBgB,GAAUiH,KAAKuoC,aAAavoC,KAAK3E,aAAetC,EAC3EuwC,EAAmB3qC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE8rC,KAAkB3qC,QAAQ3F,EAAOswC,IAEzF,GAAgD,UAA5CrpC,KAAKjJ,OAAOkF,aAAaQ,gBAA8BuD,KAAK1E,eAAiB,EAAG,CAC5EvC,EAASiH,KAAKuoC,aAAavoC,KAAK3E,YACpCiuC,GAAmB3qC,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAE8rC,KAAkB3qC,QAAQ3F,EAAOswC,IAErFrpC,KAAK5E,kBACLguC,EAAMppC,KAAKjJ,OAAO+F,iBAAmBA,GAG7CssC,EAAM7uC,OAAyB,IAAjB6uC,EAAM7uC,MAAe,EAAI6uC,EAAM7uC,MAC7C6uC,EAAM1vC,iBAAkB,EACxB0vC,EAAMzvC,gBACNqG,KAAKuoC,aAAavrC,OAAOosC,EAAM7uC,MAAO,EAAG6uC,GACzCppC,KAAKtC,mBAAmBV,OAAOosC,EAAM7uC,MAAO,EAAG6uC,GAE3CG,EADAD,GAIaF,EAAM7uC,MAEyB,UAA5CyF,KAAKjJ,OAAOkF,aAAaQ,iBACzB8sC,EAA6B,IAAhBH,EAAM7uC,MAAcgvC,EAAaA,EAAa,GAE/D5qC,EAAK3B,OAAOusC,EAAY,EAAGH,GAC3BppC,KAAKooC,kBAAkBvvC,KAAKuwC,GAEhCppC,KAAKjJ,OAAOiB,KAAKgd,gBAAgBw0B,GAAgB7qC,KAAOyqC,EACxDppC,KAAK0pC,kBAAmB,GAExB1pC,KAAKjJ,OAAO2I,eAAiBM,KAAKjJ,OAAOoI,oBACoB,QAA1Da,KAAKjJ,OAAOiB,KAAKgd,gBAAgBw0B,GAAgBtpC,OACpDM,QAAMR,KAAKtC,mBAAmB8rC,GAAiBxpC,KAAKjJ,OAAOiB,KAAKgd,gBAAgBw0B,GAAgBG,WAI5GzB,EAAUjnC,UAAUioB,eAAiB,SAAU3rB,GAE3C,GAAsC,SAAlCyC,KAAKjJ,OAAOkF,aAAaC,MAAmB8D,KAAKjJ,OAAOoF,WAAuB,aAG/E,MAFAoB,GAAE6I,QAAS,OACXpG,KAAKjJ,OAAOoF,WAAuB,cAAI,EAG3C6D,MAAK1E,cAAgB0E,KAAKjJ,OAAOiB,KAAKmsB,iBACtCnkB,KAAK3E,YAAc2E,KAAKjJ,OAAOiB,KAAKmsB,kBAAoB,EAAInkB,KAAKjJ,OAAOiB,KAAKmsB,iBAAmB,EAChGnkB,KAAKxE,aAAewE,KAAKjJ,OAAO8O,qBAAqB,IAEzDqiC,EAAUjnC,UAAU+nB,SAAW,SAAUzrB,GACrC,GAAgD,WAA5CyC,KAAKjJ,OAAOkF,aAAaQ,eAA6B,CACtDuD,KAAKwoC,OAAQ,EACbxoC,KAAK0pC,kBAAmB,CACxB,IAAI1M,GAAc,CAMlB,IALKh9B,KAAKuoC,aAAa3wC,SACnBoI,KAAKooC,qBACLpoC,KAAKuoC,aAAevuC,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,yBACjDqC,KAAKtC,mBAAqB1D,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,0BAEX,QAA5CqC,KAAKjJ,OAAOkF,aAAaQ,eAA0B,CACnD,GAAIlE,GAAUyH,KAAKjJ,OAAOiB,KAAK2F,uBACO,WAAlCqC,KAAKjJ,OAAOkF,aAAaC,OAAqB8D,KAAKjJ,OAAOqF,kBAAkB4D,KAAKuQ,cAAc3Y,OAAS,GACrGoI,KAAKjJ,OAAOqF,kBAAkB4D,KAAK0a,gBAAgB9iB,UACtDW,EAAUyH,KAAKuoC,cAEnBvoC,KAAK+pC,iBAAiBxxC,GACtByH,KAAKjJ,OAAOsY,O3BhLN,e2BiLNrP,KAAKmoC,gBAAkB,EAE3BnoC,KAAKgqC,gBAEL,IAAIC,GAAc1rC,WAAS,cAAeyB,KAAKjJ,OAAOiB,MAClDkyC,EAAQlqC,KAAKjJ,OAAOgd,iBACpB/T,MAAKjJ,OAAOqF,kBAAkB4D,KAAK0a,gBAAgB9iB,QAAsD,UAA5CoI,KAAKjJ,OAAOkF,aAAaQ,gBACtFugC,EAAcz/B,EAAEsB,IAAIiI,SACpBmjC,EAAYra,aAAaua,OAAOA,OAASnqC,KAAKmqC,QAG9CnN,EAAckN,EAAMh2B,uBAAuB,cAAc,GAAGpN,SAKhEmjC,EAAYra,aAAaua,OAAO9F,SAAWrH,EAAaiN,EAAYra,aAAaua,OAAO9F,QAAQ,MAGxG6D,EAAUjnC,UAAUmoB,kBAAoB,SAAU7rB,GACzCyC,KAAKuoC,aAAa3wC,SACnBoI,KAAKuoC,aAAevuC,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,yBACjDqC,KAAKtC,mBAAqB1D,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,yBAE3D,IAAIssC,GAAc1rC,WAAS,cAAeyB,KAAKjJ,OAAOiB,KACtDgI,MAAKmqC,OAASF,EAAYra,aAAaua,OAAOA,OAC9CnqC,KAAKjJ,OAASiJ,KAAKjJ,MACnB,IACIwB,GACAoG,EAFAE,KAGAurC,EAAapqC,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,GAExD0uC,EAAS5wC,EADbkF,EAAOqB,KAAKjJ,OAAOiB,KAAK6N,qBAAqB7F,KAAKjJ,OAAOiB,KAAK6N,qBAAqBjO,OAAS,GAE5F,IAAIyyC,EAAOzyC,OACP,IAASF,EAAI,EAAGA,EAAI2yC,EAAOzyC,OAAQF,IAAK,CACpC,GAAI6C,GAAQyF,KAAKjJ,OAAOiB,KAAKgH,wBAAwBqrC,EAAO3yC,GAAG0yC,GAC/DvrC,GAAIhG,KAAKmH,KAAKjJ,OAAOiB,KAAK+G,UAAUxE,KAChCyF,KAAKjJ,OAAOmI,YAAcc,KAAKjJ,OAAO2I,eAAiBM,KAAKjJ,OAAOoI,qBACnEN,EAAIhG,KAAKmH,KAAKjJ,OAAOiB,KAAKu6B,iBAAiBh4B,IAIvD,IAAKxC,oBAAkB4G,EAAKxF,YAAa,CACrC,GAAIA,GAAaC,EAAc4G,KAAKjJ,OAAQ4H,EAAKxF,WAAWE,SAC5D,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAI2kC,GAAallC,EAAWQ,aAAa+E,QAAQC,EACjDxF,GAAWQ,aAAaqD,OAAOqhC,EAAY,GAE/Cr+B,KAAKqoC,oBAAsBruC,EAAYgG,KAAKqoC,qBAC5CroC,KAAKqoC,oBAAoBxvC,KAAK8F,GAElC0rC,EAAOxxC,KAAK8F,GACZpG,EAAU8xC,CACV,KAAS3yC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,GAAI6xC,GAAavpC,KAAKuoC,aAAalqC,IAAI,SAAUd,GAAK,MAAOA,GAAE6sC,KAAgB1rC,QAAQnG,EAAQb,GAAG0yC,KAC9E,IAAhBb,GACAvpC,KAAKuoC,aAAavrC,OAAOusC,EAAY,GAG7C,IAAK,GAAI7xC,GAAI,EAAGA,EAAImH,EAAIjH,OAAQF,IACvBK,oBAAkB8G,EAAInH,KACvBsI,KAAKjJ,OAAOiB,KAAKirB,gBAAgBqnB,gBAAgBzxC,KAAKgG,EAAInH,KAItEwwC,EAAUjnC,UAAU+oC,eAAiB,WAEjC,IAAK,GADD9kC,GAAOlF,KAAKjJ,OAAOiB,KAAK+3B,cACnBr4B,EAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAC7BwN,EAAKxN,GAAGyS,aAAa,gBAAiBzS,EAAEsN,WAE5C,IAAIhF,KAAKjJ,OAAOmI,YAAcc,KAAKjJ,OAAOoI,oBAAsBa,KAAKjJ,OAAO2I,cAExE,IAAK,GADD6qC,GAAQvqC,KAAKjJ,OAAOiB,KAAKsU,qBACpB5U,EAAI,EAAGA,EAAI6yC,EAAM3yC,OAAQF,IAC9B6yC,EAAM7yC,GAAGyS,aAAa,gBAAiBzS,EAAEsN,aAIrDkjC,EAAUjnC,UAAU8oC,iBAAmB,SAAUxxC,GAK7C,IAAK,GAJDg2B,GAAavuB,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,GAGxDxC,EAAyD,UAA5C6G,KAAKjJ,OAAOkF,aAAaQ,eAA6B,gBAAkB,aAChF/E,EAAI,EAAGA,EAAIsI,KAAKjJ,OAAOqF,kBAA8B,aAAExE,OAAQF,IAC/DK,oBAAkBiI,KAAKjJ,OAAOqF,kBAA8B,aAAE1E,GAAGyB,KAC9D6G,KAAKjJ,OAAOqF,kBAA8B,aAAE1E,GAAGyB,GAAYo1B,KAAgBh2B,EAAQyH,KAAK3E,aAAakzB,KACrGvuB,KAAKmoC,gBAAkBnoC,KAAKmoC,gBAAkB,IAK9DD,EAAUjnC,UAAUgoB,gBAAkB,SAAU1rB,GAC5C,GAEIkd,GAAiBld,EAAE9B,aAA0B,cACjD,IAAI8B,EAAE9B,aAA0B,eAAE7D,OAE9B,IAASF,EAAI,EAAGA,EAAI+iB,EAAe7iB,OAAQF,IACvCuD,GAAaX,MAAOmgB,EAAe/iB,GAAIgE,OAAQ,QAAUsE,KAAKjJ,OAAQiJ,KAAK5E,gBAAiB4E,KAAK3E,YAAa2E,KAAK1E,kBAFtG,GAKrB,IAAIiC,EAAE9B,aAA0B,eAAE7D,OAG9B,IAAK,GADDmB,GADiBwE,EAAE9B,aAA0B,eAExC/D,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpCsI,KAAKwqC,eAAezxC,EAAOrB,GAAG2B,SAE9B,KAAK,GADDgxC,GAAS5wC,EAAoBV,EAAOrB,IAC/B6J,EAAI,EAAGA,EAAI8oC,EAAOzyC,OAAQ2J,IAC/BvB,KAAKwqC,eAAeH,EAAO9oC,GAAGlI,SAElCkE,GAAE9B,aAA0B,eAAI8B,EAAE9B,aAA0B,eAAE7B,OAAOywC,GAG7ErqC,KAAKwoC,OAAQ,GAEjBN,EAAUjnC,UAAUupC,eAAiB,SAAUlwC,SAEpC0F,MAAKjJ,OAAe,yBAAEuD,SAEtB0F,MAAKjJ,OAAS,mBAAEuD,IAE3B4tC,EAAUjnC,UAAU0nC,kBAAoB,WACpC,GACIpuC,GAGAmD,EAAqBsC,KAAKjJ,OAAOiB,KAAK2F,wBAEtCgB,EAAQqB,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eAC/C+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,WAC/Du3B,EAAavuB,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,EAC5D,KAAK5D,oBAAkBiI,KAAKjJ,OAAoB,eAAI,CAChD,GAAI8H,GAAMmB,KAAKjJ,OAAoB,cAAEmR,QAAQ,KAC7ClI,MAAKjJ,OAAOmnB,YAAYrf,GACxBmB,KAAKjJ,OAAoB,cAAI,KAEjC,IAAKgB,oBAAkBiI,KAAKooC,mBACxB,IAAS1wC,EAAI,EAAGA,EAAIsI,KAAKooC,kBAAkBxwC,OAAQF,IAG/C,GAFA6C,EAAQoE,EAAKN,IAAI,SAAUd,GAAK,MAAOA,GAAEgxB,KAAgB7vB,QAAQsB,KAAKooC,kBAAkB1wC,GAAG62B,IAC3F5vB,EAAK3B,OAAOzC,EAAO,GAC6B,UAA5CyF,KAAKjJ,OAAOkF,aAAaQ,iBACzBlC,EAAQmD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEgxB,KAClD7vB,QAAQsB,KAAKooC,kBAAkB1wC,GAAa,WAAIsI,KAAKooC,kBAAkB1wC,GAAa,WAAE62B,GACrFvuB,KAAKooC,kBAAkB1wC,GAAG62B,KAC3Bx2B,oBAAkB2F,EAAmBnD,KAEtC,IAAK,GADDyV,GAAWtS,EAAmBnD,GAAmB,aAC5CH,EAAI,EAAG4V,GAAY5V,EAAI4V,EAASpY,OAAQwC,IACzC4V,EAAS5V,GAAGm0B,KAAgBvuB,KAAKooC,kBAAkB1wC,GAAG62B,IACtD7wB,EAAmBnD,GAAmB,aAAEyC,OAAO5C,EAAG,EAO1E,KAAKrC,oBAAkBiI,KAAKqoC,qBACxB,IAAK,GAAI3wC,GAAI,EAAGA,EAAIsI,KAAKqoC,oBAAoBzwC,OAAQF,IACjD,IAAKK,oBAAkBiI,KAAKqoC,oBAAoB3wC,GAAa,YAAI,CAC7D6C,EAAQmD,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEgxB,KAClD7vB,QAAQsB,KAAKqoC,oBAAoB3wC,GAAa,WAAE62B,GACrD,IAAIkc,GAA4D,IAA5CzqC,KAAKqoC,oBAAoB3wC,GAAa,MAAUsI,KAAKqoC,oBAAoB3wC,GAAa,MACtGsI,KAAKqoC,oBAAoB3wC,GAAa,MAAI,CACzCK,qBAAkB2F,EAAmBnD,KACtCmD,EAAmBnD,GAAmB,aAAEyC,OAAOytC,EAAe,EAAGzqC,KAAKqoC,oBAAoB3wC,IAK1GsI,KAAKooC,kBAAoBpoC,KAAKuoC,aAAevoC,KAAKsoC,kBAAoBtoC,KAAKtC,sBAC3EsC,KAAKuoC,aAAevuC,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,yBACjDqC,KAAK4pC,WAAa,EAClB5pC,KAAKtC,mBAAqB1D,EAAYgG,KAAKjJ,OAAOiB,KAAK2F,yBACvDqC,KAAKqoC,uBACLroC,KAAKjJ,OAAOiB,KAAKqH,aAAa+sB,WAElC8b,EAAUjnC,UAAUwnC,UAAY,SAAUzlC,GACtC,GAAsC,UAAlChD,KAAKjJ,OAAOkF,aAAaC,KAAkB,CAC3C,GAAIxE,OAAI,GACJ+D,EAAeuE,KAAKjJ,OAAOqF,kBAK3BuC,EAAQqB,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eAC/C+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,WAC/D0G,EAAqBsC,KAAKjJ,OAAOiB,KAAK2F,wBACtC+sC,EAAe1qC,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,GAE1DgvC,EAAalvC,EAAyB,aAEtCH,MAAgB,GAChBD,MAAc,GAEdG,MAAe,EAKnB,IAHImvC,EAAW/yC,OAAS,GAAiD,WAA5CoI,KAAKjJ,OAAOkF,aAAaQ,gBAClDkuC,EAAWC,UAEiC,WAA5C5qC,KAAKjJ,OAAOkF,aAAaQ,eAEzB,GADAkC,EAAK3B,OAAO2B,EAAK/G,OAAS+yC,EAAW/yC,OAAQ+yC,EAAW/yC,QACnDoI,KAAKjJ,OAAOgX,YAKZ,CACD,GAAI88B,GAAe7wC,EAAY2E,GAC3ByyB,EAAayZ,EAAaxsC,IAAI,SAAUd,GAAK,MAAOA,GAAEmtC,KACrDhsC,QAAQhB,EAAmB,GAAGgtC,IAC/BI,EAAW1Z,EAAapxB,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,QAC1D1mC,GAAqBmtC,EAAa7tC,OAAOo0B,EAAY0Z,OATjDptC,GAAmB9F,OAAS+yC,EAAW/yC,QACvC8F,EAAmBV,OAAOU,EAAmB9F,OAAS+yC,EAAW/yC,OAAQ+yC,EAAW/yC,OAWhG,KAAKF,EAAI,EAAGA,EAAIizC,EAAW/yC,OAAQF,IAAK,CACpC,GAAIiF,GAAWH,YAAWmuC,EAAWjzC,GAgCrC,UA/BOiF,GAASxD,iBACTwD,GAAStD,eACTsD,GAASpC,YACToC,GAASnC,YACTmC,GAASjD,sBACTiD,GAAShD,mBACTgD,GAAS6B,eACXzG,oBAAkB4E,EAASktC,sBACrBltC,GAASktC,cAEpBc,EAAWjzC,GAAGiF,SAAWA,EACzBnB,EAAewE,KAAKsoC,kBAAkB5wC,GAClCK,oBAAkByD,KAClBA,EAAewE,KAAKsoC,kBAAkB5wC,EAAI,IAE1CsI,KAAK5E,kBACArD,oBAAkB4yC,EAAWjzC,GAAGyB,aACjC+D,EAAgBwtC,EAAcC,EAAWjzC,GAAGyB,WAAY,MAAO6G,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBuvC,EAAWjzC,KAGhHK,oBAAkByD,KACnBH,EAAcG,EAAajB,OAEiB,QAA5CyF,KAAKjJ,OAAOkF,aAAaQ,gBAAwE,WAA5CuD,KAAKjJ,OAAOkF,aAAaQ,gBAC1E1E,oBAAkB4yC,EAAWjzC,GAAGyB,cAAuC,IAAxB6G,KAAK1E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaX,MAAOqwC,EAAWjzC,GAAIgE,OAAQ,OAASsE,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBC,EAAaC,MApDvF,GAoDkHE,GAC/HF,EAAgB,KACgC,UAA5C0E,KAAKjJ,OAAOkF,aAAaQ,iBAA+B1E,oBAAkB4yC,EAAWjzC,GAAa,YAIlG,IAAK,GAHDqzC,GAAartC,EAAmBW,IAAI,SAAUd,GAAK,MAAOA,GAAEmtC,KAC3DhsC,QAAQisC,EAAWjzC,GAAa,WAAEgzC,IACnC16B,EAAWtS,EAAmBqtC,GAAwB,aACjD3wC,EAAI,EAAGA,EAAI4V,EAASpY,OAAQwC,IAC7B4V,EAAS5V,GAAGswC,KAAkBC,EAAWjzC,GAAGgzC,IAC5ChtC,EAAmBqtC,GAAwB,aAAE/tC,OAAO5C,EAAG,GAKvE,GAAIqB,EAA2B,eAAE7D,OAC7B,IAAKF,EAAI,EAAGA,EAAI+D,EAA2B,eAAE7D,OAAQF,IACjDuD,GAAaX,MAAOmB,EAA2B,eAAE/D,GAAIgE,OAAQ,UAAYsE,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBC,EAAaC,MAnEhH,GAmE2IE,EAG5JwE,MAAKjJ,OAAOqG,aACZ,KAAK,GAAI61B,GAAM,EAAGA,EAAMt0B,EAAK/G,OAAQq7B,IACjCt0B,EAAKs0B,GAAU,MAAIA,EACnB1gB,WAAS,sBAAwB5T,EAAKs0B,GAAa,SAAI,SAAUA,EAAKjzB,KAAKjJ,QACtE4H,EAAKs0B,GAAU,OAChBjzB,KAAKjJ,OAAOqG,WAAWvE,KAAK8F,EAAKs0B,IAI7CjzB,KAAKsoC,kBAAoBtoC,KAAKooC,kBAAoBpoC,KAAKuoC,aAAevoC,KAAKqoC,oBAAsBroC,KAAKtC,uBAE1GwqC,EAAUjnC,UAAUwoC,wBAA0B,SAAUlvC,GACpD,GAAI2K,GAAOlF,KAAKjJ,OAAOiB,KAAK+3B,aAyB5B,QAxBiD,UAA5C/vB,KAAKjJ,OAAOkF,aAAaQ,gBAA0E,UAA5CuD,KAAKjJ,OAAOkF,aAAaQ,iBAC9EuD,KAAK1E,eAAiB,KACpBvD,oBAAkBiI,KAAKuoC,aAAavoC,KAAK3E,eAAiB2E,KAAKuoC,aAAavoC,KAAK3E,aAAa7B,WAC3FwG,KAAKjJ,OAAOqF,kBAAkB4D,KAAKuQ,cAAc3Y,OAAS,GACvDoI,KAAKjJ,OAAOqF,kBAAkB4D,KAAK0a,gBAAgB9iB,QACtD2C,GAASd,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAczD,OAClB,UAA5CoI,KAAKjJ,OAAOkF,aAAaQ,iBAEzBlC,GADsByF,KAAK+oC,uBAK/BxuC,GAASd,EAAoBuG,KAAKuoC,aAAavoC,KAAK3E,cAAczD,QAGtE2C,GAAS2K,EAAKtN,SACd2C,EAAQ2K,EAAKtN,OAAS,GAE1BoI,KAAK+pC,iBAAiB/pC,KAAKjJ,OAAOiB,KAAK2F,yBACnCqC,KAAKmoC,kBACL5tC,GAASyF,KAAKmoC,iBAElBnoC,KAAKmoC,gBAAkB,GAEpB5tC,GAEJ2tC,KCjhBP8C,GAAsB,WAItB,QAASA,GAAKj0C,GACViJ,KAAKuQ,aAAe,eACpBvQ,KAAK0a,eAAiB,iBACtB1a,KAAKirC,iBAAmB,KACxBxoC,OAAKC,OAAOwoC,QACZlrC,KAAKjJ,OAASA,EACdiJ,KAAK5E,iBAAmBrD,oBAAkBhB,EAAO+F,iBACjDkD,KAAKmrC,uBAAyB,KAC9BnrC,KAAKorC,sBACLprC,KAAKqrC,gBAAkB,GAAInD,IAAUloC,KAAKjJ,QAC1CiJ,KAAKqH,mBAgxBT,MA1wBA2jC,GAAK/pC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXmoC,EAAK/pC,UAAUoG,iBAAmB,WAC9BrH,KAAKjJ,OAAOuQ,G5BqBI,a4BrBkBtH,KAAKsrC,WAAYtrC,MACnDA,KAAKjJ,OAAOuQ,G5BsBG,Y4BtBkBtH,KAAK2nB,UAAW3nB,MACjDA,KAAKjJ,OAAOuQ,G5BuBE,W4BvBkBtH,KAAKurC,SAAUvrC,MAC/CA,KAAKjJ,OAAOuQ,G5BwBW,oB4BxBkBtH,KAAKqlB,kBAAmBrlB,MACjEA,KAAKjJ,OAAOuQ,G5ByBE,W4BzBkBtH,KAAKmoB,SAAUnoB,MAC/CA,KAAKjJ,OAAOuQ,G5BgCK,c4BhCkBtH,KAAKqpB,YAAarpB,MACrDA,KAAKjJ,OAAOiB,KAAKsP,G5B2CD,c4B3CuBtH,KAAKwrC,WAAYxrC,MACxDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,iBAAkBtH,KAAKyrC,YAAazrC,MACxDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,gBAAiBtH,KAAK0rC,aAAc1rC,MACxDA,KAAKjJ,OAAOuQ,G5BwBE,W4BxBkBtH,KAAKkoB,SAAUloB,MAC/CA,KAAKjJ,OAAOuQ,GAAG,cAAetH,KAAK2rC,iBAAkB3rC,MACrDA,KAAKjJ,OAAOuQ,GAAG,iBAAkBtH,KAAK2rC,iBAAkB3rC,MACxDA,KAAKjJ,OAAOiB,KAAKsP,G5ByCF,a4BzCuBtH,KAAKqlB,kBAAmBrlB,MAC9DA,KAAKjJ,OAAOiB,KAAKsP,GAAG,WAAYtH,KAAK4rC,aAAc5rC,MACnDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,cAAetH,KAAK6rC,eAAgB7rC,MACxDA,KAAKjJ,OAAOuQ,GAAG,0BAA2BtH,KAAK8rC,wBAAyB9rC,MAExEA,KAAKjJ,OAAOiB,KAAKsP,G5B8CI,Y4B9CuBtH,KAAK+rC,gBAAiB/rC,MAClEA,KAAKjJ,OAAOiB,KAAKsP,G5B+CM,sB4B/CuBtH,KAAKgsC,kBAAmBhsC,MACtEA,KAAKjJ,OAAOiB,KAAKsP,GAAG,mBAAoBtH,KAAKisC,eAAgBjsC,MAC7DA,KAAKjJ,OAAOiB,KAAKsP,GAAG,mBAAoBtH,KAAKksC,eAAgBlsC,OAEjEgrC,EAAK/pC,UAAU2qC,aAAe,SAAUruC,GACpCyC,KAAKmsC,kBAAoB5uC,EAAE8D,QAE/B2pC,EAAK/pC,UAAUirC,eAAiB,SAAUE,GACtCA,EAAQ3vC,eAAiBuD,KAAKjJ,OAAOkF,aAAaQ,eAClD2vC,EAAQ/wC,YAAc2E,KAAK3E,YAC3B+wC,EAAQC,cAAgBrsC,KAAKirC,kBAEjCD,EAAK/pC,UAAU8qC,gBAAkB,SAAU/oC,GACvChD,KAAKjJ,OAAOsP,Q5B1DK,c4B0DuBrD,IAE5CgoC,EAAK/pC,UAAU+qC,kBAAoB,SAAUhpC,GACH,SAAlChD,KAAKjJ,OAAOkF,aAAaC,MACzB8D,KAAKjJ,OAAOsP,Q5B1DI,iB4B0D2BrD,IAMnDgoC,EAAK/pC,UAAU0G,oBAAsB,WAC7B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,I5BxBI,a4BwBmB7H,KAAKsrC,YACxCtrC,KAAKjJ,OAAO8Q,I5BvBG,Y4BuBmB7H,KAAK2nB,WACvC3nB,KAAKjJ,OAAO8Q,I5BtBE,W4BsBmB7H,KAAKurC,UACtCvrC,KAAKjJ,OAAO8Q,I5BrBW,oB4BqBmB7H,KAAKqlB,mBAC/CrlB,KAAKjJ,OAAO8Q,I5BZK,c4BYmB7H,KAAKqpB,aACzCrpB,KAAKjJ,OAAOiB,KAAK6P,I5BDD,c4BCwB7H,KAAKwrC,YAC7CxrC,KAAKjJ,OAAOiB,KAAK6P,IAAI,iBAAkB7H,KAAKyrC,aAC5CzrC,KAAKjJ,OAAOiB,KAAK6P,IAAI,gBAAiB7H,KAAK0rC,cAC3C1rC,KAAKjJ,OAAO8Q,I5BpBE,W4BoBmB7H,KAAKkoB,UACtCloB,KAAKjJ,OAAO8Q,IAAI,cAAe7H,KAAK2rC,kBACpC3rC,KAAKjJ,OAAO8Q,IAAI,iBAAkB7H,KAAK2rC,kBACvC3rC,KAAKjJ,OAAOiB,KAAK6P,IAAI,cAAe7H,KAAK6rC,gBACzC7rC,KAAKjJ,OAAOiB,KAAK6P,I5BJF,a4BIwB7H,KAAKqlB,mBAC5CrlB,KAAKjJ,OAAO8Q,IAAI,0BAA2B7H,KAAK8rC,yBAChD9rC,KAAKjJ,OAAOiB,KAAK6P,I5BII,Y4BJwB7H,KAAK+rC,iBAClD/rC,KAAKjJ,OAAOiB,KAAK6P,I5BKM,sB4BLwB7H,KAAKgsC,mBACpDhsC,KAAKjJ,OAAOiB,KAAK6P,IAAI,WAAY7H,KAAK4rC,cACtC5rC,KAAKjJ,OAAOiB,KAAK6P,IAAI,mBAAoB7H,KAAKisC,gBAC9CjsC,KAAKjJ,OAAOiB,KAAK6P,IAAI,mBAAoB7H,KAAKksC,kBAQlDlB,EAAK/pC,UAAU+F,QAAU,WACrBhH,KAAK2H,uBAKTqjC,EAAK/pC,UAAUqrC,oBAAsB,SAAUlc,GAC3CpwB,KAAKjJ,OAAOiB,KAAKmE,WAAWmwC,oBAAoBlc,IAEpD4a,EAAK/pC,UAAU0qC,iBAAmB,SAAU3oC,GACxC,GAAIupC,GAAY3zC,YAAU,aAAcoK,GACpCod,EAAYxnB,YAAU,OAAQ2zC,GAC9BC,EAAUxsC,KAAKjJ,OACfG,EAAUs1C,EAAQx1C,WAAWE,OACjC,KAAKJ,EAAa01C,IAAYt1C,YAAmB2oB,uBAClB,SAA1B0sB,EAAU1sC,aAA+C,QAArB0sC,EAAU7wC,SACN,UAAxC8wC,EAAQvwC,aAAaQ,gBAAsE,UAAxC+vC,EAAQvwC,aAAaQ,gBAC1B,UAAxC+vC,EAAQvwC,aAAaQ,gBAC5B,GAAkB,gBAAd2jB,EAA6B,CAC7B,GAAItZ,GAAW/O,oBAAkBw0C,EAAU1tC,OAASnG,OAAOC,KAAK4zC,EAAU1tC,KAAKjH,OAASoI,KAAK1E,cACzFixC,EAAU1tC,IAAIiI,SAAW,EACzB2lC,EAAY10C,oBAAkB+O,KAA2B,IAAdA,GACwC,EAAnF0lC,EAAQ7uC,wBAAwBmJ,GAAU0lC,EAAQ7wC,0BAA0B,GAChF6wC,GAAQx0C,KAAKsZ,MAAMM,UAAU,gBAAiB66B,OAE7C,IAAkB,mBAAdrsB,EAEL,IAAK,GADDssB,GAAeF,EAAQx0C,KAAKsZ,MAAMG,OAAO7Z,OACpCF,EAAI,EAAGA,EAAIg1C,EAAch1C,IACW,kBAArC80C,EAAQx0C,KAAKsZ,MAAMG,OAAO/Z,GAAGQ,KAC7Bs0C,EAAQx0C,KAAKsZ,MAAMG,OAAOzU,OAAOtF,EAKX,WAAlCsI,KAAKjJ,OAAOkF,aAAaC,MAA8C,WAA1BqwC,EAAU1sC,aACvDG,KAAKjJ,OAAOsY,OAAO,uBAG3B27B,EAAK/pC,UAAUokB,kBAAoB,SAAUriB,GACzC,GAAI3B,GAAS2B,EAAK3B,MAClB,KAAItJ,oBAAkBsJ,EAAO6G,QAAQ,iBAArC,CAGA,GAAIvI,GAASK,KAAKjJ,OAAOiB,KAAKmxC,kBAAkB9nC,EAAO6G,QAAQ,gBAAgBmB,aAAa,iBAC5F,IAAsC,SAAlCrJ,KAAKjJ,OAAOkF,aAAaC,OAAoB8D,KAAK2sC,WAAahtC,IAAWA,EAAOitC,cACjFjtC,EAAOM,eAAkBoB,EAAOmE,UAAUC,SAAS,sBACnDpE,EAAOmE,UAAUC,SAAS,uBAA0BzF,KAAKjJ,OAAOkF,aAAawuB,oBAAqB,CAGlG,GAFAzqB,KAAK2sC,WAAY,EACjB3sC,KAAKjJ,OAAOiB,KAAKiiB,eAAgBkK,iBAAkBnhB,EAAK8D,WAAY,GAChE9G,KAAKjJ,OAAOuH,qBAAsB,CAClC,GAAI8N,GAAKpE,eAAahF,EAAK3B,OAAQ,QACnCrB,MAAKirC,iBAAmB7+B,EAAG/C,aAAa,iBACxC+C,EAAGjC,aAAa,gBAAiBiC,EAAGtF,SAAW,IAEnD9G,KAAK6sC,mBAAmB,YAGhC7B,EAAK/pC,UAAU4rC,mBAAqB,SAAU3wC,GAC1C8D,KAAKjJ,OAAOiB,KAAKiiB,eAAgBhe,cAAgBC,KAAMA,KAAU,GAC9CtD,YAAU,gBAAiBoH,KAAKjJ,OAAOiB,KAAKmE,YAClD6F,MAAMhC,KAAKjJ,OAAOiB,KAAKmE,YACpC6D,KAAKjJ,OAAOiB,KAAKsyB,QAAS,GAE9B0gB,EAAK/pC,UAAUgrC,eAAiB,WACxBjsC,KAAKjJ,OAAOuH,sBAA0D,SAAlC0B,KAAKjJ,OAAOkF,aAAaC,OAC7D8D,KAAK2sC,WAAY,EACjB3sC,KAAK6sC,mBAAmB,YAGhC7B,EAAK/pC,UAAUuqC,WAAa,SAAUxoC,IAC9BhD,KAAK2sC,WAAgD,SAAlC3sC,KAAKjJ,OAAOkF,aAAaC,MAAmB6O,cAAc/K,KAAKjJ,OAAOid,oBACzFhU,KAAK8sC,SAAW9pC,EAAKtH,QAEL,OAAhBsH,EAAKtH,QACLsE,KAAKqlB,kBAAkBriB,IAG/BgoC,EAAK/pC,UAAUupC,eAAiB,SAAUlwC,SAE/B0F,MAAKjJ,OAAe,yBAAEuD,SAEtB0F,MAAKjJ,OAAS,mBAAEuD,IAE3B0wC,EAAK/pC,UAAUinB,SAAW,SAAUllB,GAChC,GAAIyB,GAAQzE,KAER+sC,EAAO/pC,EAAY,OAoBvB,UAnBOA,GAAY,QACfhD,KAAKjJ,OAAOuH,uBAAyBvG,oBAAkBiI,KAAKirC,oBAC5DjoC,EAAKnE,IAAIsL,aAAa,gBAAiBnK,KAAKirC,kBAC5CjrC,KAAKirC,qBAAmB1xB,IAEN,UAAlBvZ,KAAK8sC,UACL9sC,KAAKjJ,OAAOsP,Q5BnIF,W4BmI2BrD,EAAM,SAAUgqC,GAC5CA,EAAa5mC,QAA6C,SAAnC3B,EAAM1N,OAAOkF,aAAaC,KAG7C8wC,EAAa5mC,QAA6C,SAAnC3B,EAAM1N,OAAOkF,aAAaC,OACtDuI,EAAMkoC,WAAY,EAClBloC,EAAMooC,mBAAmB,WAJzBpoC,EAAMmpB,mBAAmB,QAMxB71B,oBAAkBg1C,IACnBA,EAAKrlB,QAAQslB,KAIrBhtC,KAAKmsC,oBAAsBnsC,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,qBACrEzF,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,uBAAyBzF,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,kBAG7G,MAFAzC,GAAKoD,QAAS,OACdpG,KAAKmsC,kBAAoB,KAGS,UAAlCnsC,KAAKjJ,OAAOkF,aAAaC,OACH,QAAlB8D,KAAK8sC,UAAwC,aAAlB9sC,KAAK8sC,SAChC9sC,KAAK8sC,SAAW,KAEO,UAAlB9sC,KAAK8sC,WACV9pC,EAAKoD,QAAS,EACdpG,KAAK8sC,SAAW,QAO5B9B,EAAK/pC,UAAU2sB,mBAAqB,SAAUqf,GAC1C,IAAKl1C,oBAAkBiI,KAAKjJ,OAAOiB,KAAK81B,eAAgB,CACpD,GAAIof,GAAYltC,KAAKjJ,OAAOmZ,QAAQC,GAAK,eACzCnQ,MAAKjJ,OAAOiB,KAAK81B,cAAcC,aAAamf,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GjtC,KAAKjJ,OAAOiB,KAAK81B,cAAcC,aAAamf,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjGjC,EAAK/pC,UAAUooB,YAAc,SAAU9rB,GACnC,GAAsC,SAAlCyC,KAAKjJ,OAAOkF,aAAaC,KAAiB,CAC1C,GAAIixC,GAAc5uC,WAAS,yBAA0ByB,KAAKjJ,OAAOiB,KAAKmE,YAClEixC,EAAWptC,KAAKjJ,OAAO63B,iBAAiBue,EAAYrmC,SAAU9G,KAAKjJ,OAAO0I,gBAC9EO,MAAKjJ,OAAOsI,aAAaC,YACrBX,KAAMwuC,EAAYvkC,QAClBrJ,KAAM6tC,EACNztC,OAAQK,KAAKjJ,OAAOiB,KAAK4H,aAAaI,KAAKjJ,OAAO0I,mBAEtDO,KAAK6sC,mBAAmB,UACxB7sC,KAAK2sC,WAAY,EAEiB,UAAlC3sC,KAAKjJ,OAAOkF,aAAaC,MACzB8D,KAAKjJ,OAAOsY,OAAO,yBAG3B27B,EAAK/pC,UAAU4qC,eAAiB,SAAU7oC,GAClCxL,EAAgBwI,KAAKjJ,SAA6C,SAAlCiJ,KAAKjJ,OAAOkF,aAAaC,MAAmC,SAAhB8G,EAAKtH,SACjFsE,KAAKstB,WAAWtqB,EAAMA,EAAK8D,UAC3B9G,KAAKqtC,cAAcrqC,EAAMA,EAAKnE,IAAKmE,EAAK8D,YAGhDkkC,EAAK/pC,UAAUknB,SAAW,SAAUnlB,GAChC,GAAIyB,GAAQzE,IACZ,IAAsC,SAAlCA,KAAKjJ,OAAOkF,aAAaC,MAAmB8D,KAAKjJ,OAAOmZ,QAAQjI,cAAc,QAAS,CACvFjF,EAAKoD,QAAS,CAEdmM,YAAS,UAAU,EAAOvS,KAAKjJ,OAAOiB,MACtCua,WAAS,kBAAkB,EAAMvS,KAAKjJ,QACtCiM,EAAK4F,QAAQ5F,EAAKzH,YAAcyH,EAAK1I,KACrC,IAAIgzC,EAEAA,GADAv1C,oBAAkBiL,EAAKzD,MACfS,KAAKjJ,OAAOiB,KAAKmE,WAAqB,WAAEoxC,KAAKjvB,cAAc4c,WAG3Dl4B,EAAKzD,KAAK27B,UAEtB,IAAIsS,GACAC,EAAgBztC,KAAKjJ,OAAO4E,yBAC5B5D,qBAAkBu1C,GAClBttC,KAAKjJ,OAAOiB,KAAK2F,wBAAwBL,OAAO,SAAUC,EAAG7F,GACzD,GAAI6F,EAAEkwC,EAAc,MAAQzqC,EAAK4F,QAAQ6kC,EAAc,IAEnD,YADAD,EAAa91C,KAMrB81C,GAAwD,IAA1CxtC,KAAKjJ,OAAOgI,UAAUL,QAAQ4uC,IAAkBttC,KAAKjJ,OAAOoI,mBAAqB,EAC3Fa,KAAKjJ,OAAOiB,KAAKu6B,iBAAiB7zB,QAAQ4uC,GAASttC,KAAKjJ,OAAOgI,UAAUL,QAAQ4uC,EAEzF,IAAI3a,KAMJ,IALAn2B,SAAOm2B,EAAK3vB,GACZ2vB,EAAIvsB,QAAS,EACbusB,EAAI1vB,KAAO,OACXqqC,EAAQttC,KAAKjJ,OAAOiB,KAAK+G,UAAUuuC,EAAMxmC,UACzC9G,KAAKjJ,OAAOsP,Q5B9RC,c4B8R2BssB,GACnCA,EAAIvsB,OAiCLpG,KAAKjJ,OAAOiB,KAAKsyB,QAAS,MA5B1B,IAJKgjB,EAAMxmC,WAAa9G,KAAKjJ,OAAO4G,wBAAwB/F,OAAS,GAAwB,QAAlBoI,KAAK8sC,WAC5E9sC,KAAK0tC,cAAe,GAExB1tC,KAAK2tC,gBAAgB3qC,GAChBlM,EAAakJ,KAAKjJ,SACjBiJ,KAAKjJ,OAAOC,qBAAsBC,gBAAe+I,KAAKjJ,OAAOC,WAAWE,kBAAmB2oB,sBAa5F,GAAI/oB,EAAakJ,KAAKjJ,SACtBiJ,KAAKjJ,OAAOC,qBAAsBC,gBAAe+I,KAAKjJ,OAAOC,WAAWE,kBAAmB2oB,qBAAoB,CAChH,GAAIvO,GAAQtR,KAAKjJ,OAAOiB,KAAKsZ,KAClBtR,MAAKjJ,OAAOiB,KAAKhB,WAAW42C,OAAOH,EAAc,GAAIzqC,EAAK4F,QAAS0I,EAAMu8B,UAAWv8B,EAAOtO,EAAK8qC,eACtG57B,KAAK,SAAU3U,GACXxF,oBAAkBwF,KACnByF,EAAK4F,QAAQ5F,EAAKzH,YAAcgC,EAAEyF,EAAKzH,aAE3CkJ,EAAM6oB,WAAWtqB,EAAMwqC,GACvB/oC,EAAM4oC,cAAcrqC,EAAMsqC,EAAOE,UArBrC,IAAIh2C,EAAgBwI,KAAKjJ,QAAS,CAC9B,GACIg3C,IAAaluC,YAAa,OAAQlB,KAAMqE,EAAK4F,QAASlN,OAAQ,OAAQmD,IAAKyuC,EAC3ExmC,SAAU0mC,EAAY5kC,QAAS5F,EAAK4F,QAASrN,WAAYyH,EAAKzH,WAC9DyyC,kBAAmB,KAAMC,oBAAqB,KAClDjuC,MAAKjJ,OAAOiB,KAAKyc,gBAA4B,aAAEs5B,EAAU/tC,KAAKjJ,OAAOiB,KAAKsZ,WAG1EtR,MAAKstB,WAAWtqB,EAAMwqC,GACtBxtC,KAAKqtC,cAAcrqC,EAAMsqC,EAAOE,KAqBpDxC,EAAK/pC,UAAUosC,cAAgB,SAAUrqC,EAAMnE,EAAKiI,GAChD,GAAIonC,EACAluC,MAAKjJ,OAAOiB,KAAKm2C,iBACjBnuC,KAAKjJ,OAAOiB,KAAKm2C,gBAAgB/hB,QAAQppB,EAAK4F,SAElD5I,KAAKjJ,OAAOiB,KAAKmE,WAAWiyC,gBAAgBpuC,KAAKjJ,OAAOiB,KAAK0f,iBAAiB1U,EAAKzH,cACnFyE,KAAKjJ,OAAOiB,KAAKmE,WAAWkyC,QAAQrnC,UACd,QAAlBhH,KAAK8sC,UAAwC,aAAlB9sC,KAAK8sC,WAChC9sC,KAAK6sC,mBAAmB,UACxB7sC,KAAK2sC,WAAY,GAErB3sC,KAAK4tB,mBAAmB,QACpB5tB,KAAKjJ,OAAOoI,mBAAqB,IACjC+uC,EAAOluC,KAAKjJ,OAAOiB,KAAKu6B,iBAAiBzrB,GACzCwD,eAAa4jC,IAAQ,cAAe,eACpC5jC,cAAY4jC,EAAKvoC,iBAAiB,eAAgB,oBAAqB,iBAE3E2E,eAAazL,IAAO,cAAe,eACnCyL,cAAYzL,EAAI8G,iBAAiB,eAAgB,oBAAqB,gBACtE3F,KAAKjJ,OAAOiB,KAAKiyC,YAAYqE,eAC7BrzC,GAAaX,MAAO0I,EAAK4F,QAASlN,OAAQ,QAAUsE,KAAKjJ,OAAQiJ,KAAK5E,gBAAiB4E,KAAK3E,YAAa2E,KAAK1E,cAAe0H,EAAKzH,YAC7HsD,EAAIiI,WAAa9G,KAAKjJ,OAAO4G,wBAAwB/F,OAAS,GAAwB,UAAlBoI,KAAK8sC,WAC1E9sC,KAAK8sC,SAAW,KAEpB,IAAIyB,IACAtrC,KAAM,OAAQtD,OAAQK,KAAKjJ,OAAO2gB,iBAAiB1U,EAAKzH,YAAaoD,KAAMqE,EAAK4F,QAChF4lC,aAAcxrC,EAAK8qC,cAAejvC,IAAKA,EAAKwC,OAAQ2B,EAAKzD,KAE7DS,MAAKjJ,OAAOsP,Q5B5VQ,iB4B4VuBkoC,IAE/CvD,EAAK/pC,UAAUwqC,YAAc,SAAU4C,IAC9BruC,KAAKjJ,OAAOiB,KAAKsyB,QAAUtqB,KAAK2sC,WAA+B,QAAlB3sC,KAAK8sC,UAAwD,SAAlC9sC,KAAKjJ,OAAOkF,aAAaC,OAClG8D,KAAK6sC,mBAAmB,UACxB7sC,KAAK2sC,WAAY,EACjB3sC,KAAK8sC,SAAW,OAGxB9B,EAAK/pC,UAAU0sC,gBAAkB,SAAU3qC,GACvC,GAAI+H,cAAc/K,KAAKjJ,OAAOid,iBAK1B,IAAK,GAJDoc,GAAOpwB,KAAKjJ,OAAOiB,KAAK4H,aAExBsf,EAAclf,KAAKjJ,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAI04B,EAAKx4B,OAAQF,IAAK,CAClC,GAAIwnB,EAAYxnB,GAAGkY,SAAU,CACzB,GAAI6+B,GAAazuC,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAKigB,EAAK14B,GAAGwR,GACvDgW,GAAYxnB,GAAGg3C,oBAAoBlyC,UAASjC,OAAU7C,IAAMsL,EAAK4F,SAAU5I,KAAKjJ,OAAOiB,KAAM,WAAYy2C,EAAYzuC,KAAKjJ,OAAOiB,KAAQ,iBAAG,MAE5Io4B,EAAK14B,GAAGi3C,cACRC,uBAAqB5uC,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAKigB,EAAK14B,GAAGwR,IAAM,eAAgB,eAAgBknB,EAAK14B,IAEtG04B,EAAK14B,GAAGkY,UACRg/B,uBAAqB5uC,KAAKjJ,OAAOiB,KAAKkY,QAAQC,GAAKigB,EAAK14B,GAAGwR,IAAK,WAAYknB,EAAK14B,IAAI,KAKrGszC,EAAK/pC,UAAUqsB,WAAa,SAAUtqB,EAAM8D,GACxC9G,KAAKjJ,OAAOiB,KAAKmE,WAAWoxB,UAAUzmB,EAAU9D,EAAK4F,SACrD5I,KAAKjJ,OAAOiB,KAAKgd,gBAAgBlO,GAAUnI,KAAOqE,EAAK4F,SAE3DoiC,EAAK/pC,UAAUqqC,WAAa,SAAUpwC,EAASK,GAC3CN,EAAWC,EAAS8E,KAAKjJ,OAAQiJ,KAAK5E,gBAAiB4E,KAAK3E,YAAa2E,KAAK1E,cAAeC,EAAYyE,KAAKxE,cAC9GwE,KAAKjJ,OAAOqG,aAGZ,KAAK,GAFDuB,GAAOqB,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eAC9C+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIiH,EAAK/G,OAAQF,IAAK,CAClCiH,EAAKjH,GAAG6C,MAAQ7C,CAChB,IAAIQ,GAAM8H,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,EACjDT,GAAQZ,MAAMpC,KAASyG,EAAKjH,GAAGQ,IACR,QAAnBgD,EAAQQ,SACRiD,EAAKjH,GAAG8C,MAAQwF,KAAKorC,mBAAmB5wC,MACxCmE,EAAKjH,GAAGiF,SAAWqD,KAAKorC,mBAAmBzuC,SAC3CgC,EAAKjH,GAAG2B,SAAW2G,KAAKorC,mBAAmB/xC,SACtCtB,oBAAkBiI,KAAKorC,mBAAmBjyC,cAC3CwF,EAAKjH,GAAGyB,WAAa6G,KAAKorC,mBAAmBjyC,WAC7CwF,EAAKjH,GAAG8G,eAAiBwB,KAAKorC,mBAAmB5sC,gBAErDG,EAAKjH,GAAGiC,aAAeqG,KAAKorC,mBAAmBzxC,cAGvD4Y,WAAS,sBAAwB5T,EAAKjH,GAAG2B,SAAW,SAAU3B,EAAGsI,KAAKjJ,QACjE4H,EAAKjH,GAAG8C,OACTwF,KAAKjJ,OAAOqG,WAAWvE,KAAK8F,EAAKjH,IAGlB,QAAnBwD,EAAQQ,QAAmD,MAA/BsE,KAAKmrC,yBACjCnrC,KAAKjJ,OAAOkjB,eAAgBhe,cAAgBQ,eAAgBuD,KAAKmrC,0BAA4B,GAC7FnrC,KAAKmrC,uBAAyB,OAGtCH,EAAK/pC,UAAU4tC,YAAc,SAAUlwC,EAAMuG,EAAM3M,GAC/C,IAAK,GAAI6B,GAAI,EAAGA,EAAI4F,KAAKjJ,OAAOg5B,cAAcn4B,OAAQwC,IAAK,CACvD,GAAI00C,GAAQv2C,EAAQ6B,GAChBG,EAAQgE,WAAS,sBAAwBuwC,EAAMz1C,SAAW,SAAU2G,KAAKjJ,OAE7E,IADA+3C,EAAMv0C,MAAQA,GACTxC,oBAAkB+2C,EAAM31C,YAAa,CACtC,GAAIslC,GAAclgC,WAAS,sBAAwBuwC,EAAM31C,WAAWE,SAAW,SAAU2G,KAAKjJ,OAC9F+3C,GAAM31C,WAAWoB,MAAQkkC,GAIjC,IAAK,GADDlzB,IAAS,EACJ7O,EAAI,EAAGA,EAAIsD,KAAKjJ,OAAOgI,UAAUnH,OAAQ8E,IAAK,CAC9CwI,EAAKxI,GAAG8I,UAAUC,SAAS,gBAC5B8F,GAEJ,IAAIwjC,GAAQx2C,EAAQgT,GAChBhR,EAAQw0C,EAAMx0C,MACdC,EAAQu0C,EAAMv0C,MACdqE,EAAMqG,EAAKxI,EACV3E,qBAAkBg3C,EAAM51C,cACzBoB,EAAQgE,WAAS,sBAAwBwwC,EAAM51C,WAAWE,SAAW,SAAU2G,KAAKjJ,QAExF,IAAIi4C,GAAWnwC,EAAIW,MAAMQ,KAAKjJ,OAAO0I,gBACrC,KAAK1H,oBAAkBi3C,GAAW,CAC9B,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAASxpC,UAAU5N,OAAQq3C,IAAK,CAChD,GAAI30C,GAAQ00C,EAASxpC,UAAUypC,GAG3B5+B,EAAS/V,EAAMkM,MAFN,mBAGT0Q,EAAU5c,EAAMkM,MAFN,wBAGA,OAAV6J,GACA/F,eAAa0kC,GAAW10C,GAEb,MAAX4c,GACA5M,eAAa0kC,GAAW10C,GAG3B4K,EAAKxI,GAAG8I,UAAUC,SAAS,eAI5B6H,YAAU0hC,GAAW,uBAAyBz0C,EAAQ,QAAUC,GAHhE8S,YAAU0hC,GAAW,iBAAmBz0C,EAAQ,QAAUC,MAQ1EwwC,EAAK/pC,UAAUsqC,SAAW,SAAUvoC,GAChC,GAAIoqB,GACA7yB,EAAQyF,KAAK3E,YACb9C,EAAUyH,KAAKjJ,OAAOiB,KAAK2F,uBACO,WAAlCqC,KAAKjJ,OAAOkF,aAAaC,OACzB3B,EAAQyF,KAAKqrC,gBAAgBxC,iBAC7B7oC,KAAK1E,cAAgB0E,KAAKqrC,gBAAgBvC,oBACtC9oC,KAAKjJ,OAAOqF,kBAAkB4D,KAAKuQ,cAAc3Y,OAAS,GACvDoI,KAAKjJ,OAAOqF,kBAAkB4D,KAAK0a,gBAAgB9iB,UACtDW,EAAUyH,KAAKqrC,gBAAgBzC,mBAGvC,IAAI1jC,GAAOlF,KAAKjJ,OAAOiB,KAAK+3B,cACxBmf,EAAiBhqC,EAAKtN,QAAUsN,EAAK,GAAGmE,aAAa,iBAAmB,EACxE8lC,EAAgBjqC,EAAKtN,QAAUsN,EAAKA,EAAKtN,OAAS,GAAGyR,aAAa,iBAAmB,EACrF+lC,EAAcpvC,KAAK1E,eAAiB4zC,GAAkBlvC,KAAK1E,eAAiB6zC,EAC5EE,EAAmBrvC,KAAKjJ,OAAOuH,sBAAwB0B,KAAK3E,aAAe,GAA+B,OAA1B2E,KAAKirC,gBACzF,IAAsC,WAAlCjrC,KAAKjJ,OAAOkF,aAAaC,OACuB,UAA5C8D,KAAKjJ,OAAOkF,aAAaQ,eACzB2wB,EAAW,UAEuC,UAA5CptB,KAAKjJ,OAAOkF,aAAaQ,gBAA0E,UAA5CuD,KAAKjJ,OAAOkF,aAAaQ,kBAClFuD,KAAK1E,eAAiB,GAAK+zC,IAAqBD,IACpDhiB,EAAW,SACNr1B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,WACf,UAAlCwG,KAAKjJ,OAAOkF,aAAaC,OAAqB8D,KAAKjJ,OAAOqF,kBAAkB4D,KAAKuQ,cAAc3Y,OAAS,GACrGoI,KAAKjJ,OAAOqF,kBAAkB4D,KAAK0a,gBAAgB9iB,SACtD2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CoI,KAAKjJ,OAAOkF,aAAaQ,iBAEzBlC,GADsByF,KAAKqrC,gBAAgBtC,uBAK/CxuC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,UAIpDoI,KAAK1E,eAAiB,GAAK+zC,IAAqBD,IAC7C70C,GAAsD,UAA5CyF,KAAKjJ,OAAOkF,aAAaQ,gBACY,UAA5CuD,KAAKjJ,OAAOkF,aAAaQ,iBAA8B,CAC1DlC,GAAS2K,EAAKtN,SACd2C,EAAQ2K,EAAKtN,OAAS,EAE1B,IAAI6J,GAAI,OACJ6tC,EAAetvC,KAAKjJ,OAAOiB,KAAK4d,cAAcnU,GAAG,GACjD8tC,EAAkBrX,SAASsX,aAC/BtqC,GAAK3K,EAAQ,GAAG6yB,GAAUloB,EAAK,IAC/BqN,WAAS,aAAchY,EAAQ,EAAGyF,KAAKqrC,gBACvC,IAAI7B,GAA6D,UAA5CxpC,KAAKjJ,OAAOkF,aAAaQ,eAA6BlC,EAAQA,EAAQ,CAG3F,IAFAyF,KAAKjJ,OAAOiB,KAAK4d,cAAcnU,GAAGzE,OAAO,EAAG,GAC5CgD,KAAKjJ,OAAOiB,KAAK4d,cAAcnU,GAAGzE,OAAOwsC,EAAgB,EAAG8F,GACxDtvC,KAAKjJ,OAAOmI,YAAcc,KAAKjJ,OAAOoI,oBAAsBa,KAAKjJ,OAAO2I,cAAe,CACvF,GAAI2yB,GAAcryB,KAAKjJ,OAAOuV,qBAE1BmjC,EAAqBzvC,KAAKjJ,OAAOiB,KAAKgd,gBAAgB,EAC1Dqd,GAAY93B,EAAQ,GAAG6yB,GAAUiF,EAAY,IAC7CryB,KAAKjJ,OAAOiB,KAAK4d,cAAmB,WAAE5Y,OAAO,EAAG,GAChDgD,KAAKjJ,OAAOiB,KAAK4d,cAAmB,WAAE5Y,OAAOwsC,EAAgB,EAAGiG,GAChEl9B,WAAS,aAAchY,EAAQ,EAAGyF,KAAKqrC,iBAE3C,GAAsC,QAAlCrrC,KAAKjJ,OAAOkF,aAAaC,MAAoD,SAAlC8D,KAAKjJ,OAAOkF,aAAaC,KAAiB,CAErF,IAAK,GADDwzC,GAAS1vC,KAAKjJ,OAAOiB,KAAK+b,kBAAkBpO,iBAAiB,gBACxDjO,EAAI,EAAGA,EAAIg4C,EAAO93C,OAAQF,IAC/Bg4C,EAAOh4C,GAAG8pB,QAEdjP,YAAS,gBAAkBvS,KAAKjJ,OAAOiB,KAAKmE,WAAWkyC,SAEvDgB,IACArvC,KAAKirC,iBAAmB,MAE5BsE,EAAgBI,UAsB5B3E,EAAK/pC,UAAU0mB,UAAY,SAAU3kB,GACjC,GAAyB,YAArBA,EAAKnD,aAA6BG,KAAK2sC,UAEvC,YADA3pC,EAAKoD,QAAS,EAGlB,IAAsC,SAAlCpG,KAAKjJ,OAAOkF,aAAaC,MAAwC,cAArB8G,EAAKnD,YAEjD,YADAmD,EAAKoD,QAAS,EAGlB,IAAIpG,KAAKmsC,oBAAsBnsC,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,qBACrEzF,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,uBAAyBzF,KAAKmsC,kBAAkB3mC,UAAUC,SAAS,YAG7G,MAFAzC,GAAKoD,QAAS,OACdpG,KAAKmsC,kBAAoB,KAG7B,IAAyB,WAArBnpC,EAAKnD,YAEL,IAAK,GADDlB,GAAOqE,EAAKrE,KACPjH,EAAI,EAAGA,EAAIiH,EAAK/G,OAAQF,IAAK,CAClCsI,KAAKwqC,eAAe7rC,EAAKjH,GAAG2B,SAE5B,KAAK,GADDgxC,GAAS5wC,EAAoBkF,EAAKjH,IAC7B6J,EAAI,EAAGA,EAAI8oC,EAAOzyC,OAAQ2J,IAC/BvB,KAAKwqC,eAAeH,EAAO9oC,GAAGlI,SAElC2J,GAAKrE,KAAOA,EAAK/E,OAAOywC,GAGhC,GAAyB,QAArBrnC,EAAKnD,YAAuB,CAE5B,GADAG,KAAK1E,cAAgB0E,KAAKjJ,OAAOiB,KAAKmsB,iBAClCnkB,KAAKjJ,OAAOuH,qBAAsB,CAClC,GAAIsxC,GAAW,yBAA2B5vC,KAAK1E,cAAgB,KAC3DuD,MAAM,EACNmB,MAAK1E,eAAiB,GAAiD,QAA5C0E,KAAKjJ,OAAOkF,aAAaQ,gBACR,WAA5CuD,KAAKjJ,OAAOkF,aAAaQ,gBACzBuD,KAAKirC,iBAAmBjrC,KAAK1E,cAAc0J,WAC3CnG,EAAMmB,KAAKjJ,OAAO64B,aAAa3nB,cAAc2nC,GAC7C5vC,KAAK3E,YAAcwD,EAAMA,EAAIiI,SAAW,GAGpC9G,KAAKirC,kBAA8C,OAA1BjrC,KAAKirC,kBAC9B2E,EAAW,yBAA2B5vC,KAAKirC,iBAAmB,KAC9DpsC,EAAMmB,KAAKjJ,OAAO64B,aAAa3nB,cAAc2nC,GAC7C5vC,KAAK3E,YAAcwD,EAAMA,EAAIiI,SAAW,GAGxC9G,KAAK3E,YAAc,MAK3B2E,MAAK3E,YAAc2E,KAAKjJ,OAAOiB,KAAKmsB,kBAAoB,EAAInkB,KAAKjJ,OAAOiB,KAAKmsB,iBAAmB,CAEpGnkB,MAAKxE,aAAewE,KAAKjJ,OAAO8O,qBAAqB,GAEzD7C,EAAOhD,KAAK6vC,aAAa7sC,IAU7BgoC,EAAK/pC,UAAU6qC,wBAA0B,SAAU9oC,GACX,OAAhChD,KAAKmrC,yBACLnrC,KAAKmrC,uBAAyBnrC,KAAKjJ,OAAOkF,aAAaQ,iBAG/DuuC,EAAK/pC,UAAU4uC,aAAe,SAAU7sC,GACpC,GAAI1I,GAAQ0I,EAAKrE,IACjB,IAAoB,QAAhBqE,EAAKtH,OAAkB,CACvB,GAAIxD,GAAM8H,KAAKjJ,OAAOiB,KAAK2D,0BAA0B,GACjDyxB,EAAW,IACf9yB,GAAMqC,SAAW5E,oBAAkBuC,EAAMqC,UAAYH,YAAWwG,EAAKrE,MAAQrE,EAAMqC,QAGnF,IAAI0Z,GAAcrW,KAAKjJ,OAAOiB,KAAK2F,wBAC/BpD,EAAQyF,KAAK3E,WACjBf,GAAMjB,SAAWma,SAAOxT,KAAKjJ,OAAOmZ,QAAQC,GAAK,UACjDoC,WAAS,sBAAwBjY,EAAMjB,SAAUiB,EAAO0F,KAAKjJ,OAC7D,IAAIyD,GAAQ,EAERuC,MAAY,GACZyB,MAAiB,GACjBrF,MAAa,GACb2D,MAAkB,GAClBuyC,EAAmBrvC,KAAKjJ,OAAOuH,sBAAwB0B,KAAK3E,aAAe,GAA+B,OAA1B2E,KAAKirC,iBACrF/lC,EAAOlF,KAAKjJ,OAAOgI,UACnBmwC,EAAiBhqC,EAAKtN,QAAUsN,EAAK,GAAGmE,aAAa,iBAAmB,EACxE8lC,EAAgBjqC,EAAKtN,QAAUsN,EAAKA,EAAKtN,OAAS,GAAGyR,aAAa,iBAAmB,EACrF+lC,EAAcpvC,KAAK1E,eAAiB4zC,GAAkBlvC,KAAK1E,eAAiB6zC,CAUhF,IATI94B,EAAYze,SACAye,EAAYrW,KAAK3E,aAAad,MAC1CwC,EAAYsZ,EAAYrW,KAAK3E,aAAa2E,KAAKjJ,OAAOgG,WACtDD,EAAkBuZ,EAAYrW,KAAK3E,aAAa2E,KAAKjJ,OAAO+F,iBACxDuZ,EAAYrW,KAAK3E,aAAalC,aAC9BqF,EAAiB6X,EAAYrW,KAAK3E,aAAalC,WAAWE,UAE9DF,EAAakd,EAAYrW,KAAK3E,aAAalC,YAEC,QAA5C6G,KAAKjJ,OAAOkF,aAAaQ,gBAA4B4Z,EAAYze,OAAQ,CAEzE,GADA4C,EAAQ6b,EAAYrW,KAAK3E,aAAab,MACU,UAA5CwF,KAAKjJ,OAAOkF,aAAaQ,eACzB2wB,EAAW,SACX7yB,EAAQ8b,EAAYrW,KAAK3E,aAAad,UAErC,IAAgD,UAA5CyF,KAAKjJ,OAAOkF,aAAaQ,eAA4B,CAC1D2wB,EAAW,OACX,IAAI0c,GAAmBrwC,EAAoB4c,EAAYrW,KAAK3E,cAAczD,OACtE0xC,EAAmBjzB,EAAYrW,KAAK3E,aAAad,KACrDA,GAASuvC,EAAmB,EAAMR,EAAmBQ,QAEpD,IAAgD,UAA5C9pC,KAAKjJ,OAAOkF,aAAaQ,eAA4B,CAC1D2wB,EAAW,SACNptB,KAAK1E,eAAiB,GAAK+zC,IAAqBD,IACjD90C,EAAMnB,WAAaqD,YAAW6Z,EAAYrW,KAAK3E,cAC/Cf,EAAMkE,eAAiBlE,EAAMnB,WAAWE,eACjCiB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAW6G,KAAKjJ,OAAOkG,cAExC,IAAI6yC,GAAoBr2C,EAAoB4c,EAAYrW,KAAK3E,cAAczD,OACvEm4C,EAAoB15B,EAAYrW,KAAK3E,aAAad,KACtDD,GAAME,MAAQA,EAAQ,EACtBD,EAASu1C,EAAoB,EAAMC,EAAoBD,IACnD9vC,KAAK5E,kBACLd,EAAMqC,SAASqD,KAAKjJ,OAAO+F,iBAAmBxC,EAAM0F,KAAKjJ,OAAO+F,iBAAmBC,EAC9EhF,oBAAkBuC,EAAMnB,aACzB+D,EAAgBhF,EAAKoC,EAAMnB,WAAY,MAAO6G,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBd,IAsB7F,GAlBgD,UAA5C0F,KAAKjJ,OAAOkF,aAAaQ,gBAA0E,UAA5CuD,KAAKjJ,OAAOkF,aAAaQ,kBAC3EuD,KAAK1E,eAAiB,GAAK+zC,IAAqB70C,GAAS40C,IAC1D90C,EAAMkE,eAAiBA,EACvBlE,EAAMnB,WAAaqD,YAAWrD,SACvBmB,GAAMnB,WAAWQ,mBACjBW,GAAMnB,WAAW6G,KAAKjJ,OAAOkG,eAExC3C,EAAME,MAAQA,EACVwF,KAAK5E,kBACLd,EAAMqC,SAASqD,KAAKjJ,OAAO+F,iBAAmBxC,EAAM0F,KAAKjJ,OAAO+F,iBAAmBA,EAC9E/E,oBAAkBuC,EAAMnB,aACzB+D,EAAgBhF,EAAKoC,EAAMnB,WAAY,MAAO6G,KAAKjJ,OAAQiJ,KAAK5E,gBAAiBd,KAI7E,MAAZ8yB,IAAqBptB,KAAK1E,eAAiB,GAAK+zC,IAAqBD,IACrEpsC,EAAKzI,MAAqB,WAAb6yB,EAAwB7yB,EAAQA,EAAQ,GAET,WAA5CyF,KAAKjJ,OAAOkF,aAAaQ,eAA6B,CACtD,GAAIzF,GAAcgJ,KAAKjJ,OAAOiB,KAAKhB,qBAAsBC,eACrD+I,KAAKjJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOmE,KAAKjJ,OAAOiB,KAAKhB,UACnEgM,GAAKzI,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAGlBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhByI,EAAKtH,SACLsE,KAAKorC,oBAAuB5wC,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FsD,SAAUrC,EAAMqC,SAAU6B,eAAgBzG,oBAAkBuC,EAAMnB,gBAAcogB,GAAYjf,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArBqJ,EAAKnD,YAEL,IAAK,GADDmwC,GAAgBhtC,EAAKrE,KAChBjH,EAAI,EAAGA,EAAIs4C,EAAcp4C,OAAQF,IACtC,GAAIs4C,EAAct4C,GAAGyB,WAAY,CACzBA,EAAaC,EAAc4G,KAAKjJ,OAAQi5C,EAAct4C,GAAGyB,WAAWE,SACxE,KAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,GAAI2kC,GAAallC,EAAWQ,aAAa+E,QAAQsxC,EAAct4C,GAC/DyB,GAAWQ,aAAaqD,OAAOqhC,EAAY,IAK3D,MAAOr7B,IAMXgoC,EAAK/pC,UAAUksB,UAAY,SAAUxuB,EAAMpE,EAAO6yB,GAC9CptB,KAAKmrC,uBAAyBnrC,KAAKjJ,OAAOkF,aAAaQ,eACnDkC,GACIpE,GAAS,GACTyF,KAAK1E,cAAgBf,EACrByF,KAAK3E,YAAcd,IAGnByF,KAAK1E,cAAgB0E,KAAKjJ,OAAOotB,iBACjCnkB,KAAK3E,YAAc2E,KAAKjJ,OAAOotB,kBAE/BiJ,GACAptB,KAAKjJ,OAAOkjB,eAAgBhe,cAAgBQ,eAAgB2wB,KAAc,GAE9EptB,KAAKjJ,OAAOiB,KAAKmE,WAAWgxB,UAAUxuB,EAAMpE,IAG5CyF,KAAKjJ,OAAOiB,KAAKmE,WAAWgxB,UAAUxuB,EAAMpE,IAOpDywC,EAAK/pC,UAAUgvC,iBAAmB,WAC9B,MAAOjwC,MAAKjJ,OAAOiB,KAAKmE,WAAW8zC,oBAKvCjF,EAAK/pC,UAAUivC,YAAc,WACzBlwC,KAAKjJ,OAAOiB,KAAKmE,WAAW+zC,eAEhClF,EAAK/pC,UAAUyqC,aAAe,SAAUnuC,GAC/BxF,oBAAkBwF,EAAEyF,KAAKnD,cACY,WAAlCtC,EAAEyF,KAAKnD,YAAYmF,YAA6D,SAAlCzH,EAAEyF,KAAKnD,YAAYmF,aAC3B,UAAlChF,KAAKjJ,OAAOkF,aAAaC,MAAsD,cAAlCqB,EAAEyF,KAAKnD,YAAYmF,cACxEhF,KAAK6uC,YAAY7uC,KAAKjJ,OAAOiB,KAAKhB,WAAYgJ,KAAKjJ,OAAOgI,UAAWiB,KAAKjJ,OAAO4G,0BAC7EqC,KAAKjJ,OAAOmI,YAAcc,KAAKjJ,OAAOoI,oBAAsBa,KAAKjJ,OAAO2I,gBACpEM,KAAKjJ,OAAOiB,KAAKhB,WAAWY,SAAWoI,KAAKjJ,OAAOuV,qBAAqB1U,QACxEoI,KAAK6uC,YAAY7uC,KAAKjJ,OAAOiB,KAAKhB,WAAYgJ,KAAKjJ,OAAOuV,qBAAsBtM,KAAKjJ,OAAO4G,2BAS5GqtC,EAAK/pC,UAAU0sB,SAAW,SAAU7mB,EAAUxC,GACJ,SAAlCtE,KAAKjJ,OAAOkF,aAAaC,MAAqD,UAAlC8D,KAAKjJ,OAAOkF,aAAaC,OAC/B,UAAlC8D,KAAKjJ,OAAOkF,aAAaC,OACzB8D,KAAK2sC,WAAY,EACjB3sC,KAAK6sC,mBAAmB,UAE5B7sC,KAAKjJ,OAAOiB,KAAKmE,WAAWwxB,SAAS7mB,EAAUxC,KAGhD0mC,KCtyBPmF,GAA+B,WAC/B,QAASA,GAAcp5C,GACnB0L,OAAKC,OAAO0tC,iBACZpwC,KAAKjJ,OAASA,EAiBlB,MAXAo5C,GAAclvC,UAAU4B,cAAgB,WACpC,MAAO,iBAOXstC,EAAclvC,UAAU+F,QAAU,aAG3BmpC,KCjBPE,GAA2B,WAC3B,QAASA,GAAUt5C,GACf0L,OAAKC,OAAO4tC,aACZtwC,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBAwGT,MA/FAgpC,GAAUpvC,UAAU4B,cAAgB,WAChC,MAAO,aAEXwtC,EAAUpvC,UAAUoG,iBAAmB,WACnCrH,KAAKjJ,OAAOuQ,GAAG,eAAgBtH,KAAKuwC,aAAcvwC,MAClDA,KAAKjJ,OAAOuQ,GAAG,kBAAmBtH,KAAKwwC,gBAAiBxwC,MACxDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,yBAA0BtH,KAAKywC,oBAAqBzwC,MACxEA,KAAKjJ,OAAOuQ,GAAG,iBAAkBtH,KAAK0wC,eAAgB1wC,MACtDA,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAK2wC,kBAAmB3wC,MAC5DA,KAAKjJ,OAAOuQ,GAAG,iBAAkBtH,KAAK4wC,eAAgB5wC,OAK1DqwC,EAAUpvC,UAAU0G,oBAAsB,WAClC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,eAAgB7H,KAAKuwC,cACrCvwC,KAAKjJ,OAAO8Q,IAAI,kBAAmB7H,KAAKwwC,iBACxCxwC,KAAKjJ,OAAO8Q,IAAI,iBAAkB7H,KAAK0wC,gBACvC1wC,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAK2wC,mBAC1C3wC,KAAKjJ,OAAO8Q,IAAI,iBAAkB7H,KAAK4wC,gBACvC5wC,KAAKjJ,OAAOiB,KAAK6P,IAAI,yBAA0B7H,KAAKywC,uBAExDJ,EAAUpvC,UAAUwvC,oBAAsB,SAAUztC,GAEhDA,EAAY,SAAI,GAEpBqtC,EAAUpvC,UAAUsvC,aAAe,WAI/B,IAAK,GAHDM,GAAY7wC,KAAKjJ,OAAOgI,UAAUzB,OAAO,SAAUC,GACnD,OAAQA,EAAEiI,UAAUC,SAAS,iBAExB/N,EAAI,EAAGA,EAAIm5C,EAAUj5C,OAAQF,IAAK,CACvC,GAAIo5C,GAAWD,EAAUn5C,GAAGwc,uBAAuB,uBAC/C68B,EAAa/wC,KAAKjJ,OAAOiB,KAAKmc,oBAAoB08B,EAAUn5C,GAAG2R,aAAa,aAC5ElQ,EAAaP,YAAU,aAAcoH,KAAKjJ,OAAOiB,KAAK2F,wBAAwBjG,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBkH,KAAKjJ,OAAQg6C,EAAWpyC,KAAMqB,KAAKjJ,OAAOiB,KAAK2F,2BAC/DqC,KAAKjJ,OAAOiB,KAAKuc,gBAAgBrF,OAAO4hC,EAAS,MAI7DT,EAAUpvC,UAAUyvC,eAAiB,SAAU1tC,GAC3C,GAAIguC,GAAmBhuC,EAAKnE,IAAIqV,uBAAuB,sBAClDnc,qBAAkBi5C,EAAiB,KACpChxC,KAAKjJ,OAAOiB,KAAKuc,gBAAgBrF,OAAO8hC,EAAiB,KAGjEX,EAAUpvC,UAAU0vC,kBAAoB,SAAU3tC,GAC9C,IAAIlM,EAAakJ,KAAKjJ,QAGtB,IAAK,GAAIW,GAAI,EAAGA,EAAIsL,EAAKyuB,WAAW75B,OAAQF,IACxCsL,EAAKyuB,WAAW/5B,GAAGkD,MAAMG,QAAUiI,EAAKtH,QAGhD20C,EAAUpvC,UAAUuvC,gBAAkB,SAAUxtC,GAC5C,IAAK+H,eAAe/K,KAAKjJ,OAAOid,iBAAkB,CAC9C,GAAIrV,GAAOqE,EAAKrE,KACZE,EAAMmE,EAAKiuC,cAAc3yB,cAAc4yB,gBAEvCC,EAAgB,kBADPp5C,oBAAkB4G,EAAKxF,YAAsCwF,EAAKpE,MAA7BoE,EAAKxF,WAAWoB,OACnB,QAAUoE,EAAKnE,MAC1D42C,EAAYvyC,EAAIoJ,cAAc,IAAMkpC,GAAe3rC,UACnD6rC,KAAc3rC,MAAM9C,KAAKwuC,GAAW9zC,OAAO,SAAUg0C,GAAa,MAAQA,KAAcH,IACxFI,EAAQF,EAAS,GAAGz5C,OAEpB45C,EAAc,eADDH,EAASrsC,WAAWU,MAAM,EAAG6rC,EAE9CjkC,aAAUtK,EAAKiuC,cAAc3yB,eAAgBkzB,KAIrDnB,EAAUpvC,UAAU2vC,eAAiB,SAAU5tC,GAC3C,GAAyB,cAArBA,EAAKnD,aAAoD,QAArBmD,EAAKnD,YAAuB,CAChE,GAAI4xC,GAASzuC,EAAKnE,IAAI8G,iBAAiB,eAAe,GAAG0D,aAAa,WAElEqoC,GADQniC,SAASkiC,EAAO,IAAM,GACXzsC,UACvBhC,GAAKnE,IAAI8G,iBAAiB,eAAe,GAAGwE,aAAa,UAAWunC,GAGxE,IAAK,GADDC,GAAe3xC,KAAKjJ,OAAOiB,KAAK4d,cAAc7W,UACzCrH,EAAI,EAAGA,EAAIi6C,EAAa/5C,OAAQF,IACrCi6C,EAAaj6C,GAAG8H,MAAM,GAAG6wB,SAAU,CAErBz3B,aAAU,cAAeoH,KAAKjJ,OAAOiB,MAErC,eAAE,IAAQkN,KAAMlF,KAAKjJ,OAAOiB,KAAK4d,cAAc7W,aAOrEsxC,EAAUpvC,UAAU+F,QAAU,WAC1BhH,KAAK2H,uBAEF0oC,KCpHP5vC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAUnF6wC,GAA4C,SAAU7vC,GAEtD,QAAS6vC,GAA2B76C,EAAQ86C,GACxC,GAAIptC,GAAQ1C,EAAOa,KAAK5C,KAAMjJ,EAAQ86C,IAAY7xC,IAalD,OAZAyE,GAAMqtC,kBAAmB,EACzBrtC,EAAMstC,WAAa,EACnBttC,EAAMutC,SAAW,EACjBvtC,EAAMwtC,aAAc,EAEpBxtC,EAAM2sB,YAAc,EACpB3sB,EAAMqmC,UAAY,EAClBrmC,EAAMytC,aAAe,EACrBztC,EAAM0tC,gBAAiB,EAEvB1tC,EAAMwnB,qBAAsB,EAC5BxnB,EAAM4C,mBACC5C,EAqTX,MApUAhE,IAAUmxC,EAA4B7vC,GAiBtC6vC,EAA2B3wC,UAAUmxC,kBAAoB,WACrD,MAAO,IAAIrT,IAA6B/+B,KAAKjJ,SAEjD66C,EAA2B3wC,UAAUnC,cAAgB,SAAUvE,GAC3D,MAAOyF,MAAKjJ,OAAOg5B,cAAczyB,OAAO,SAAUC,GAAK,MAAOgS,UAAShS,EAAE8L,aAAa,iBAAkB,KAAO9O,IAAU,IAE7Hq3C,EAA2B3wC,UAAUoG,iBAAmB,WACpDrH,KAAKjJ,OAAOuQ,G/BoDW,sB+BpDkBtH,KAAKqyC,mBAAoBryC,MAClEA,KAAKjJ,OAAOuQ,G/BuDO,iB+BvDkBtH,KAAKsyC,cAAetyC,OAE7D4xC,EAA2B3wC,UAAUoxC,mBAAqB,SAAUrvC,GAC5DA,EAAKuvC,QACLvyC,KAAK+xC,WAAa,EAClB/xC,KAAKoxB,WAAa,EAClBpxB,KAAK8qC,SAAW9qC,KAAKjJ,OAAOiX,aAAao2B,SAAW,GAE/CphC,EAAK8uC,mBACV9xC,KAAK8xC,kBAAmB,IAGhCF,EAA2B3wC,UAAUqxC,cAAgB,SAAUtvC,GAC3D,GAAIi4B,GAAUj7B,KAAKjJ,OAAO64B,aAAa3nB,cAAc,aACrD,IAAIjI,KAAKiyC,aAAejyC,KAAKoxB,YAAc,GAAKpxB,KAAK8qC,UAAY,EAAG,CAChE,GAAI9qC,KAAK8qC,SAAW9nC,EAAKuI,MAAQvL,KAAKjJ,OAAOiX,aAAao2B,SAAU,CAChE,GAAIoO,MAAqBvX,EAAQxC,UAAYz4B,KAAKjJ,OAAO07C,gBACrDC,EAAYF,EAAkBxyC,KAAKjJ,OAAOgI,UAAUnH,MACpD86C,GAAY1vC,EAAKuI,QACjBmnC,EAAYF,GACPxvC,EAAKuI,MAAQinC,IAEtBxyC,KAAKoxB,WAAashB,EAAY1yC,KAAKjJ,OAAOgI,UAAUnH,OACpDoI,KAAK8qC,SAAW4H,MAGhB1yC,MAAKoxB,YAAc,EACnBpxB,KAAK8qC,UAAY,CAErB9qC,MAAKiyC,aAAc,EAEnBjyC,KAAKisB,sBACLjsB,KAAKoxB,WAAa,EAClBpxB,KAAK8qC,SAAW9qC,KAAKjJ,OAAOiX,aAAao2B,SAAW,GAExDphC,EAAKouB,WAAapxB,KAAKoxB,WACvBpuB,EAAK8nC,SAAW9qC,KAAK8qC,UAEzB8G,EAA2B3wC,UAAUirB,cAAgB,SAAUxwB,GAC3D,GAAI+I,GAAQzE,IACNA,MAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACxC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAgB5nC,EAAgBwI,KAAKjJ,QAiB1EgL,EAAOd,UAAUirB,cAActpB,KAAK5C,KAAM,OAhB1CA,KAAKjJ,OAAO2E,GAAQ,aAAcsE,KAAK2yC,YAAa3yC,MAEpDA,KAAK4U,GAAK,WACNnQ,EAAMmuC,UAAUC,SAAS,SAAUC,GAAc,MAAOruC,GAAMsuC,gBAAgBD,KAC9EruC,EAAM1N,OAAO8Q,IAAI,gBAAiBpD,EAAMmQ,KAE5C5U,KAAKjJ,OAAOuQ,GAAG,gBAAiBtH,KAAK4U,GAAI5U,MACzCA,KAAKjJ,OAAOsQ,iB/B9EI,iB+B8EoCrH,KAAKgzC,iBAAiBn7B,KAAK7X,OAC/EA,KAAKjJ,OAAO2E,GAAQ,mCAAoCsE,KAAK2nB,UAAW3nB,MACxEA,KAAKjJ,OAAO2E,GAAQ,kCAAmCsE,KAAKurC,SAAUvrC,MACtEA,KAAKjJ,OAAO2E,GAAQ,8BAA+BsE,KAAKizC,mBAAoBjzC,MAC5EA,KAAKjJ,OAAO2E,GAAQ,aAAcsE,KAAKkzC,iBAAkBlzC,MACzDA,KAAKjJ,OAAO2E,GAAQ,mBAAoBsE,KAAKmzC,QAASnzC,MACtDA,KAAKjJ,OAAO2E,GAAQ,6BAA8BsE,KAAKozC,WAAYpzC,QAM3E4xC,EAA2B3wC,UAAU0xC,YAAc,SAAUp1C,GACzDwE,EAAOd,UAAU0xC,YAAY/vC,KAAK5C,KAAMzC,GAClCyC,KAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACxC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAgB5nC,EAAgBwI,KAAKjJ,UACrEgB,oBAAkBwF,EAAEgO,SACrBvL,KAAK6qC,aAAettC,EAAEgO,MACtBhN,WAAS,aAAcyB,MAAMqzC,iBAAiBrzC,KAAKjJ,OAAO07C,eAAiBl1C,EAAEgO,MAAO,WAGlFxT,oBAAkBwF,EAAEsC,cAA6C,gBAA7BtC,EAAEsC,YAAYmF,YAAiChF,KAAKisB,uBAC1FjsB,KAAKszC,SAAS7a,UAAY,EAC1Bz4B,KAAKisB,qBAAsB,KAIvC2lB,EAA2B3wC,UAAUkrB,YAAc,WAC/CpqB,EAAOd,UAAUkrB,YAAYvpB,KAAK5C,MAC5BA,KAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACxC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAgB5nC,EAAgBwI,KAAKjJ,UAC1EwH,WAAS,WAAYyB,MAAMD,QAAQwzC,eAAgB,EACnDvzC,KAAK4yC,UAAY,GAAIY,IAAyBj1C,WAAS,WAAYyB,MAAMkQ,QAAS3R,WAAS,WAAYyB,MAAMD,SAC7GC,KAAKszC,SAAWtzC,KAAKyzC,WAAWxpC,aAGxC2nC,EAA2B3wC,UAAUyyC,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,MAAK9zC,MAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACvC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAe5nC,EAAgBwI,KAAKjJ,QACrEiJ,KAAKmyC,gBACLnyC,KAAKmyC,gBAAiB,EACfnyC,KAAKkyC,eAGZlyC,KAAKkyC,aAAenwC,EAAOd,UAAUyyC,cAAc9wC,KAAK5C,KAAM2zC,EAAMC,EAASC,EAAMC,GAC5E/xC,EAAOd,UAAUyyC,cAAc9wC,KAAK5C,KAAM2zC,EAAMC,EAASC,EAAMC,IAInE/xC,EAAOd,UAAUyyC,cAAc9wC,KAAK5C,KAAM2zC,EAAMC,EAASC,EAAMC,IAG9ElC,EAA2B3wC,UAAU0mB,UAAY,SAAUpqB,GACvD,GAAIqyC,GAAW,yBAA2BryC,EAAEhD,MAAQ,KAChDA,EAAQyF,KAAKjJ,OAAO64B,aAAa3nB,cAAc2nC,GAAU9oC,SACzD8B,EAAU5I,KAAKjJ,OAAO4G,wBAAwBpD,EAClDgD,GAAEoB,KAAOiK,GAEbgpC,EAA2B3wC,UAAUsqC,SAAW,SAAUvoC,GACtD,GAEIopC,IAAY3vC,eAAgBuD,KAAK+zC,YAAa14C,YAAa2E,KAAK3E,YAAagxC,aAAcrsC,KAAKqsC,aACpGrsC,MAAKjJ,OAAOsY,OAAO,mBAAoB+8B,GACvCpsC,KAAK+zC,YAAc3H,EAAQ3vC,eAC3BuD,KAAK3E,YAAc+wC,EAAQ/wC,YAC3B2E,KAAKqsC,aAAeD,EAAQC,YAC5B,IAAInnC,GAAOlF,KAAKjJ,OAAOgI,UACnBmwC,EAAiBhqC,EAAKtN,QAAUsN,EAAK,GAAGmE,aAAa,iBAAmB,EACxE8lC,EAAgBjqC,EAAKtN,QAAUsN,EAAKA,EAAKtN,OAAS,GAAGyR,aAAa,iBAAmB,EACrF2qC,EAAch0C,KAAKjJ,OAAOotB,kBAAoB+qB,GAAkBlvC,KAAKjJ,OAAOotB,kBAAoBgrB,CACzE,SAArBnvC,KAAK+zC,aAA8C,WAArB/zC,KAAK+zC,cACrC/zC,KAAU,OAAI,GAEO,QAArBA,KAAK+zC,aAA8C,WAArB/zC,KAAK+zC,cAChC/zC,KAAK3E,cAAqC,IAAtB2E,KAAK3E,cAA0D,IAAlC2E,KAAKjJ,OAAOotB,kBAA4B6vB,IAC5FjyC,EAAOd,UAAmB,eAAE2B,KAAK5C,KAAMgD,IAG/C4uC,EAA2B3wC,UAAUgzC,iBAAmB,WAEpDlyC,EAAOd,UAAqB,YAAE2B,KAAK5C,OAEvC4xC,EAA2B3wC,UAAUiyC,iBAAmB,WAGpDlzC,KAAKjJ,OAAOsY,OAAO,uBACO,QAArBrP,KAAK+zC,aAA8C,WAArB/zC,KAAK+zC,cAA6B/zC,KAAU,OAC3E+B,EAAOd,UAAqB,YAAE2B,KAAK5C,OAG3C4xC,EAA2B3wC,UAAUgyC,mBAAqB,SAAUjwC,GAChE,GACIi4B,GAAUj7B,KAAKjJ,OAAO64B,aAAa3nB,cAAc,aACjDjI,MAAU,OAAKi7B,EAAQhzB,cAAc,iBACrCjI,KAAKiyC,aAAc,IAG3BL,EAA2B3wC,UAAUmyC,WAAa,SAAUpwC,GAExDjB,EAAOd,UAAoB,WAAE2B,KAAK5C,KAAMgD,IAE5C4uC,EAA2B3wC,UAAUizC,cAAgB,WACjD,GACIjZ,GAAUj7B,KAAKjJ,OAAO64B,aAAa3nB,cAAc,aACjDjI,MAAU,QAAMi7B,EAAQhzB,cAAc,iBACtCjI,KAAKjJ,OAAOuzB,QAAS,EACrBtqB,KAAKjJ,OAAOo2B,cAGpBykB,EAA2B3wC,UAAUkyC,QAAU,SAAUx0C,GAErDoD,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMrB,IAEhDizC,EAA2B3wC,UAAU+xC,iBAAmB,SAAUhwC,GAC9D,GAAyB,QAArBA,EAAKnD,YAAuB,CAC5B,GAAIusC,IAAY3vC,eAAgBuD,KAAK+zC,YAAa14C,YAAa2E,KAAK3E,YAAagxC,aAAcrsC,KAAKqsC,aACpGrsC,MAAKjJ,OAAOsY,OAAO,mBAAoB+8B,GACvCpsC,KAAK+zC,YAAc3H,EAAQ3vC,eAC3BuD,KAAK3E,YAAc+wC,EAAQ/wC,YAC3B2E,KAAKqsC,aAAeD,EAAQC,aAGhCtqC,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMgD,IAEhD4uC,EAA2B3wC,UAAU8xC,gBAAkB,SAAUD,GAC7D,GAAIe,GAAOf,EAAWqB,SAElBlZ,EAAUj7B,KAAKjJ,OAAO64B,aAAa3nB,cAAc,cACjD4pB,EAFY,GAEe7xB,KAAKjJ,OAAO07C,eACvC2B,EAAYtB,EAAWuB,OAAO7b,IAAMx4B,KAAK+xC,WAAc,EACvDuC,EAAcxB,EAAWuB,OAAO7b,IAAMx4B,KAAK+xC,WAAclgB,CAC7D,IAAIuiB,EAAU,CACV,GAAIG,KAAYv0C,KAAKjJ,OAAOqrB,OAAOpd,WAAWtG,QAAQ,KAAO,EAAIsB,KAAKjJ,OAAOqrB,OACzEpiB,KAAKjJ,OAAOmZ,QAAQurB,wBAAwBrZ,QAC5C7nB,KAAY0gC,EAAQxC,UAAYz4B,KAAKjJ,OAAO07C,gBAC1Ch/B,KAAKC,KAAK6gC,EAAUv0C,KAAKjJ,OAAO07C,gBAChCzyC,KAAKjJ,OAAOgI,UAAUnH,MAI5B,IAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9ByF,KAAKoxB,WAAa72B,EAClByF,KAAK8qC,SAAWvwC,EAAQyF,KAAKjJ,OAAOgI,UAAUnH,OAC1CoI,KAAK8qC,SAAW9qC,KAAK6qC,aAAc,CACnC,GAAI2J,GAAUx0C,KAAK6qC,aAAe,EAC9B4J,EAAUz0C,KAAK8qC,SAAW0J,CAC9Bx0C,MAAK8qC,SAAW0J,EAChBx0C,KAAKoxB,WAAapxB,KAAKoxB,WAAaqjB,EAGxC,GAAIC,GAAQjhC,KAAKC,KAAKo/B,EAAWuB,OAAO7b,IAAMx4B,KAAKjJ,OAAO07C,eAC1DiC,IAAgB10C,KAAKjJ,OAAOiX,aAAao2B,QACzC,IAAIuQ,GAAa,CAMjB,IALK58C,oBAAkBiI,KAAKjJ,OAAOgI,UAAU21C,MAGzCC,GAFW30C,KAAKjJ,OAAO64B,aAAajqB,iBAAiB,iBAAiB+uC,GACjEzsC,cAAc,MAAMoB,aAAa,UAGvB,IAAfsrC,EACA30C,KAAK+xC,WAAae,EAAWuB,OAAO7b,QAEnC,CACD,GAAIpW,GAASpiB,KAAKjJ,OAAO07C,cACzBzyC,MAAK+xC,WAAce,EAAWuB,OAAO7b,IAlC7B,GAkCgDpW,EAAU,EAC9D0wB,EAAWuB,OAAO7b,IAnCd,GAmCiCpW,EAAU,GAAK,OAG3D,IAAIkyB,EAAY,CACjB,GAAI9B,MAAqBvX,EAAQxC,UAAYz4B,KAAKjJ,OAAO07C,gBACrDC,EAAYF,EAAkBxyC,KAAKjJ,OAAOgI,UAAUnH,MACpD86C,GAAY1yC,KAAK6qC,eACjB6H,EAAYF,GACPxyC,KAAK6qC,aAAe2H,IAE7BxyC,KAAKoxB,WAAashB,EAAY1yC,KAAKjJ,OAAOgI,UAAUnH,OACpDoI,KAAK8qC,SAAW4H,EACZI,EAAWuB,OAAO7b,IAAOx4B,KAAKjJ,OAAO07C,eAAiBzyC,KAAK6qC,aAC3D7qC,KAAK+xC,WAAa/xC,KAAK0zC,cAAcZ,EAAWuB,OAAO7b,IAAKyC,EAAQQ,wBAAwBrZ,QAG5FpiB,KAAK+xC,WAAae,EAAWuB,OAAO7b,IAG5C,GAAK8b,GAAexB,EAAWuB,OAAO7b,IAAOx4B,KAAKjJ,OAAO07C,eAAiBzyC,KAAK6qC,gBAC5D,CACf,GAAI+J,GAAWr2C,WAAS,kBAAmByB,MAAMgC,MAAMhC,MAAO8yC,EAAWh7B,UAAW+7B,EAAMf,EAAWuB,QACrGr0C,MAAK60C,aAAeD,CACpB,IAAI1+B,GAAO0+B,EAAS7+B,WAAa6+B,EAASE,SAAWF,EAAS3+B,SAASC,KAAO0+B,EAAS1+B,IACvFlW,MAAKjJ,OAAOkjB,eAAgBjM,cAAgBgI,YAAaE,KAAU,GACnE0+B,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzF/0C,KAAKjJ,OAAOsY,OAAOulC,EAASG,OAASl1C,YAAa,gBAAiB8xC,aAAcmB,EAAWnB,iBAGpGC,EAA2B3wC,UAAU+zC,cAAgB,SAAU3zC,EAAQ4zC,EAAU13C,GAC7E,GAAKyC,KAAKjJ,OAAOC,qBAAsBC,oBAAyDsiB,KAA1CvZ,KAAKjJ,OAAOC,WAAWA,WAAWooC,KACvC,KAA1Cp/B,KAAKjJ,OAAOC,WAAWA,WAAWooC,KAAe5nC,EAAgBwI,KAAKjJ,QACrEwH,WAAS,mBAAoBhB,KAC7ByC,KAAKmyC,gBAAiB,GAE1BpwC,EAAOd,UAAU+zC,cAAcpyC,KAAK5C,KAAMqB,EAAQ4zC,EAAU13C,OAE3D,CACD,GAAIs2C,GAAOt2C,EAAE23C,YAAYC,cAAoD,MAApC53C,EAAE23C,YAAYC,aAAaC,MAChE72C,WAAS,cAAeyB,MAAMkW,MAAQ3X,WAAS,cAAeyB,MAAMkW,OAAS3Y,EAAE23C,YAAYh/B,KAC3F3X,WAAS,cAAeyB,MAAQzC,EAAE23C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAUv1C,KAAKw1C,gBAAgBH,EACnCr1C,MAAKy1C,WAAWC,gBAAgB,KAAOpvC,UAAQqvC,MAA8B,SAAtBrvC,UAAQutC,KAAK+B,OACpEv0C,EAASrB,KAAKjJ,OAAOyS,cAAc,UAC5BoB,YAAYqqC,EAEnBj1C,MAAK61C,WAAW5tC,cAAc,SAAgB,YAAE5G,GAC3CrB,KAAK8xC,kBAAwC,IAApB9xC,KAAK+xC,WAI/B/xC,KAAK8xC,kBAAmB,EAHxBvzC,WAAS,aAAcyB,MAAM81C,YAAYP,EAASv1C,KAAK+xC,YAK3Dx/B,WAAS,WAAYvS,KAAK60C,aAAe70C,KAAK60C,aAAehB,EAAM7zC,KAGnE+B,GAAOd,UAAmB,UAAE2B,KAAK5C,KAAMzC,EAEnCyC,MAAU,QAAMA,KAAKjJ,OAAO64B,aAAa3nB,cAAc,cAAcA,cAAc,gBACxD,QAArBjI,KAAK+zC,aAA8C,WAArB/zC,KAAK+zC,cACjC/zC,KAAKqsC,cAAgBrsC,KAAKoxB,WAC1BpxB,KAAKk0C,gBAEAl0C,KAAK3E,aAAe2E,KAAK3E,aAAe,IAC7C2E,KAAU,OAAI,EACdA,KAAKjJ,OAAOuzB,QAAS,IAIjCtqB,KAAKi0C,mBACLlyC,EAAOd,UAAoB,WAAE2B,KAAK5C,QAG1C4xC,EAA2B3wC,UAAU0G,oBAAsB,WACnD3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,aAAc7H,KAAK2yC,aACnC3yC,KAAKjJ,OAAO8Q,IAAI,gBAAiB7H,KAAK4U,IACtC5U,KAAKjJ,OAAO8Q,I/B/OW,sB+B+OmB7H,KAAKqyC,oBAC/CryC,KAAKjJ,OAAO8Q,I/B5OO,iB+B4OmB7H,KAAKsyC,eAC3CtyC,KAAKjJ,OAAO8Q,IAAI,mCAAoC7H,KAAK2nB,WACzD3nB,KAAKjJ,OAAO8Q,IAAI,kCAAmC7H,KAAKurC,UACxDvrC,KAAKjJ,OAAO8Q,IAAI,8BAA+B7H,KAAKizC,oBACpDjzC,KAAKjJ,OAAO8Q,IAAI,aAAc7H,KAAKkzC,kBACnClzC,KAAKjJ,OAAO8Q,IAAI,mBAAoB7H,KAAKmzC,SACzCnzC,KAAKjJ,OAAO8Q,IAAI,6BAA8B7H,KAAKozC,cAEhDxB,GACTmE,0BAEEvC,GAA0C,SAAUzxC,GAEpD,QAASyxC,KACL,GAAI/uC,GAAmB,OAAX1C,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,IAKhE,OAJAyE,GAAMuxC,YAAa,EACnBvxC,EAAMwxC,OAAS,EACfxxC,EAAMyxC,QAAU,EAChBzxC,EAAM0xC,MAAQ,EACP1xC,EA8CX,MArDAhE,IAAU+yC,EAA0BzxC,GASpCyxC,EAAyBvyC,UAAU4xC,SAAW,SAAUuD,GACpD7jC,WAAS,gBAAiBhU,WAAS,UAAWyB,MAAMuK,UAAUkxB,wBAAyBz7B,MACvF+f,eAAalW,IAAItL,WAAS,UAAWyB,MAAMuK,UAAW,SAAUvK,KAAKq2C,sBAAsBD,GAAWp2C,OAE1GwzC,EAAyBvyC,UAAUq+B,MAAQ,WACvCt/B,KAAKk2C,QAAU,MAEnB1C,EAAyBvyC,UAAUo1C,sBAAwB,SAAUD,GACjE,GAAI3xC,GAAQzE,KACRs2C,EAAU,EACVC,EAAW,CACf,OAAO,UAAUh5C,GACb,GAAIk7B,GAAYl7B,EAAE8D,OAAOo3B,UACrBqD,EAAav+B,EAAE8D,OAAOy6B,WACtBhkB,EAAYw+B,EAAU7d,EAAY,OAAS,IAC/C3gB,GAAYy+B,IAAaza,EAAahkB,EAAYy+B,EAAWza,EAAa,QAAU,OACpFwa,EAAU7d,EACV8d,EAAWza,CACX,IAAIuI,GAAU9lC,WAAS,eAAgBkG,GAAOqT,GAC1C0+B,EAAQ,CACZ/xC,GAAMwxC,OAASxd,EACM,MAAjBh0B,EAAMyxC,UACNM,EAAQ/xC,EAAMwxC,OAASxxC,EAAMyxC,SAEjCzxC,EAAMyxC,QAAUzxC,EAAMwxC,OAClBxxC,EAAM0xC,OACNM,aAAahyC,EAAM0xC,OAEvB1xC,EAAM0xC,MAAQ7sB,WAAW7kB,EAAM66B,MAAO,IAOjCkX,EAAQ,KAAOA,GAAS,MAASj5C,GAAKA,EAAEm5C,iBACzCn5C,EAAEo5C,aAAc,EAChBp5C,EAAEm5C,kBAENN,GAAWt+B,UAAWA,EAAW8+B,QAASnyC,EAAMuxC,WAC5C7B,SAAU9P,EAASgQ,QAAU7b,IAAKC,EAAWQ,KAAM6C,GACnD6V,aAAczZ,SAASsX,kBAG5BgE,GACTqD,wBCnZEp2C,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBhI,OAAOmI,iBAChBC,uBAA2BvE,QAAS,SAAUoE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIpD,KAAKoD,GAAOA,EAAEhE,eAAeY,KAAImD,EAAEnD,GAAKoD,EAAEpD,MACpDmD,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASG,KAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAalI,OAAOwI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,QAcnF+1C,GAA+B,WAI/B,QAASA,GAAc//C,GACnBiJ,KAAK+2C,gBAAkB,EACvB/2C,KAAKg3C,cAAgB,EACrBh3C,KAAKjJ,OAASA,CAId,KAAK,GADDwpB,GAAU9d,OAAKxB,UAAyB,gBACnCvJ,EAAI,EAAGA,EAAI6oB,EAAQ3oB,OAAQF,IAChC,GAAI6oB,EAAQ7oB,KAAOu/C,gBAAmB,CAClC12B,EAAQvjB,OAAOtF,EAAG,EAClB,OAGR+K,OAAKC,OAAOw0C,IACZl3C,KAAKqH,mBA6GT,MA3GAyvC,GAAc71C,UAAUk2C,iBAAmB,SAAUn0C,GACjDA,EAAKrE,KAAOqB,KAAKi/B,YAMrB6X,EAAc71C,UAAU4B,cAAgB,WACpC,MAAO,iBAKXi0C,EAAc71C,UAAUoG,iBAAmB,WACvCrH,KAAKjJ,OAAOuQ,GhCbkB,2BgCakBtH,KAAKo3C,4BAA6Bp3C,MAClFA,KAAKjJ,OAAOuQ,GhCZO,gBgCYkBtH,KAAKq3C,kBAAmBr3C,OAKjE82C,EAAc71C,UAAU0G,oBAAsB,WACtC3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IhCvBkB,2BgCuBmB7H,KAAKo3C,6BACtDp3C,KAAKjJ,OAAO8Q,IhCtBO,gBgCsBmB7H,KAAKq3C,qBAE/CP,EAAc71C,UAAUm2C,4BAA8B,SAAUv4C,GAC5DmB,KAAKjJ,OAAOiB,KAAKqX,OhCyBM,uBgCzB6ByiC,kBAAkB,IACtE9xC,KAAKs3C,kBAAoBz4C,EAAI9F,OAC7B8F,EAAI9F,OAAOS,SAA0B,aAAfqF,EAAInD,MAC1B,IAAIgoC,IACArzB,OAAQrQ,KAAKjJ,OAAOsG,SACpBwB,IAAKA,EAAIA,IACTnD,OAAQmD,EAAInD,OACZ3C,OAAQ8F,EAAI9F,OACZwS,MAAOvL,KAAKjJ,OAAOsG,SAASzF,OAEhCoI,MAAKjJ,OAAOiB,KAAK2mB,gBACjB,IAAI9e,GAActB,WAAS,gBAAiByB,KAAKjJ,QAAU,cAAgB,SAC3EwH,YAAS,oBAAqByB,KAAKjJ,QAAQ0b,mBAAmBixB,GAAO7jC,YAAaA,KAEtFi3C,EAAc71C,UAAUo2C,kBAAoB,SAAUrT,GAClD,GAAIv/B,GAAQzE,KACRlG,EAAK,GAAI7C,eAAY+sC,EAAe3zB,QACpC7W,EAAW,GAAIsI,aAAU,WAAY,WAAY,MAAMyiC,GAAG,WAAY,eAAYhrB,IAClFvgB,EAAUc,EAAGiZ,cAAa,GAAIxB,UAAQI,MAAMnY,IAC5CylC,EAAajmC,EAAQsE,OAAO,SAAUC,GACtC,MAAOzE,GAAgB2L,EAAM1N,OAAQwG,EAAGvE,IAE5CgH,MAAKi/B,WAAaA,EAClBj/B,KAAKjJ,OAAOiB,KAAKqX,OhCIC,iBgCJ6B1Q,KAAMsgC,GACrD,IAAIsY,IAAWnmB,YAAa,EAAG0Z,UAAW,EAAGv/B,MAAOy4B,EAAez4B,MACnEvL,MAAKjJ,OAAOiB,KAAKqX,OhCIE,iBgCJ2BkoC,EAC9C,IAAInmB,GAAammB,EAAOnmB,WACpB0Z,EAAWyM,EAAOzM,QAEtB,IADA9G,EAAez4B,MAAQ0zB,EAAWrnC,QACd,IAAhBw5B,IAAmC,IAAd0Z,EAAiB,CACtC,GAAIx5B,GAAQ,GAAIC,SACZ4yB,EAAOnkC,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,SAErCF,EAAOC,GADGnkC,KAAKjJ,OAAOiB,KAAKgW,aAAagI,YACf,EAC7B1E,GAAQA,EAAM4yB,KAAKA,GAAMI,KAAKH,GAC9BrqC,EAAG9C,WAAW6E,KAAOojC,EACrB+E,EAAe3zB,OAASvW,EAAGiZ,aAAazB,OAEvC,CASD,GAPoB,cADF0yB,EAAertB,WAAW9W,cAExCuxB,EAAa,EACb0Z,EAAW9qC,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,SAAW,EACpDpkC,KAAKjJ,OAAOiB,KAAKqX,OhClBF,uBgCkBqCkjC,QAAQ,MAI3Dx6C,oBAAkBiI,KAAKs3C,mBAAoB,CAC5C,GAAIE,GAAgBx3C,KAAKjJ,OAAOgI,UAC5B04C,EAASxY,EAAWvgC,QAAQsB,KAAKs3C,kBACtBrY,GAAWv5B,MAAM+xC,EAAQA,EAASD,EAAc5/C,QAClDA,OAAS4/C,EAAc5/C,QAAU6/C,GAAU,GAGpDrmB,EADAqmB,GADAA,EAASxY,EAAWrnC,OAAS4/C,EAAc5/C,QACzB,EAAI6/C,EAAS,EAE/B3M,EAAW7L,EAAWrnC,QAEjB2G,WAAS,gBAAiByB,KAAKjJ,UACpCq6B,EAAa,EACb0Z,EAAW9qC,KAAKjJ,OAAOiB,KAAKgW,aAAao2B,SAAW,EACpDpkC,KAAKjJ,OAAOiB,KAAKqX,OhCnCN,uBgCmCyCkjC,QAAQ,KAEhEvyC,KAAKs3C,kBAAoB,KAG7BtT,EAAe3zB,OAAS4uB,EAAWv5B,MAAM0rB,EAAY0Z,GACrD9qC,KAAK+2C,eAAiB3lB,EACtBpxB,KAAKg3C,aAAelM,EAExB9qC,KAAKjJ,OAAOsY,OAAO,eAAgB20B,IAOvC8S,EAAc71C,UAAU+F,QAAU,WAC9BhH,KAAK2H,uBAEFmvC,KAGPI,GAA6B,SAAUn1C,GAEvC,QAASm1C,GAAYngD,EAAQ86C,GACzB,GAAIptC,GAAQ1C,EAAOa,KAAK5C,KAAMjJ,EAAQ86C,IAAY7xC,IAGlD,OAFAzB,YAAS,SAAUkG,GAAOoD,IAAI,eAAgBtJ,WAAS,sBAAuBkG,GAAQA,GACtFlG,WAAS,SAAUkG,GAAO6C,GAAG,eAAgB7C,EAAMizC,qBAAsBjzC,GAClEA,EAuBX,MA5BAhE,IAAUy2C,EAAan1C,GAOvBm1C,EAAYj2C,UAAUy2C,qBAAuB,WACzCn5C,WAAS,SAAUyB,MAAM8C,KAAK,aAAc,kBAAmB,iBAC/D,IAAI60C,GAAWp5C,WAAS,UAAWyB,MAAM43C,WAAW,kBACpDr5C,YAAS,cAAeo5C,GACnB31C,MAAM21C,GAAWE,aAAWC,QAAS,GAAIlG,IAA2BrzC,WAAS,SAAUyB,MAAOzB,WAAS,UAAWyB,SAEvHA,KAAK+3C,kBAETb,EAAYj2C,UAAU82C,eAAiB,WACnC,GAAIC,GAAaz5C,WAAS,SAAUyB,MAChC8jB,EAAYk0B,EAAWvF,cACtB16C,qBAAkBigD,EAAW51B,SAA0C,gBAAvB41B,YAAuE,IAApCA,EAAW51B,OAAO1jB,QAAQ,OAC9Gs5C,EAAW9nC,QAAQtV,MAAMwnB,OAAS41B,EAAW51B,OAEjD,IAGIA,GAAqB,MAHX41B,EAAW51B,OAAOpd,WAAWtG,QAAQ,KAAO,EAAIs5C,EAAW51B,OACrE41B,EAAW9nC,QAAQurB,wBAAwBrZ,QAClB0B,GAEzBqgB,EAAO6T,EAAWhqC,aAAao2B,QACnC4T,GAAW/9B,eAAgBjM,cAAgBo2B,SAAUD,EAAO/hB,EAASA,EAAS+hB,KAAU,IAErF+S,GACTD,iBCjLEgB,GAAwB,WAIxB,QAASA,GAAOlhD,GACZ0L,OAAKC,OAAOw1C,UACZl4C,KAAKjJ,OAASA,EACdiJ,KAAKqH,mBAqET,MAnEA4wC,GAAOh3C,UAAUoG,iBAAmB,WAChCrH,KAAKjJ,OAAOuQ,GAAG,oBAAqBtH,KAAK2wC,kBAAmB3wC,MAC5DA,KAAKjJ,OAAOuQ,GAAG,eAAgBtH,KAAKuwC,aAAcvwC,MAClDA,KAAKjJ,OAAOiB,KAAKsP,GAAG,WAAYtH,KAAKm4C,gBAAiBn4C,OAE1Di4C,EAAOh3C,UAAU0G,oBAAsB,WAC/B3H,KAAKjJ,OAAO6Q,cAGhB5H,KAAKjJ,OAAO8Q,IAAI,oBAAqB7H,KAAK2wC,mBAC1C3wC,KAAKjJ,OAAO8Q,IAAI,eAAgB7H,KAAKuwC,cACrCvwC,KAAKjJ,OAAOiB,KAAK6P,IAAI,WAAY7H,KAAKm4C,mBAE1CF,EAAOh3C,UAAU0vC,kBAAoB,SAAU3tC,GAC3C,GAEIkC,GAFAmtB,EAAcryB,KAAKjJ,OAAOuV,qBAC1B8rC,EAAap4C,KAAKjJ,OAAOgI,SAQzBmG,GANClC,EAAKyuB,WAAW75B,OAMVoL,EAAKyuB,WALLY,EAAY/0B,OAAO,SAAUC,GAChC,MAAOA,GAAE0K,cAAc,kBAAoBjF,EAAKjK,OAAOwB,MAAQ,SAAWyI,EAAKjK,OAAOyB,MAAQ,KAMtG,KAAK,GAAI9C,GAAI,EAAGA,EAAIwN,EAAKtN,OAAQF,IAAK,CAClC,GAAI2gD,GAAQr4C,KAAKjJ,OAAOiB,KAAKmc,oBAAoBjP,EAAKxN,GAAG2R,aAAa,aAAa1K,IACnFuG,GAAKxN,GAAGkD,MAAMG,QAAUiI,EAAKtH,MAC7B,IAAI48C,GAAgC,SAAhBt1C,EAAKtH,OAAoB,8CACvC,2CACN,IAAI08C,EAAWlzC,EAAKxN,GAAGoP,UAAUmB,cAAcqwC,GAAgB,CAE3D,IAAK,GADDvlB,MACKE,EAAM,EAAGA,EAAMZ,EAAYz6B,OAAQq7B,IACpCZ,EAAYY,GAAKhrB,cAAc,kBAAoBowC,EAAM99C,MAAQ,SAAW89C,EAAM79C,MAAQ,KAC1Fu4B,EAAKl6B,KAAKw5B,EAAYY,GAG1BF,GAAKn7B,QACLoI,KAAK2wC,mBAAoBlf,WAAYsB,EAAMr3B,OAAQsH,EAAKtH,YAKxEu8C,EAAOh3C,UAAUk3C,gBAAkB,SAAU56C,GACrCyK,eAAazK,EAAE8D,OAAQ,cACvBrB,KAAKjJ,OAAOiB,KAAKiE,aAAawuB,qBAAyD,SAAlCzqB,KAAKjJ,OAAOkF,aAAaC,MAC9E8D,KAAKjJ,OAAOiB,KAAKmE,WAAWuxB,UAAU1lB,eAAazK,EAAE8D,OAAQ,WAGrE42C,EAAOh3C,UAAUsvC,aAAe,SAAUvtC,GACjBhD,KAAKjJ,OAAO6I,aAAatC,OAAO,SAAUC,GAC3D,MAAOA,GAAE1F,eAEMD,QAAUoI,KAAKjJ,OAAOwhD,cAAgBv4C,KAAKjJ,OAAOuC,eACjEgU,YAAUtN,KAAKjJ,OAAOmZ,QAAQgE,uBAAuB,UAAU,IAAK,qBAG5E+jC,EAAOh3C,UAAU+F,QAAU,WACvBhH,KAAK2H,uBAMTswC,EAAOh3C,UAAU4B,cAAgB,WAC7B,MAAO,UAEJo1C,KC9EPO,GAA+B,WAI/B,QAASA,GAAczhD,GACnB0L,OAAKC,OAAO+1C,iBACZz4C,KAAKjJ,OAASA,EA0BlB,MAlBAyhD,GAAcv3C,UAAUgtB,kBAAoB,SAAUyqB,EAAGC,GACrD,MAAO34C,MAAKjJ,OAAOiB,KAAKo2B,oBAAoBH,kBAAkByqB,EAAGC,IAOrEH,EAAcv3C,UAAU+F,QAAU,aAOlCwxC,EAAcv3C,UAAU4B,cAAgB,WACpC,MAAO,iBAEJ21C,WCpCXI,IAAel2C,OAAOm2C,GAAcC,GAAYC,GAAYC,GAAeC,GAAeC,GAAiBC,GAAcC,GAAkBC,GAAmBC,GAAiBC,GAAqBC,GAAmBC,GAAYC,EAAiBC,GAAqBC,GAAiBC,GAAaC,GAAcC,GAAqBC,wBnCExT,sBAEQ,2BAEH,4BAEI,kCAEE,gCAEJ,gCAEI,mCAED,gCAEF,6BAED,+BAEG,iCAED,+BAED,mCAEK,sCAEF,+BAEL,wBAEF,uBAEC,wBAEA,yBAEC,4BAEE,0CAEY,2CAEX,gCAEA,mCAEE,qCAEC,gCAEN,2BAEC,wCAEY,uCAEb,yBAED,uBAED,+BAES,+BAET,uBAEC,uBAED,yBAEG,4BAEA,yBAEH,+BAES,qCAEH,mCAEC,8BAEN,yBAEC,2BAEA,0BAED,kCAES,yCAED,qCAEL,gCAEC,mCAEE,gCAEE,8CAEI,2CAEN,4BAER,+BAEW,+BAEX,yBAEK,yBAEL,wBAEG,2BAEA,2BAEA"}