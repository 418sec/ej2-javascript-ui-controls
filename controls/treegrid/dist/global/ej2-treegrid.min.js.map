{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                console[item.logType](message);\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields are missing which are ' +\n                'required for the hierarchy relation of records in Tree Grid.\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && !isNullOrUndefined(gridColumns[this.treeColumnIndex].template)) {\n            temp = gridColumns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n                    this.keyPress = null;\n                }\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","console","logType","treeLog","treeGrid","allowRowDragAndDrop","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","srcControlFlatData","actualIndex","selectedRecord","isByMethod","fromIndex","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"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"}