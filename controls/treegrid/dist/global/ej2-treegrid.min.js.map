{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var _this = this;\n        var rowIndex;\n        rowIndex = [];\n        rowIndex.push(rowElement.rowIndex);\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args, function (checkBoxArgs) {\n            if (!checkBoxArgs.cancel) {\n                _this.selectCheckboxes(rowIndex);\n            }\n        });\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            if (typeof (args.column.template) === 'object' && this.templateResult) {\n                cellElement.innerHTML = '';\n                appendChildren(cellElement, this.templateResult);\n                this.templateResult = null;\n            }\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                    var key = !this.parent.query.params.length ? [] : this.parent.query.params.filter(function (e) {\n                        return e.key === 'IdMapping';\n                    });\n                    if (!key.length) {\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (!isNullOrUndefined(rowDetails.detailrows[i])) {\n                    rowDetails.detailrows[i].style.display = 'table-row';\n                }\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData : this.dataSource;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.treeColumnRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = dm.dataSource.json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    TreeGrid.prototype.resetTemplates = function () {\n        for (var i = 0; i < this.columns.length; i++) {\n            if (this.columns[i].template) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid, 'Template');\n            }\n            if (this.columns[i].headerTemplate) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid + 'headerTemplate', 'HeaderTemplate');\n            }\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All')\n            || this.enableVirtualization) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n                this.notify('rowExpand', { row: row });\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row, detailrows: detailrows });\n                }\n                else {\n                    this.collapseRemoteChild(rows, detailrows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return (e.parentUniqueID === record.uniqueID) || e.isSummaryRow;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows, detailrows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (!isNullOrUndefined(detailrows[i])) {\n                detailrows[i].style.display = 'none';\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var detailRows = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                    else if (eRows[i_1].classList.contains('e-griddetailrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        detailRows.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow, detailRows);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args);\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource;\n        for (var i = 0; i < this.parent.grid.dataSource.length; i++) {\n            data[i].index = i;\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index].hasChildRecords) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","setRowData","row","getRowByIndex","renderModule","cellRender","data","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","triggerChkChangeEvent","nextElementSibling","classList","contains","closest","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","rowIndex","_this","checked","cancel","rowData","trigger","checkBoxArgs","selectCheckboxes","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","textContent","appendChildren","notify","checkboxElement","parseInt","summaryData","rowTemplate","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","params","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","detailrows","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","totalRecordsCount","parentRecords","currentData","getUid","id","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","toolbarClick","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","treeColumnRowTemplate","updateAltRow","req","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","batchCancel","detailDataBound","actionBegin","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","resetTemplates","expandCollapse","collapseArgs","collapsingArgs","resetBlazorTemplate","headerTemplate","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","displayAction","targetEle","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","getRowObjectFromUID","expandElement","cRow","detailRows","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","dm_1","or","parents_1","floor","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","crudAction","beginAdd","keyPressed","contentready","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowModule","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","scrollTop","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow"],"mappings":"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pCE,GACI0oB,WACD1U,EAASlU,UAAW,eAAY,IACnCE,GACI0oB,WACD1U,EAASlU,UAAW,kBAAe,IACtCE,GACI0oB,WACD1U,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,gBAAa,IACpCE,GACI0oB,WACD1U,EAASlU,UAAW,eAAY,IACnCE,GACI0oB,WACD1U,EAASlU,UAAW,oBAAiB,IACxCE,GACI0oB,WACD1U,EAASlU,UAAW,gBAAa,IACpCE,GACI0oB,WACD1U,EAASlU,UAAW,wBAAqB,IAC5CE,GACI0oB,WACD1U,EAASlU,UAAW,sBAAmB,IAC1CE,GACI0oB,WACD1U,EAASlU,UAAW,wBAAqB,IAC5CE,GACI0oB,WACD1U,EAASlU,UAAW,mBAAgB,IACvCE,GACI0oB,WACD1U,EAASlU,UAAW,sBAAmB,IAC1CE,GACI0oB,WACD1U,EAASlU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,mBAAgB,IACvCE,GACI0oB,WACD1U,EAASlU,UAAW,kBAAe,IACtCE,GACI0oB,WACD1U,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,oBAAiB,IACxCE,GACI0oB,WACD1U,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,oBAAiB,IACxCE,GACI0oB,WACD1U,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,sBAAmB,IAC1CE,GACI0oB,WACD1U,EAASlU,UAAW,mBAAgB,IACvCE,GACI0oB,WACD1U,EAASlU,UAAW,sBAAmB,IAC1CE,GACI0oB,WACD1U,EAASlU,UAAW,qBAAkB,IACzCE,GACI0oB,WACD1U,EAASlU,UAAW,kBAAe,IACtCE,GACI0oB,WACD1U,EAASlU,UAAW,eAAY,IACnCE,GACI0oB,WACD1U,EAASlU,UAAW,iBAAc,IACrCE,GACI0oB,WACD1U,EAASlU,UAAW,sBAAmB,IAC1CE,GACI0oB,WACD1U,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"}