{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('headerCheckbox', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('renderHeaderCheckbox', this.headerCheckbox);\n        this.parent.off('renderCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateCheckboxes', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            var checkBoxargs = this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n            if (!checkBoxargs.cancel) {\n                this.selectCheckboxes(rowIndex);\n            }\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args);\n        return args;\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        this.parent.notify('updateAction', { result: this.flatSortedData });\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0) {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                    var key = !this.parent.query.params.length ? [] : this.parent.query.params.filter(function (e) {\n                        return e.key === 'IdMapping';\n                    });\n                    if (!key.length) {\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            this.parent.notify('createSort', { modifiedData: modifiedData, filteredData: results, srtQry: srtQry });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](#searchsettings).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData : this.dataSource;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.treeColumnRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('headerCheckbox', {});\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = dm.dataSource.json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n            }\n            //args = this.dataModule.dataProcessor(args);\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            var target = getObject('target', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            if (!isNullOrUndefined(target) && requestType === 'sorting' && target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                setValue('cancel', true, args);\n                return;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule',\n            'selectionModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = target.closest('.e-treerowcell').parentElement;\n        var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo, record);\n        }\n        else {\n            this.expandRow(rowInfo, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return (e.parentUniqueID === record.uniqueID) || e.isSummaryRow;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var targetEle = rows[i].getElementsByClassName('e-treegridexpand')[0];\n                removeClass([targetEle], 'e-treegridexpand');\n                addClass([targetEle], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        args.type = 'cancel';\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args);\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName, this.addRowRecord);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource;\n        for (var i = 0; i < this.parent.grid.dataSource.length; i++) {\n            data[i].index = i;\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            var data2 = records[k];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var result = value.match(remove);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n            }\n            addClass([row], 'e-gridrowindex' + index + 'level' + level);\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index].hasChildRecords) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","setRowData","row","getRowByIndex","renderModule","cellRender","data","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","triggerChkChangeEvent","nextElementSibling","classList","contains","cancel","selectCheckboxes","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","style","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","width","allowTextWrap","textContent","notify","checkboxElement","parseInt","summaryData","rowTemplate","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","result","filterSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","params","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","totalRecordsCount","parentRecords","currentData","getUid","id","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","toolbarClick","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","treeColumnRowTemplate","updateAltRow","req","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","batchCancel","actionBegin","actionComplete","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","displayAction","targetEle","collapseRemoteChild","visibleRowCount","gridRow","rcell","arg","getRowsObject","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageRoot","pagedResults","temp","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","crudAction","beginAdd","keyPressed","contentready","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection"],"mappings":"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ChCE,GACIgB,WAAS,QACVqS,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,cAAW,IAClCE,GACIinB,WACD5T,EAASvT,UAAW,WAAQ,IAC/BE,GACIinB,WACD5T,EAASvT,UAAW,gBAAa,IACpCE,GACIinB,WACD5T,EAASvT,UAAW,eAAY,IACnCE,GACIinB,WACD5T,EAASvT,UAAW,iBAAc,IACrCE,GACIinB,WACD5T,EAASvT,UAAW,gBAAa,IACpCE,GACIinB,WACD5T,EAASvT,UAAW,kBAAe,IACtCE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,gBAAa,IACpCE,GACIinB,WACD5T,EAASvT,UAAW,eAAY,IACnCE,GACIinB,WACD5T,EAASvT,UAAW,oBAAiB,IACxCE,GACIinB,WACD5T,EAASvT,UAAW,gBAAa,IACpCE,GACIinB,WACD5T,EAASvT,UAAW,wBAAqB,IAC5CE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,wBAAqB,IAC5CE,GACIinB,WACD5T,EAASvT,UAAW,mBAAgB,IACvCE,GACIinB,WACD5T,EAASvT,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVqS,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,mBAAgB,IACvCE,GACIinB,WACD5T,EAASvT,UAAW,kBAAe,IACtCE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,oBAAiB,IACxCE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,oBAAiB,IACxCE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,mBAAgB,IACvCE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,kBAAe,IACtCE,GACIinB,WACD5T,EAASvT,UAAW,eAAY,IACnCE,GACIinB,WACD5T,EAASvT,UAAW,iBAAc,IACrCE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,iBAAc,IACrCE,GACIinB,WACD5T,EAASvT,UAAW,iBAAc,IACrCE,GACIinB,WACD5T,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,oBAAiB,IACxCE,GACIinB,WACD5T,EAASvT,UAAW,kBAAe,IACtCE,GACIinB,WACD5T,EAASvT,UAAW,mBAAgB,IACvCE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,uBAAoB,IAC3CE,GACIgB,YAAU,IACXqS,EAASvT,UAAW,uBAAoB,IAC3CE,GACI+mB,aAAY/e,IACbqL,EAASvT,UAAW,wBAAqB,IAC5CE,GACIgB,YAAS,IACVqS,EAASvT,UAAW,uBAAoB,IAC3CE,GACIgB,YAAS,IACVqS,EAASvT,UAAW,qBAAkB,IACzCE,GACIinB,WACD5T,EAASvT,UAAW,uBAAoB,IAC3CE,GACIinB,WACD5T,EAASvT,UAAW,6BAA0B,IACjDE,GACIinB,WACD5T,EAASvT,UAAW,yBAAsB,IAC7CE,GACIinB,WACD5T,EAASvT,UAAW,+BAA4B,IACnDE,GACIinB,WACD5T,EAASvT,UAAW,wBAAqB,IAC5CE,GACIinB,WACD5T,EAASvT,UAAW,0BAAuB,IAC9CE,GACIinB,WACD5T,EAASvT,UAAW,sBAAmB,IAC1CE,GACIinB,WACD5T,EAASvT,UAAW,wBAAqB,IAC5CuT,EAAWI,EAAazT,GACpBknB,yBACD7T,IAEL8T,aC3oEEC,EAAyB,WAIzB,QAASA,GAAQrvB,EAAQsvB,GACrBrgB,OAAKC,OAAOqgB,WACZzoB,KAAK9G,OAASA,EACd8G,KAAK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"}