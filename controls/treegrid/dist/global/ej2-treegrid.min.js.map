{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/base/constant.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData, index)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                                if (!isNullOrUndefined(this.hierarchyData[index][this.parent.parentIdMapping]) && groupData.key === this.taskIds[index]) {\n                                    this.hierarchyData.splice(index, 1);\n                                    this.taskIds.splice(index, 1);\n                                }\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData, index) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var returns = false;\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        this.hierarchyData.splice(index, 1);\n                        this.taskIds.splice(index, 1);\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[i][this.parent.childMapping])) {\n                returns = this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData, index);\n            }\n        }\n        return returns;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                    var compFun = col.sortComparer && !this.isRemote() ?\n                        col.sortComparer.bind(col) :\n                        this.parent.grid.sortSettings.columns[srt].direction;\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        else if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n                this.isOnBatch = false;\n            }\n            this.enableToolbarItems('save');\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n            var saveArgs = {\n                type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                previousData: args.previousValue, row: row, target: args.cell\n            };\n            this.parent.trigger(events.actionComplete, saveArgs);\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","Print","GridPrint","addEventListener","on","printTreeGrid","removeEventListener","off","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","totalIconsWidth","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","collapsed","width","cellElement","allowTextWrap","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","isSortAction","dataResults","sortedRecords","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","returns","childs","Math","ceil","random","rowDetails","parentRow","rows","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","count","totalRecordsCount","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","col","getColumnByField","compFun","sortComparer","bind","sortBy","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","selectedRowIndex","rowDeselected","toolbarClick","cancel","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","batchCancel","mode","actionBegin","actionComplete","requestType","newRowPosition","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","this_2","parent_2","parent_3","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageRoot","pagedResults","temp","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","beginAdd","keyPressed","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","request","toolbarID","cells","rowIndex_1","parentNode","primaryKeys_1","updateRow","formObj","querySelectorAll","saveArgs","previousData","previousValue","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","child","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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"}