{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName) {\n    var value = details.value;\n    var action = details.action;\n    if (action === 'save') {\n        action = 'edit';\n    }\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            value = currentViewRecords[addRowIndex + 1];\n            break;\n        case 'Below':\n        case 'Child':\n            value = currentViewRecords[addRowIndex];\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        var childRecords = child ? child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('headerCheckbox', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('renderHeaderCheckbox', this.headerCheckbox);\n        this.parent.off('renderCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateCheckboxes', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            var checkBoxargs = this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n            if (!checkBoxargs.cancel) {\n                this.selectCheckboxes(rowIndex);\n            }\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args);\n        return args;\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        this.parent.notify('updateAction', { result: this.flatSortedData });\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0) {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var dataObj = this.parent.grid.dataSource;\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            this.parent.notify('createSort', { modifiedData: modifiedData, filteredData: results, srtQry: srtQry });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.notify('headerCheckbox', {});\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            var target = getObject('target', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            if (!isNullOrUndefined(target) && requestType === 'sorting' && target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                setValue('cancel', true, args);\n                return;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n                _this.notify('updateGridActions', args);\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData.slice();\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule',\n            'selectionModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return (e.parentUniqueID === record.uniqueID) || e.isSummaryRow;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        args.type = 'cancel';\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index].hasChildRecords) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","child","currentRecords","map","indexOf","setRowData","row","getRowByIndex","renderModule","cellRender","data","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","triggerChkChangeEvent","nextElementSibling","classList","contains","cancel","selectCheckboxes","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","columns","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","style","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","width","allowTextWrap","textContent","notify","checkboxElement","parseInt","summaryData","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","result","filterSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","totalRecordsCount","parentRecords","currentData","getUid","id","parentUniqueID","dataObj","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","toolbarClick","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","req","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","batchCancel","actionBegin","actionComplete","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","displayAction","targetEle","getElementsByClassName","collapseRemoteChild","this_1","rData","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageRoot","pagedResults","temp","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","previousNewRowPosition","crudAction","beginAdd","keyPressed","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","rowIndex_1","parentNode","primaryKeys_1","arg","updateRow","aggregateModule","formObj","saveArgs","previousData","previousValue","position","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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"}