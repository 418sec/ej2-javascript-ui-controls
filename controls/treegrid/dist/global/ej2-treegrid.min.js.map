{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                var virtualArgs = {};\n                if (_this.parent.enableVirtualization) {\n                    _this.remoteVirtualAction(virtualArgs);\n                }\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit) && this.grid.beginEdit[name] === 'bound triggerEJEvents') {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function' && beginEdit[name] === 'bound triggerEJEvents') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit) && this.grid.cellEdit[name] === 'bound triggerEJEvents') {\n                cellEdit = this.grid.cellEdit;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function' && cellEdit[name] === 'bound triggerEJEvents') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        if (args.cell.cellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({\n                data: args.rowData,\n                cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[0].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[0].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                if (this.parent.frozenRows || this.parent.frozenColumns) {\n                    actualIndex = this.batchIndex;\n                }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 1; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem][primaryKey]);\n                    var children = currentViewRecords[index][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                            currentViewRecords[index][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","getContentTable","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","events_1","boundedEvents","pop","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","focussedElement","activeElement","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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"}