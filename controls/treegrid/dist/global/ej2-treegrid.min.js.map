{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || !this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed')) {\n                        removeClass([rows[i]], 'e-treerowcollapsed');\n                        addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0];\n                    if (expandicon) {\n                        removeClass([expandicon], 'e-treegridcollapse');\n                        addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        this.grid.editModule.startEdit(row);\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        this.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            this.setProperties({ columns: this.columnModel }, true);\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","batchSaveAction","notify","events.crudAction","beforeBatchSaveAction","changedRecords","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","crudAction","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","totalRecordsCount","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","updateAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","ej2Popups","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","ej2Grids","gridRendered","setBlazorGUID","bindGridEvents","selectionModule","gridObserver","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cancel","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","beforeBatchSave","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","getSelectedRecords","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","saveCell","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","batchSave","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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ACrCE,IACIotB,WACD9Y,EAASxU,UAAW,gBAAa,IACpCE,IACIotB,WACD9Y,EAASxU,UAAW,eAAY,IACnCE,IACIotB,WACD9Y,EAASxU,UAAW,kBAAe,IACtCE,IACIotB,WACD9Y,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,gBAAa,IACpCE,IACIotB,WACD9Y,EAASxU,UAAW,eAAY,IACnCE,IACIotB,WACD9Y,EAASxU,UAAW,oBAAiB,IACxCE,IACIotB,WACD9Y,EAASxU,UAAW,gBAAa,IACpCE,IACIotB,WACD9Y,EAASxU,UAAW,wBAAqB,IAC5CE,IACIotB,WACD9Y,EAASxU,UAAW,sBAAmB,IAC1CE,IACIotB,WACD9Y,EAASxU,UAAW,wBAAqB,IAC5CE,IACIotB,WACD9Y,EAASxU,UAAW,mBAAgB,IACvCE,IACIotB,WACD9Y,EAASxU,UAAW,sBAAmB,IAC1CE,IACIotB,WACD9Y,EAASxU,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVwT,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,mBAAgB,IACvCE,IACIotB,WACD9Y,EAASxU,UAAW,kBAAe,IACtCE,IACIotB,WACD9Y,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,oBAAiB,IACxCE,IACIotB,WACD9Y,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,oBAAiB,IACxCE,IACIotB,WACD9Y,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,sBAAmB,IAC1CE,IACIotB,WACD9Y,EAASxU,UAAW,mBAAgB,IACvCE,IACIotB,WACD9Y,EAASxU,UAAW,sBAAmB,IAC1CE,IACIotB,WACD9Y,EAASxU,UAAW,qBAAkB,IACzCE,IACIotB,WACD9Y,EAASxU,UAAW,kBAAe,IACtCE,IACIotB,WACD9Y,EAASxU,UAAW,eAAY,IACnCE,IACIotB,WACD9Y,EAASxU,UAAW,iBAAc,IACrCE,IACIotB,WACD9Y,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"}