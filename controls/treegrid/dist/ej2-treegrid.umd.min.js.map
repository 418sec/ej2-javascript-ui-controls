{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var _this = this;\n        var rowIndex;\n        rowIndex = [];\n        rowIndex.push(rowElement.rowIndex);\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args, function (checkBoxArgs) {\n            if (!checkBoxArgs.cancel) {\n                _this.selectCheckboxes(rowIndex);\n            }\n        });\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            if (typeof (args.column.template) === 'object' && this.templateResult) {\n                cellElement.innerHTML = '';\n                appendChildren(cellElement, this.templateResult);\n                this.templateResult = null;\n            }\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData : this.dataSource;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = dm.dataSource.json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.grid.dataSource = this.dataSource;\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    TreeGrid.prototype.resetTemplates = function () {\n        for (var i = 0; i < this.columns.length; i++) {\n            if (this.columns[i].template) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid, 'Template');\n            }\n            if (this.columns[i].headerTemplate) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid + 'headerTemplate', 'HeaderTemplate');\n            }\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All')\n            || this.enableVirtualization) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return (e.parentUniqueID === record.uniqueID) || e.isSummaryRow;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rData = getObject('data', this.grid.contentModule.getRows()[i]);\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args);\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource;\n        for (var i = 0; i < this.parent.grid.dataSource.length; i++) {\n            data[i].index = i;\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index].hasChildRecords) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","setRowData","row","getRowByIndex","renderModule","cellRender","data","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","triggerChkChangeEvent","nextElementSibling","classList","contains","closest","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","rowIndex","_this","checked","cancel","rowData","trigger","events.checkboxChange","checkBoxArgs","selectCheckboxes","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","textContent","appendChildren","notify","checkboxElement","parseInt","summaryData","rowTemplate","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","Math","ceil","random","rowDetails","parentRow","rows","expandingTd","detailRowModule","events.expanded","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","events.actionComplete","totalRecordsCount","parentRecords","currentData","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","enableVirtualization","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.toolbarClick","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","isPrinting","extendedGridEvents","extendedGridEditEvents","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","events.cellSave","events.cellEdit","events.batchCancel","isBlazor","setTimeout","treeColumnRowTemplate","events.recordDoubleClick","events.detailDataBound","events.actionBegin","events.beginEdit","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","resetTemplates","expandCollapse","collapseArgs","events.collapsing","collapsingArgs","events.collapsed","resetBlazorTemplate","headerTemplate","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","events.localPagedExpandCollapse","displayAction","targetEle","detailrows","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","contentModule","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","this_1","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","dm_1","or","parents_1","floor","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","events.keyPressed","contentready","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","getRowObjectFromUID","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","scrollTop","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll"],"mappings":"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"}