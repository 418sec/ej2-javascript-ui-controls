{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/actions/column-menu.js","../src/treegrid/base/constant.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData, index)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                                if (!isNullOrUndefined(this.hierarchyData[index][this.parent.parentIdMapping]) && groupData.key === this.taskIds[index]) {\n                                    this.hierarchyData.splice(index, 1);\n                                    this.taskIds.splice(index, 1);\n                                }\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData, index) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var returns = false;\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        this.hierarchyData.splice(index, 1);\n                        this.taskIds.splice(index, 1);\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[i][this.parent.childMapping])) {\n                returns = this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData, index);\n            }\n        }\n        return returns;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                    var compFun = col.sortComparer && !this.isRemote() ?\n                        col.sortComparer.bind(col) :\n                        this.parent.grid.sortSettings.columns[srt].direction;\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        else if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n                this.isOnBatch = false;\n            }\n            this.enableToolbarItems('save');\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n            var saveArgs = {\n                type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                previousData: args.previousValue, row: row, target: args.cell\n            };\n            this.parent.trigger(events.actionComplete, saveArgs);\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","Print","GridPrint","addEventListener","on","events.printGridInit","printTreeGrid","removeEventListener","off","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","totalIconsWidth","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","width","cellElement","allowTextWrap","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","isSortAction","dataResults","sortedRecords","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","returns","childs","Math","ceil","random","rowDetails","parentRow","rows","events.expanded","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","count","totalRecordsCount","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","col","getColumnByField","compFun","sortComparer","bind","sortBy","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","selectedRowIndex","events.rowSelected","events.rowDeselected","events.toolbarClick","cancel","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","events.cellSave","events.cellEdit","mode","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","requestType","events.crudAction","newRowPosition","events.beginAdd","contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","events.collapsing","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","events.localPagedExpandCollapse","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","_loop_1","rData","this_1","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","_loop_2","parent_2","this_2","parent_3","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageRoot","pagedResults","temp","newResults","t","res","pageingDetails","propname","skip","size","pageSize","currentPage","take","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","events.keyPressed","events.doubleTap","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","request","toolbarID","cells","rowIndex_1","parentNode","primaryKeys_1","updateRow","formObj","querySelectorAll","saveArgs","previousData","previousValue","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","child","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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,EAASlS,UAAW,iBAAa,GACpCE,IACIiB,cACD+Q,EAASlS,UAAW,wBAAoB,GAC3CE,IACIiB,WAAS,OACV+Q,EAASlS,UAAW,iBAAa,GACpCE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,oBAAgB,GACvCE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,qBAAiB,GACxCE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,mBAAe,GACtCE,IACIiB,WAAS,SACV+Q,EAASlS,UAAW,cAAU,GACjCE,IACIiB,WAAS,SACV+Q,EAASlS,UAAW,aAAS,GAChCE,IACIiB,WAAS,QACV+Q,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,eAAW,GAClCE,IACImmB,WACDnU,EAASlS,UAAW,YAAQ,GAC/BE,IACImmB,WACDnU,EAASlS,UAAW,iBAAa,GACpCE,IACImmB,WACDnU,EAASlS,UAAW,gBAAY,GACnCE,IACImmB,WACDnU,EAASlS,UAAW,kBAAc,GACrCE,IACImmB,WACDnU,EAASlS,UAAW,iBAAa,GACpCE,IACImmB,WACDnU,EAASlS,UAAW,mBAAe,GACtCE,IACImmB,WACDnU,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,iBAAa,GACpCE,IACImmB,WACDnU,EAASlS,UAAW,gBAAY,GACnCE,IACImmB,WACDnU,EAASlS,UAAW,qBAAiB,GACxCE,IACImmB,WACDnU,EAASlS,UAAW,iBAAa,GACpCE,IACImmB,WACDnU,EAASlS,UAAW,yBAAqB,GAC5CE,IACImmB,WACDnU,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,yBAAqB,GAC5CE,IACImmB,WACDnU,EAASlS,UAAW,oBAAgB,GACvCE,IACImmB,WACDnU,EAASlS,UAAW,qBAAiB,GACxCE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,oBAAgB,GACvCE,IACImmB,WACDnU,EAASlS,UAAW,mBAAe,GACtCE,IACImmB,WACDnU,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,qBAAiB,GACxCE,IACImmB,WACDnU,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,qBAAiB,GACxCE,IACImmB,WACDnU,EAASlS,UAAW,oBAAgB,GACvCE,IACImmB,WACDnU,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,mBAAe,GACtCE,IACImmB,WACDnU,EAASlS,UAAW,gBAAY,GACnCE,IACImmB,WACDnU,EAASlS,UAAW,kBAAc,GACrCE,IACImmB,WACDnU,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,kBAAc,GACrCE,IACImmB,WACDnU,EAASlS,UAAW,kBAAc,GACrCE,IACImmB,WACDnU,EAASlS,UAAW,qBAAiB,GACxCE,IACImmB,WACDnU,EAASlS,UAAW,mBAAe,GACtCE,IACImmB,WACDnU,EAASlS,UAAW,oBAAgB,GACvCE,IACImmB,WACDnU,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,uBAAmB,GAC1CE,IACImmB,WACDnU,EAASlS,UAAW,wBAAoB,GAC3CE,IACIiB,YAAU,IACX+Q,EAASlS,UAAW,wBAAoB,GAC3CE,IACIimB,aAAY1hB,IACbyN,EAASlS,UAAW,yBAAqB,GAC5CE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,wBAAoB,GAC3CE,IACIiB,YAAS,IACV+Q,EAASlS,UAAW,sBAAkB,GACzCE,IACImmB,WACDnU,EAASlS,UAAW,wBAAoB,GAC3CE,IACImmB,WACDnU,EAASlS,UAAW,8BAA0B,GACjDE,IACImmB,WACDnU,EAASlS,UAAW,0BAAsB,GAC7CE,IACImmB,WACDnU,EAASlS,UAAW,gCAA4B,GACnDE,IACImmB,WACDnU,EAASlS,UAAW,yBAAqB,GAC5CE,IACImmB,WACDnU,EAASlS,UAAW,2BAAuB,GAC9CE,IACImmB,WAC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"}