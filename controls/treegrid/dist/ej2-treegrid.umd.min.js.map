{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/actions/column-menu.js","../src/treegrid/base/constant.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex)) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = data.expanded &&\n                    (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                    !this.parent.enableCollapseAll;\n                addClass([expandIcon], expand ? 'e-treegridexpand' : 'e-treegridcollapse');\n                container.appendChild(expandIcon);\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + container.querySelectorAll('.e-icons').length * 10 + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.isParent = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = new Query().select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.isParent = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                            }\n                            else {\n                                this.hierarchyData.splice(index, 1);\n                                this.taskIds.splice(index, 1);\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[this.parent.childMapping])) {\n                this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData);\n            }\n        }\n        return false;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (records) {\n        for (var rec = 0; rec < records.length; rec++) {\n            if (!records[rec][this.parent.parentIdMapping] && isNullOrUndefined(records[rec].index) && records[rec].index !== 0) {\n                records[rec].level = 0;\n                records[rec].index = Math.ceil(Math.random() * 1000);\n                records[rec].hasChildRecords = true;\n            }\n        }\n        return records;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = new Query();\n            var clonequries = this.parent.query.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.isParent.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, this.parent.grid.sortSettings.columns[srt].direction);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Row')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n            }\n        }\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            if (args.item.id === _this.grid.element.id + '_expandall') {\n                _this.expandAll();\n            }\n            else if (args.item.id === _this.grid.element.id + '_collapseall') {\n                _this.collapseAll();\n            }\n            _this.trigger(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                args.result = treeGrid.dataModule.updateParentRemoteData(args.result);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.columns = this.columnModel;\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.expandRow(null, records[i]);\n        }\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        for (var i = 0; i < records.length; i++) {\n            this.collapseRow(null, records[i]);\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.className.indexOf('e-gridrowindex') !== -1 && e.className.indexOf('level0') !== -1;\n        });\n        this.isExpandAll = true;\n        for (var i = 0; i < rows.length; i++) {\n            action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[rowIndex];\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        //this.parent.grid.toolbarModule.destroy();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    setValue('parentItem', parentRecord, item);\n                    var level = getObject('level', parentRecord);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', parentRecord);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    var childRecords = getObject('childRecords', parentRecord);\n                    childRecords.push(item);\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        return cellElement.innerHTML;\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], false);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], true);\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.closeEdit();\n                this.isOnBatch = false;\n            }\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            if (isNullOrUndefined(row)) {\n                var key_1 = this.parent.getPrimaryKeyFieldNames()[0];\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[key_1] === args.rowData[key_1]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], true);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], false);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n            }\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","Print","GridPrint","addEventListener","on","events.printGridInit","printTreeGrid","removeEventListener","off","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","row","getAttribute","expandStateMapping","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","expandIcon","expand","cellElement","allowTextWrap","width","querySelectorAll","textContent","cell","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","isParent","hierarchyData","isSortAction","dataResults","sortedRecords","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","childs","updateParentRemoteData","Math","ceil","random","rowDetails","parentRow","rows","events.expanded","clonequries","queries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","count","pageSettings","totalRecordsCount","dataManagerSuccess","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","sortBy","allowPaging","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","bind","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","col","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","height","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","selectedRowIndex","events.rowSelected","events.rowDeselected","item","events.toolbarClick","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","events.cellSave","cancel","events.cellEdit","mode","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","requestType","events.crudAction","newRowPosition","events.beginAdd","contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","addOnPersist","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","rowIndex","columnIndex","getColumnByField","iterateArrayOrObject","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","expandCollapse","collapseArgs","events.collapsing","events.collapsed","expandAtLevel","collapseAtLevel","expandCollapseAll","isChild","gridRows","pageSizeMode","events.localPagedExpandCollapse","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","_loop_1","rData","this_1","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","selectRow","isToggle","selectRows","rowIndexes","clearSelection","selectCell","cellIndex","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","getDataModule","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","_loop_2","parent_2","this_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","generateQuery","event.beforeExcelExport","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","sumData","forEach","toLowerCase","val","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","events.keyPressed","events.doubleTap","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","toolbarID","cells","rowIndex_1","parentNode","key_1","updateRow","formObj","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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YAAS,IACVsQ,EAASzR,UAAW,oBAAgB,GACvCE,IACIiB,YAAS,IACVsQ,EAASzR,UAAW,qBAAiB,GACxCE,IACIiB,YAAS,IACVsQ,EAASzR,UAAW,mBAAe,GACtCE,IACIiB,WAAS,SACVsQ,EAASzR,UAAW,cAAU,GACjCE,IACIiB,WAAS,SACVsQ,EAASzR,UAAW,aAAS,GAChCE,IACIiB,WAAS,QACVsQ,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,eAAW,GAClCE,IACImkB,WACD5S,EAASzR,UAAW,YAAQ,GAC/BE,IACImkB,WACD5S,EAASzR,UAAW,iBAAa,GACpCE,IACImkB,WACD5S,EAASzR,UAAW,gBAAY,GACnCE,IACImkB,WACD5S,EAASzR,UAAW,kBAAc,GACrCE,IACImkB,WACD5S,EAASzR,UAAW,iBAAa,GACpCE,IACImkB,WACD5S,EAASzR,UAAW,mBAAe,GACtCE,IACImkB,WACD5S,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,iBAAa,GACpCE,IACImkB,WACD5S,EAASzR,UAAW,gBAAY,GACnCE,IACImkB,WACD5S,EAASzR,UAAW,qBAAiB,GACxCE,IACImkB,WACD5S,EAASzR,UAAW,iBAAa,GACpCE,IACImkB,WACD5S,EAASzR,UAAW,yBAAqB,GAC5CE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,yBAAqB,GAC5CE,IACImkB,WACD5S,EAASzR,UAAW,oBAAgB,GACvCE,IACImkB,WACD5S,EAASzR,UAAW,qBAAiB,GACxCE,IACIiB,YAAS,IACVsQ,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,oBAAgB,GACvCE,IACImkB,WACD5S,EAASzR,UAAW,mBAAe,GACtCE,IACImkB,WACD5S,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,qBAAiB,GACxCE,IACImkB,WACD5S,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,qBAAiB,GACxCE,IACImkB,WACD5S,EAASzR,UAAW,oBAAgB,GACvCE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,mBAAe,GACtCE,IACImkB,WACD5S,EAASzR,UAAW,gBAAY,GACnCE,IACImkB,WACD5S,EAASzR,UAAW,kBAAc,GACrCE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,kBAAc,GACrCE,IACImkB,WACD5S,EAASzR,UAAW,kBAAc,GACrCE,IACImkB,WACD5S,EAASzR,UAAW,qBAAiB,GACxCE,IACImkB,WACD5S,EAASzR,UAAW,mBAAe,GACtCE,IACImkB,WACD5S,EAASzR,UAAW,oBAAgB,GACvCE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,wBAAoB,GAC3CE,IACIiB,YAAU,IACXsQ,EAASzR,UAAW,wBAAoB,GAC3CE,IACIikB,aAAY1f,IACbgN,EAASzR,UAAW,yBAAqB,GAC5CE,IACIiB,YAAS,IACVsQ,EAASzR,UAAW,wBAAoB,GAC3CE,IACIiB,YAAS,IACVsQ,EAASzR,UAAW,sBAAkB,GACzCE,IACImkB,WACD5S,EAASzR,UAAW,wBAAoB,GAC3CE,IACImkB,WACD5S,EAASzR,UAAW,8BAA0B,GACjDE,IACImkB,WACD5S,EAASzR,UAAW,0BAAsB,GAC7CE,IACImkB,WACD5S,EAASzR,UAAW,gCAA4B,GACnDE,IACImkB,WACD5S,EAASzR,UAAW,yBAAqB,GAC5CE,IACImkB,WACD5S,EAASzR,UAAW,2BAAuB,GAC9CE,IACImkB,WACD5S,EAASzR,UAAW,uBAAmB,GAC1CE,IACImkB,WACD5S,EAASzR,UAAW,yBAAqB,GAC5CyR,EAAWvR,IACPokB,yBACD7S,IAEL8S,aC7zDEC,GAAyB,WA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"}