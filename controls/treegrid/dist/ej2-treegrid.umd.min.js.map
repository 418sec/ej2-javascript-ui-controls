{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/actions/column-menu.js","../src/treegrid/base/constant.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentIndex) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + container.querySelectorAll('.e-icons').length * 10 + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.isParent = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = new Query().select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.isParent = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                            }\n                            else {\n                                this.hierarchyData.splice(index, 1);\n                                this.taskIds.splice(index, 1);\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[this.parent.childMapping])) {\n                this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData);\n            }\n        }\n        return false;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (records) {\n        for (var rec = 0; rec < records.length; rec++) {\n            if (!records[rec][this.parent.parentIdMapping] && isNullOrUndefined(records[rec].index) && records[rec].index !== 0) {\n                records[rec].level = 0;\n                records[rec].index = Math.ceil(Math.random() * 1000);\n                records[rec].hasChildRecords = true;\n            }\n        }\n        return records;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = isNullOrUndefined(this.parent.grid.query) ?\n                new Query() : this.parent.grid.query;\n            var clonequries = this.parent.query.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.isParent.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, this.parent.grid.sortSettings.columns[srt].direction);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Row')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            if (args.item.id === _this.grid.element.id + '_expandall') {\n                _this.expandAll();\n            }\n            else if (args.item.id === _this.grid.element.id + '_collapseall') {\n                _this.collapseAll();\n            }\n            _this.trigger(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                args.result = treeGrid.dataModule.updateParentRemoteData(args.result);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    if (args.requestType === 'save' && _this.editSettings.mode === 'Cell') {\n                        args.column = _this.getColumnByField(_this.cellEditedColumn);\n                    }\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        //this.parent.grid.toolbarModule.destroy();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            this.enableToolbarItems();\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function () {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], false);\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], true);\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.closeEdit();\n                this.isOnBatch = false;\n            }\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            if (isNullOrUndefined(row)) {\n                var key_1 = this.parent.getPrimaryKeyFieldNames()[0];\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[key_1] === args.rowData[key_1]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            this.parent.cellEditedColumn = args.columnName;\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.enableToolbarItems();\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n            }\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","Print","GridPrint","addEventListener","on","events.printGridInit","printTreeGrid","removeEventListener","off","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","width","cellElement","allowTextWrap","querySelectorAll","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","isParent","hierarchyData","isSortAction","dataResults","sortedRecords","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","childs","updateParentRemoteData","Math","ceil","random","rowDetails","parentRow","rows","events.expanded","clonequries","queries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","count","totalRecordsCount","dataManagerSuccess","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","sortBy","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","bind","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","col","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","height","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","selectedRowIndex","events.rowSelected","events.rowDeselected","item","events.toolbarClick","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","events.cellSave","cancel","events.cellEdit","mode","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","requestType","getColumnByField","cellEditedColumn","events.crudAction","newRowPosition","events.beginAdd","contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","iterateArrayOrObject","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","events.collapsing","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","events.localPagedExpandCollapse","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","_loop_1","rData","this_1","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","getDataModule","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","_loop_2","parent_2","this_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","generateQuery","event.beforeExcelExport","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","events.keyPressed","events.doubleTap","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","toolbarID","cells","rowIndex_1","parentNode","key_1","updateRow","formObj","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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"}