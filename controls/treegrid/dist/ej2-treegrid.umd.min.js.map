{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/rowdragdrop.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        if (parentData.childRecords.indexOf(child) === -1) {\n            parentData.childRecords.push(child);\n        }\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var childSummary;\n        for (var i = 0; i < summaryLength; i++) {\n            if (this.parent.aggregates[i].showChildSummary) {\n                childSummary = true;\n                break;\n            }\n        }\n        if (childSummary) {\n            var checkedLen = this.parent.getSelectedRowIndexes().length;\n            var totalRecords = [];\n            var isSummaryRow = 'isSummaryRow';\n            for (var i = 0; i < this.parent.getCurrentViewRecords().length; i++) {\n                if (!this.parent.getCurrentViewRecords()[i][isSummaryRow]) {\n                    totalRecords.push(this.parent.getCurrentViewRecords()[i]);\n                }\n            }\n            if (checkedLen === totalRecords.length) {\n                var getCheckAllBox = 'getCheckAllBox';\n                var spanEle = this.parent.grid.selectionModule[getCheckAllBox]().nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                addClass([spanEle], ['e-check']);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                for (var i = 0; i < childData.length; i++) {\n                    if (childData[i].hasChildRecords) {\n                        this.updateParentSelection(childData[i]);\n                    }\n                    else {\n                        this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                    }\n                }\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            if (args.row.querySelector('.e-gridchkbox')) {\n                args.row.querySelector('.e-gridchkbox').innerHTML = '';\n            }\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit) && this.grid.beginEdit[name] === 'bound triggerEJEvents') {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function' && beginEdit[name] === 'bound triggerEJEvents') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit) && this.grid.cellEdit[name] === 'bound triggerEJEvents') {\n                cellEdit = this.grid.cellEdit;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function' && cellEdit[name] === 'bound triggerEJEvents') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && this.parent.editSettings.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeColumnIndexValue = void 0;\n            if (this.parent.allowRowDragAndDrop) {\n                treeColumnIndexValue = this.parent.treeColumnIndex + 1;\n            }\n            else {\n                treeColumnIndexValue = this.parent.treeColumnIndex;\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[treeColumnIndexValue],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                if (records[index].expanded) {\n                    index += findChildrenRecords(records[index]).length;\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            if (!isNullOrUndefined(spanContent.children) && spanContent.children.length >= 1\n                && spanContent.children[0].classList.contains('e-treecolumn-container')) {\n                spanContent.children[0].style.display = 'inline-block';\n                spanContent.children[0].style.verticalAlign = 'middle';\n                ele.style.display = 'inline-block';\n            }\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                        break;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","splice","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","childSummary","summaryLength","aggregates","showChildSummary","checkedLen","getSelectedRowIndexes","totalRecords","spanEle","selectionModule","removeClass","addClass","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","container","containerELe","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","ej2Grids","gridRendered","setBlazorGUID","setColIndex","bindGridEvents","gridObserver","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.beforeBatchSave","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","toString","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","f","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","document","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","tObj","saveCell","dropIndex","getToolbar","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","Resize","GridResize","fName","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeColumnIndexValue","form","parentNode","rowIndex_1","primaryKeys_1","blazorTemplates","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateRow","updateIndex","data1","parentIndex","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","childIndex","editFormValidate","destroyForm","beforeBatchSaveAction","batchSaveAction","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","scrollTop","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropRows","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","removeChild","spanContent","paddingLeft","verticalAlign","errorelem","border","box","body","docElem","documentElement","window","pageYOffset","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","recordLevel","childItem","deletedRow","removeRecords","flatParentData","removeChildItem","idz","recordIndex_1","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule"],"mappings":"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"}