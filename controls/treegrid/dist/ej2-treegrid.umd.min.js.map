{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                var virtualArgs = {};\n                if (_this.parent.enableVirtualization) {\n                    _this.remoteVirtualAction(virtualArgs);\n                }\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit) && this.grid.beginEdit[name] === 'bound triggerEJEvents') {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function' && beginEdit[name] === 'bound triggerEJEvents') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit) && this.grid.cellEdit[name] === 'bound triggerEJEvents') {\n                cellEdit = this.grid.cellEdit;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function' && cellEdit[name] === 'bound triggerEJEvents') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        if (args.cell.cellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({\n                data: args.rowData,\n                cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[0].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[0].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                if (this.parent.frozenRows || this.parent.frozenColumns) {\n                    actualIndex = this.batchIndex;\n                }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 1; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem][primaryKey]);\n                    var children = currentViewRecords[index][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                            currentViewRecords[index][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","getContentTable","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","focussedElement","activeElement","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule"],"mappings":"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"}