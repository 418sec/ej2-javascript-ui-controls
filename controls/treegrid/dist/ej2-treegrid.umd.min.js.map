{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/actions/column-menu.js","../src/treegrid/base/constant.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        parents.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = parents.filter(function (e) { return e.uniqueID === parentRecord.parentItem.uniqueID; })[0];\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    var childRecords = records.childRecords;\n    for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n        datas.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n            datas = datas.concat(findChildrenRecords(childRecords[i]));\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.parentIndex;\n    delete value.level;\n    return value;\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentIndex) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentIndex;\n            var collapsed = !(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = data.expanded;\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentIndex) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            var cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getObject, getUid } from '@syncfusion/ej2-grids';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.rootIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n        this.parent.on('createSortRecords', this.createSorting, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n        this.parent.off('createSortRecords', this.createSorting);\n    };\n    Sort.prototype.createSorting = function (data) {\n        this.flatSortedData = [];\n        this.createSortRecords(data);\n    };\n    Sort.prototype.createSortRecords = function (data) {\n        var sortData = getObject('modifiedData', data);\n        var parentRecords = getObject('parentRecords', data);\n        var parentIndex = getObject('parentIndex', data);\n        var filteredResult = getObject('filteredResult', data);\n        var dataLength = Object.keys(sortData).length;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            var currentSortData = sortData[i];\n            this.storedIndex++;\n            var level = 0;\n            currentSortData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                currentSortData.childRecords =\n                    currentSortData[this.parent.childMapping];\n                currentSortData.hasChildRecords = true;\n                currentSortData.expanded = true;\n            }\n            if (isNullOrUndefined(currentSortData.uniqueID)) {\n                currentSortData.uniqueID = getUid(this.parent.element.id + '_data_');\n            }\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentSortData.parentItem = parentData;\n                currentSortData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentSortData.parentIndex = parentIndex;\n            }\n            currentSortData.level = level;\n            if (isNullOrUndefined(currentSortData.parentIndex)) {\n                this.rootIndex = currentSortData.index;\n            }\n            else {\n                currentSortData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentSortData[this.parent.parentIdMapping]) ||\n                currentSortData.parentItem) {\n                this.flatSortedData.push(currentSortData);\n            }\n            if (!isNullOrUndefined(currentSortData[this.parent.childMapping])) {\n                this.createSortRecords({ modifiedData: currentSortData[this.parent.childMapping], parentRecords: currentSortData,\n                    parentIndex: this.storedIndex, filteredResult: filteredResult });\n            }\n        }\n        this.parent.notify('Sorting', { sortedData: this.flatSortedData, filteredData: filteredResult });\n    };\n    Sort.prototype.createdSortedRecords = function (sortingElements) {\n        var data = getObject('modifiedData', sortingElements);\n        var sortQuery = getObject('srtQry', sortingElements);\n        var parent = getObject('parent', sortingElements);\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            if (!isNullOrUndefined(data[i].childRecords) || !isNullOrUndefined(data[i][parent.childMapping])) {\n                var sortedData = void 0;\n                var sortchildData = void 0;\n                if (isNullOrUndefined(data[i].childRecords)) {\n                    sortedData = new DataManager(data[i][parent.childMapping]).executeLocal(sortQuery);\n                }\n                else {\n                    sortedData = new DataManager(data[i].childRecords).executeLocal(sortQuery);\n                }\n                sortchildData = sortedData;\n                if (sortchildData.length > 0) {\n                    data[i][parent.childMapping] = sortchildData;\n                }\n                this.createdSortedRecords({ modifiedData: sortchildData, parent: parent, srtQry: sortQuery });\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.sortSettings = this.parent.grid.sortSettings;\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, iterateExtend, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.rootIndex = -1;\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('Sorting', this.sortedRecords, this);\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.off('Sorting', this.sortedRecords);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData: DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this).parent;\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData, true));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            var mappingData = new DataManager(data).executeLocal(new Query()\n                .where(this.parent.parentIdMapping, 'notequal', null)\n                .group(this.parent.parentIdMapping));\n            //let selfData: Object[] = [];\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        var childData = iterateExtend(groupData.items);\n                        if (this.isSelfReference) {\n                            if (!this.updateChildHierarchy(this.hierarchyData, this.hierarchyData[index], childData, index)) {\n                                this.hierarchyData[index][this.parent.childMapping] = childData;\n                                if (!isNullOrUndefined(this.hierarchyData[index][this.parent.parentIdMapping]) && groupData.key === this.taskIds[index]) {\n                                    this.hierarchyData.splice(index, 1);\n                                    this.taskIds.splice(index, 1);\n                                }\n                            }\n                        }\n                        else {\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                        }\n                    }\n                }\n            }\n            this.createRecords(this.hierarchyData);\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.updateChildHierarchy = function (data, currentData, childData, index) {\n        var parentID = currentData[this.parent.parentIdMapping];\n        var returns = false;\n        var id = currentData[this.parent.idMapping];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][this.parent.idMapping] === parentID) {\n                var childs = data[i][this.parent.childMapping];\n                for (var j = 0; j < childs.length; j++) {\n                    if (childs[j][this.parent.idMapping] === id) {\n                        childs[j][this.parent.childMapping] = childData;\n                        this.hierarchyData.splice(index, 1);\n                        this.taskIds.splice(index, 1);\n                        return true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(data[i][this.parent.childMapping])) {\n                returns = this.updateChildHierarchy(data[i][this.parent.childMapping], currentData, childData, index);\n            }\n        }\n        return returns;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            for (var rec = 0; rec < records.length; rec++) {\n                if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                    && (isNullOrUndefined(records[rec].index))) {\n                    records[rec].level = 0;\n                    records[rec].index = Math.ceil(Math.random() * 1000);\n                    records[rec].hasChildRecords = true;\n                }\n            }\n        }\n        args.result = records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    result[r].parentIndex = rowDetails.record.index;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords, parentIndex) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                    ? currentData[this.parent.expandStateMapping] : true;\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n                currentData.parentIndex = parentIndex;\n            }\n            currentData.level = level;\n            if (isNullOrUndefined(currentData.parentIndex)) {\n                this.rootIndex = currentData.index;\n            }\n            else {\n                currentData.rootIndex = this.rootIndex;\n            }\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                this.createRecords(currentData[this.parent.childMapping], currentData, this.storedIndex);\n            }\n        }\n        if (!Object.keys(data).length) {\n            this.parent.flatData = [];\n        }\n    };\n    DataManipulation.prototype.sortedRecords = function (data) {\n        var sortedData = getObject('sortedData', data);\n        this.sortedData = [];\n        if (this.parent.grid.filterSettings.columns.length > 0) {\n            var sortedData_1 = getObject('sortedData', data);\n            var filteredData = getObject('filteredData', data);\n            for (var i = 0, len = Object.keys(sortedData_1).length; i < len; i++) {\n                for (var j = 0, sortlen = Object.keys(filteredData).length; j < sortlen; j++) {\n                    var sortData = getObject('uniqueID', sortedData_1[i]);\n                    var filterData = getObject('uniqueID', filteredData[j]);\n                    if (sortData === filterData) {\n                        this.sortedData.push(sortedData_1[i]);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0, len = Object.keys(sortedData).length; i < len; i++) {\n                this.sortedData.push(sortedData[i]);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var results = this.parent.flatData;\n        var count = this.parent.flatData.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(this.parent.flatData).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action = 'action';\n            var collpasedIndexes = [];\n            if (args[action] !== 'collapse' && args[action] !== 'expand') {\n                if (!this.isSelfReference && this.parent.childMapping.length > 0) {\n                    parentData = iterateExtend(this.parent.dataSource);\n                }\n                else {\n                    parentData = iterateExtend(this.parent.parentData);\n                }\n                var sortedData = void 0;\n                var query = getObject('query', args);\n                this.parent.sortModule = new Sort(this.parent);\n                var srtQry = new Query();\n                for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                    var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                    var compFun = col.sortComparer && !this.isRemote() ?\n                        col.sortComparer.bind(col) :\n                        this.parent.grid.sortSettings.columns[srt].direction;\n                    srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n                }\n                var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n                sortedData = modifiedData;\n                this.parent.notify('createSort', { modifiedData: modifiedData, parent: this.parent, srtQry: srtQry });\n                this.parent.notify('createSortRecords', {\n                    modifiedData: modifiedData,\n                    parentRecords: null, parentIndex: null, filteredResult: results\n                });\n            }\n            results = this.sortedData;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0) {\n                var isSort = false;\n                var query = getObject('query', args);\n                var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        if (this.parent.allowPaging) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        /*if (isNullOrUndefined(this.dataResults.result)) {\n          args.result = <ITreeData[]>results;\n          args.count = count;\n        } else {\n          args.result = <ITreeData[]>this.dataResults.result;\n          args.count = this.dataResults.count;\n        }*/\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.grid = new Grid();\n        return _this;\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'AddRow',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    this.expandCollapseRequest(collapsetarget.querySelector('.e-icons'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    this.expandCollapseRequest(expandtarget.querySelector('.e-icons'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.convertTreeData(this.dataSource);\n        this.initialRender = true;\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.grid.dataSource = isRemoteData(this) ? this.dataSource : this.flatData;\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.columns = this.getGridColumns();\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid)) {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.trigger(events.cellEdit, args);\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && _this.grid.allowFiltering && _this.grid.filterSettings.columns.length === 0) {\n                _this.notify('clearFilters', { flatData: _this.flatData });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.updateColumnModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (_this.isLocalData) {\n                if ((args.requestType === 'delete' || args.requestType === 'save')) {\n                    _this.notify(events.crudAction, { value: args.data, action: args.action || args.requestType });\n                }\n                if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                    _this.notify(events.beginAdd, args);\n                }\n                if (args.requestType === 'batchsave') {\n                    _this.notify(events.batchSave, args);\n                }\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = this.triggerEvents.bind(this);\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function () {\n        var column = this.columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns();\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    this.grid.dataSource = this.flatData.slice();\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    TreeGrid.prototype.addRecord = function (data, index) {\n        this.grid.editModule.addRecord(data, index);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        this.setProperties({ columns: this.columnModel }, true);\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns();\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        var rowInfo = this.grid.getRowInfo(target);\n        var record = rowInfo.rowData;\n        if (target.classList.contains('e-treegridexpand')) {\n            this.collapseRow(rowInfo.row, record);\n        }\n        else {\n            this.expandRow(rowInfo.row, record);\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('expand', row, record);\n        if (!(isRemoteData(this) && !isOffline(this))) {\n            var collapseArgs = { data: record, row: row };\n            this.trigger(events.expanded, collapseArgs);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args);\n        if (args.cancel) {\n            return;\n        }\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        this.trigger(events.collapsed, collapseArgs);\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            var rec = this.flatData.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All') {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = record.index;\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = record.childRecords;\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var _loop_1 = function (i) {\n            var rData = this_1.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                removeClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridexpand');\n                addClass([rows[i].getElementsByClassName('e-icons')[0]], 'e-treegridcollapse');\n                var cRow = this_1.getRows().filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1));\n                });\n                this_1.collapseRemoteChild(cRow);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.treeColumn = treeColumn;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n        this.parent.on('setColumnIndex', this.setTreeColumnIndex, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n        this.parent.off('setColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        this.treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n    };\n    Reorder.prototype.setTreeColumnIndex = function () {\n        var treeIndex;\n        for (var f = 0; f < this.parent.columns.length; f++) {\n            var treeColumnfield = getObject('field', this.treeColumn);\n            var parentColumnfield = getObject('field', this.parent.columns[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n            }\n        }\n        this.parent.treeColumnIndex = treeIndex;\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.filterRootIndex = -1;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        var _loop_1 = function (f) {\n            var rec = this_1.flatFilteredData[f];\n            this_1.addParentRecord(rec);\n            if (this_1.parent.filterSettings.hierarchyMode === 'Child' ||\n                this_1.parent.filterSettings.hierarchyMode === 'None' || this_1.parent.searchSettings.hierarchyMode === 'Child' ||\n                this_1.parent.searchSettings.hierarchyMode === 'None') {\n                this_1.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this_1.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = this_1.flatFilteredData.filter(function (e) {\n                    return e.uniqueID === rec.parentItem.uniqueID;\n                })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        };\n        var this_1 = this;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            _loop_1(f);\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = this.parent.flatData.filter(function (e) { return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = getObject('childRecords', childRec[count]);\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                this.filteredResult.push(childRec[count]);\n                isExist = true;\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        var _loop_2 = function (c) {\n            var parent_2 = this_2.parent.flatData.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = this_2.filteredResult.filter(function (e) { return e.uniqueID === record[c].parentUniqueID; })[0];\n                setValue('filterLevel', parent_3.filterLevel + 1, record[c]);\n                record[c].filterRootIndex = this_2.filterRootIndex;\n            }\n            else {\n                setValue('filterLevel', 0, record[c]);\n                this_2.filterRootIndex = record[c].filterIndex = c;\n                record[c].filterIndex = this_2.filterRootIndex;\n                this_2.filteredParentRecs.push(record[c]);\n            }\n        };\n        var this_2 = this;\n        for (var c = 0; c < len; c++) {\n            _loop_2(c);\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = getObject('filterLevel', currentRecord);\n            if (fLevel || fLevel === 0) {\n                var ischild = getObject('childRecords', currentRecord);\n                if (!isNullOrUndefined(ischild) && ischild.length) {\n                    setValue('hasFilteredChildRecords', true, currentRecord);\n                }\n                setValue('filterLevel', null, currentRecord);\n                setValue('filterIndex', null, currentRecord);\n                setValue('filterRootIndex', null, currentRecord);\n            }\n        }\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.flatData;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulateExportProperties(excelExportProperties, dataSource, _this.isLocal() ? null : e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if (this.parent.grid.sortSettings.columns.length === 0 &&\n                (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            var args = Object();\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.flatData;\n        var prop = Object();\n        setValue('cancel', false, prop);\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                _this.manipulatePdfProperties(pdfExportProperties, dtSrc, isLocal ? null : e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        if (isNullOrUndefined(queryResult)) {\n            if ((this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key)\n                && this.parent.grid.sortSettings.columns.length === 0) {\n                dtSrc = this.parent.filterModule.filteredResult;\n            }\n        }\n        else {\n            this.parent.parentData = [];\n            //count not required for this query\n            var args = {};\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n            this.parent.notify('dataProcessor', args);\n            //args = this.parent.dataModule.dataProcessor(args);\n            args = this.dataResults;\n            dtSrc = isNullOrUndefined(args.result)\n                ? this.parent.flatData.slice(0) : args.result;\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp_1 = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp_1 = dm.executeLocal(query);\n            pageingDetails.count = temp_1.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp_1 = dm.executeLocal(query);\n            var child = [];\n            var _loop_1 = function (r) {\n                child = pageingDetails.result.filter(function (e) {\n                    if (!isNullOrUndefined(temp_1[r].filterIndex)) {\n                        return e.filterRootIndex === temp_1[r].filterIndex;\n                    }\n                    else {\n                        return e.rootIndex === temp_1[r].index;\n                    }\n                });\n                for (var c = 0; c < child.length; c++) {\n                    temp_1.splice(r + c + 1, 0, child[c]);\n                }\n            };\n            for (var r = 0; r < temp_1.length; r++) {\n                _loop_1(r);\n            }\n            pageingDetails.result = temp_1;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        else if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('parentIndex', index, item);\n                    setValue('isSummaryRow', true, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { getPlainData, extendArray } from '../utils';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.editAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.editAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.parent.grid.editSettings.mode = 'Batch';\n            this.parent.grid.dataBind();\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.renderModule.cellRender({\n                data: this.parent.grid.getSelectedRecords()[0],\n                cell: this.parent.grid.getSelectedRows()[0].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.parent.grid.editSettings.mode = 'Normal';\n            this.parent.grid.dataBind();\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = row.rowIndex;\n            }\n            row = this.parent.grid.getRows()[rowIndex_1];\n            this.parent.grid.editModule.updateRow(rowIndex_1, args.rowData);\n            this.parent.grid.editModule.formObj.destroy();\n            if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                this.parent.grid.editSettings.mode = 'Normal';\n                this.parent.grid.dataBind();\n                this.isOnBatch = false;\n            }\n            this.enableToolbarItems('save');\n            removeClass([row], ['e-editedrow', 'e-batchrow']);\n            removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n            this.editAction({ value: args.rowData, action: 'edit' });\n            var saveArgs = {\n                type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                previousData: args.previousValue, row: row, target: args.cell\n            };\n            this.parent.trigger(events.actionComplete, saveArgs);\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded)) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                args.data = data.concat(findChildrenRecords(data[i]));\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentIndex = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIndex = currentData[this.addRowIndex].parentIndex;\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentIndex = dataIndex;\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    index += findChildrenRecords(currentData[this.addRowIndex]).length;\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentIndex = parentIndex;\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentIndex)) {\n                            this.updateParentRow(key, value.parentItem, 'add', value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        return args;\n    };\n    Edit.prototype.addAction = function (details, treeData) {\n        var value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        value = extend({}, details.value);\n        value = getPlainData(value);\n        switch (this.parent.editSettings.newRowPosition) {\n            case 'Top':\n                treeData.unshift(value);\n                isSkip = true;\n                break;\n            case 'Bottom':\n                treeData.push(value);\n                isSkip = true;\n                break;\n            case 'Above':\n                value = currentViewRecords[this.addRowIndex + 1];\n                break;\n            case 'Below':\n            case 'Child':\n                value = currentViewRecords[this.addRowIndex];\n                if (this.selectedIndex === -1) {\n                    treeData.unshift(value);\n                    isSkip = true;\n                }\n        }\n        return { value: value, isSkip: isSkip };\n    };\n    Edit.prototype.editAction = function (details) {\n        var _this = this;\n        var value = details.value;\n        var action = details.action;\n        if (action === 'save') {\n            action = 'edit';\n        }\n        var i;\n        var j;\n        var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var treeData = this.parent.dataSource instanceof DataManager ?\n            this.parent.dataSource.dataSource.json : this.parent.dataSource;\n        var modifiedData = [];\n        var originalData = value;\n        var isSkip = false;\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        if (action === 'add') {\n            var addAct = this.addAction(details, treeData);\n            value = addAct.value;\n            isSkip = addAct.isSkip;\n        }\n        if (value instanceof Array) {\n            modifiedData = extendArray(value);\n        }\n        else {\n            modifiedData.push(extend({}, value));\n        }\n        if (!isSkip && (action !== 'add' ||\n            (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom'))) {\n            for (var k = 0; k < modifiedData.length; k++) {\n                var keys = Object.keys(modifiedData[k]);\n                i = treeData.length;\n                var _loop_1 = function () {\n                    if (treeData[i][key] === modifiedData[k][key]) {\n                        if (action === 'delete') {\n                            var currentData_1 = treeData[i];\n                            treeData.splice(i, 1);\n                            if (this_1.isSelfReference) {\n                                if (!isNullOrUndefined(currentData_1[this_1.parent.parentIdMapping])) {\n                                    var parentData = this_1.parent.flatData.filter(function (e) {\n                                        return e[_this.parent.idMapping] === currentData_1[_this.parent.parentIdMapping];\n                                    })[0];\n                                    var childRecords = parentData ? parentData[this_1.parent.childMapping] : [];\n                                    for (var p = childRecords.length - 1; p >= 0; p--) {\n                                        if (childRecords[p][this_1.parent.idMapping] === currentData_1[this_1.parent.idMapping]) {\n                                            childRecords.splice(p, 1);\n                                            if (!childRecords.length) {\n                                                parentData.hasChildRecords = false;\n                                                this_1.updateParentRow(key, parentData, action);\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        }\n                        else {\n                            if (action === 'edit') {\n                                for (j = 0; j < keys.length; j++) {\n                                    if (treeData[i].hasOwnProperty(keys[j])) {\n                                        treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    }\n                                }\n                            }\n                            else if (action === 'add') {\n                                var index = void 0;\n                                if (this_1.parent.editSettings.newRowPosition === 'Child') {\n                                    if (this_1.isSelfReference) {\n                                        originalData[this_1.parent.parentIdMapping] = treeData[i][this_1.parent.idMapping];\n                                        treeData.splice(i + 1, 0, originalData);\n                                    }\n                                    else {\n                                        if (!treeData[i].hasOwnProperty(this_1.parent.childMapping)) {\n                                            treeData[i][this_1.parent.childMapping] = [];\n                                        }\n                                        treeData[i][this_1.parent.childMapping].push(originalData);\n                                        this_1.updateParentRow(key, treeData[i], action);\n                                    }\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Below') {\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else if (!this_1.addRowIndex) {\n                                    index = 0;\n                                    treeData.splice(index, 0, originalData);\n                                }\n                                else if (this_1.parent.editSettings.newRowPosition === 'Above') {\n                                    treeData.splice(i, 0, originalData);\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else if (!isNullOrUndefined(treeData[i][this_1.parent.childMapping])) {\n                        if (this_1.removeChildRecords(treeData[i][this_1.parent.childMapping], modifiedData[k], action, key, originalData)) {\n                            this_1.updateParentRow(key, treeData[i], action);\n                        }\n                    }\n                };\n                var this_1 = this;\n                while (i-- && i >= 0) {\n                    var state_1 = _loop_1();\n                    if (state_1 === \"break\")\n                        break;\n                }\n            }\n        }\n    };\n    Edit.prototype.removeChildRecords = function (childRecords, modifiedData, action, key, originalData) {\n        var isChildAll = false;\n        var j = childRecords.length;\n        while (j-- && j >= 0) {\n            if (childRecords[j][key] === modifiedData[key] ||\n                (this.isSelfReference && childRecords[j][this.parent.parentIdMapping] === modifiedData[this.parent.idMapping])) {\n                if (action === 'edit') {\n                    var keys = Object.keys(modifiedData);\n                    for (var i = 0; i < keys.length; i++) {\n                        if (childRecords[j].hasOwnProperty(keys[i])) {\n                            childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        }\n                    }\n                    break;\n                }\n                else if (action === 'add') {\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        if (this.isSelfReference) {\n                            originalData[this.parent.parentIdMapping] = childRecords[j][this.parent.idMapping];\n                            childRecords.splice(j + 1, 0, originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                        else {\n                            if (!childRecords[j].hasOwnProperty(this.parent.childMapping)) {\n                                childRecords[j][this.parent.childMapping] = [];\n                            }\n                            childRecords[j][this.parent.childMapping].push(originalData);\n                            this.updateParentRow(key, childRecords[j], action);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        childRecords.splice(j, 0, originalData);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Below') {\n                        childRecords.splice(j + 1, 0, originalData);\n                    }\n                }\n                else {\n                    var parentItem = childRecords[j].parentItem;\n                    childRecords.splice(j, 1);\n                    if (!childRecords.length) {\n                        isChildAll = true;\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(childRecords[j][this.parent.childMapping])) {\n                if (this.removeChildRecords(childRecords[j][this.parent.childMapping], modifiedData, action, key, originalData)) {\n                    this.updateParentRow(key, childRecords[j], action);\n                }\n            }\n        }\n        return isChildAll;\n    };\n    Edit.prototype.updateParentRow = function (key, record, action, child) {\n        var currentRecords = this.parent.grid.getCurrentViewRecords();\n        var index;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            var childRecords = child ? child : currentRecords[index + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (this.isSelfReference) {\n                if (!record.hasOwnProperty(this.parent.childMapping)) {\n                    record[this.parent.childMapping] = [];\n                }\n                if (record.childRecords.indexOf(childRecords) === -1) {\n                    record[this.parent.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        this.parent.grid.setRowData(key, record);\n        var row = this.parent.getRowByIndex(index);\n        this.parent.renderModule.cellRender({ data: record, cell: row.cells[this.parent.treeColumnIndex],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex] });\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","filter","e","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","parentIndex","level","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","grid","columnMenuModule","destroy","getModuleName","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","Print","GridPrint","addEventListener","on","events.printGridInit","printTreeGrid","removeEventListener","off","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","RowModifier","args","data","parentData","allowPaging","pageSettings","pageSizeMode","row","getAttribute","enableCollapseAll","getCurrentViewRecords","style","display","proxy_1","parentrec","rec","getValue","idMapping","parentIdMapping","setAttribute","trigger","cellRender","pad","filterLevel","totalIconsWidth","getColumnIndexByUid","column","uid","treeColumnIndex","container","createElement","className","emptyExpandIcon","styles","n","appendChild","cloneNode","hasFilteredChildRecords","cell","expandIcon","expand","width","cellElement","allowTextWrap","textContent","querySelector","innerHTML","summaryData","field","Sort","GridSort","taskIds","flatSortedData","storedIndex","rootIndex","isSelfReference","updateModel","createdSortedRecords","createSorting","isDestroyed","createSortRecords","sortData","parentRecords","filteredResult","currentSortData","childMapping","getUid","element","id","extend","parentUniqueID","modifiedData","notify","sortedData","filteredData","sortingElements","sortQuery","sortchildData","executeLocal","srtQry","sortColumn","columnName","direction","isMultiSort","removeSortColumn","sortSettings","clearSorting","DataManipulation","parentItems","hierarchyData","isSortAction","dataResults","sortedRecords","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","_this","query","Query","where","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","mappingData","group","groupData","indexOf","childData","iterateExtend","items","updateChildHierarchy","splice","createRecords","currentData","parentID","returns","childs","Math","ceil","random","rowDetails","parentRow","rows","events.expanded","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","count","totalRecordsCount","flatData","filterSettings","columns","sortedData_1","sortlen","results","searchSettings","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","col","getColumnByField","compFun","sortComparer","bind","sortBy","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","type","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","action","expandAll","collapseAll","collapsetarget","expandCollapseRequest","expandtarget","parentElement","summaryElement","findnextRowElement","rowIndex","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","rowElement","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","isLocalData","offline","RemoteSaveAdaptor","wireEvents","EventHandler","add","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","toolbar","member","contextMenuItems","allowExcelExport","allowPdfExport","editSettings","allowAdding","allowDeleting","isCommandColumn","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","renderModule","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","allowSelection","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","selectedRowIndex","events.rowSelected","events.rowDeselected","events.toolbarClick","cancel","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","req","json","isPrinting","extendedGridEvents","extendedGridEditEvents","events.cellSave","events.cellEdit","mode","events.batchCancel","events.recordDoubleClick","events.actionBegin","events.beginEdit","requestType","events.crudAction","newRowPosition","events.beginAdd","contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","template","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","slice","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","forEach","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","classList","contains","getRows","getPager","addRecord","editModule","deleteRecord","fieldName","startEdit","endEdit","deleteRow","tr","getPrimaryKeyFieldNames","setCellValue","setRowData","rowData","goToPage","pageNo","pagerModule","getCellFromIndex","columnIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getColumns","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getHeaderTable","getRowByIndex","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandCollapse","collapseArgs","events.collapsing","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","events.localPagedExpandCollapse","displayAction","targetEle","getElementsByClassName","removeClass","collapseRemoteChild","_loop_1","rData","this_1","getRowObjectFromUID","cRow","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","setTreeColumnIndex","treeIndex","f","Resize","GridResize","fName","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","filterRootIndex","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","_loop_2","parent_2","this_2","parent_3","filterIndex","currentRecord","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","exportType","addParams","dtSrc","queryResult","filterModule","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","updateExternalMessage","message","ret","pageingDetails","temp_1","propname","skip","size","pageSize","currentPage","take","child","dm_1","or","parents_1","visualData","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","map","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","appendChildren","summaryformat","ContextMenu","cmenu","addRow","contextMenuModule","Edit","GridEdit","editAction","events.keyPressed","events.doubleTap","applyFormValidation","doubleClickTarget","getColumnByIndex","closest","isOnBatch","isPrimaryKey","keyPress","enableToolbarItems","request","toolbarID","cells","rowIndex_1","parentNode","primaryKeys_1","updateRow","formObj","querySelectorAll","saveArgs","previousData","previousValue","position","addRowIndex","selectedIndex","focussedElement","document","activeElement","errors","focus","beginAddEdit","dataIndex","updateParentRow","addAction","details","treeData","isSkip","currentViewRecords","unshift","originalData","addAct","k","currentData_1","removeChildRecords","isChildAll","currentRecords","editFormValidate","destroyForm","CommandColumn","Command"],"mappings":"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AW,kBAAc,GACrCE,IACIumB,WACDtU,EAASnS,UAAW,iBAAa,GACpCE,IACIumB,WACDtU,EAASnS,UAAW,mBAAe,GACtCE,IACIumB,WACDtU,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,iBAAa,GACpCE,IACIumB,WACDtU,EAASnS,UAAW,gBAAY,GACnCE,IACIumB,WACDtU,EAASnS,UAAW,qBAAiB,GACxCE,IACIumB,WACDtU,EAASnS,UAAW,iBAAa,GACpCE,IACIumB,WACDtU,EAASnS,UAAW,yBAAqB,GAC5CE,IACIumB,WACDtU,EAASnS,UAAW,uBAAmB,GAC1CE,IACIumB,WACDtU,EAASnS,UAAW,yBAAqB,GAC5CE,IACIumB,WACDtU,EAASnS,UAAW,oBAAgB,GACvCE,IACIumB,WACDtU,EAASnS,UAAW,qBAAiB,GACxCE,IACIiB,YAAS,IACVgR,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,oBAAgB,GACvCE,IACIumB,WACDtU,EAASnS,UAAW,mBAAe,GACtCE,IACIumB,WACDtU,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,qBAAiB,GACxCE,IACIumB,WACDtU,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,qBAAiB,GACxCE,IACIumB,WACDtU,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,uBAAmB,GAC1CE,IACIumB,WACDtU,EAASnS,UAAW,oBAAgB,GACvCE,IACIumB,WACDtU,EAASnS,UAAW,uBAAmB,GAC1CE,IACIumB,WACDtU,EAASnS,UAAW,sBAAkB,GACzCE,IACIumB,WACDtU,EAASnS,UAAW,mBAAe,GACtCE,IACIumB,WACDtU,EAASnS,UAAW,gBAAY,GACnCE,IACIumB,WACDtU,EAASnS,UAAW,kBAAc,GACrCE,IACIumB,WACDtU,EAASnS,UAAW,uBAAmB,GAC1CE,IACIumB,WACDtU,EAASnS,UAAW,kBAAc,GACrCE,I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"}