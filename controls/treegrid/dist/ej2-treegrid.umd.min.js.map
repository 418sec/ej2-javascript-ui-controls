{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/actions/sort.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record[control.childMapping].indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n    var data = control.grid.dataSource instanceof DataManager ?\n        control.grid.dataSource.dataSource.json : control.grid.dataSource;\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][primaryKeys] === record[primaryKeys]) {\n            data[i] = record;\n            break;\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            for (var i = 0; i < args.cell.children.length; i++) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All')\n            || this.enableVirtualization) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return e.parentUniqueID === record.uniqueID;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property.dataSource) {\n            this.parent.dataModule.convertToFlatData(property.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop.dataSource) {\n            this.parent.dataModule.convertToFlatData(prop.dataSource);\n            dtSrc = this.parent.flatData;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = -1;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            value[this.parent.parentIdMapping] = idMapping;\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","Math","ceil","random","rowDetails","parentRow","rows","expandingTd","detailRowModule","events.expanded","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","events.actionComplete","totalRecordsCount","parentRecords","currentData","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","enableVirtualization","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","bindedDataSource","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","isPrinting","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","events.cellSave","cellsaveArgs","isBlazor","getElement","promise","events.cellEdit","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","defaultQuery","dm_1","JsonAdaptor","events.recordDoubleClick","events.detailDataBound","events.actionBegin","getSelectedRecords","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","events.collapsing","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","events.localPagedExpandCollapse","displayAction","targetEle","detailrows","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","getRowObjectFromUID","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","manipulateExportProperties","book","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","manipulatePdfProperties","document","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","this_1","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","events.doubleTap","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","scrollTop","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll"],"mappings":"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"}