{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || !this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed')) {\n                        removeClass([rows[i]], 'e-treerowcollapsed');\n                        addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0];\n                    if (expandicon) {\n                        removeClass([expandicon], 'e-treegridcollapse');\n                        addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        this.grid.editModule.startEdit(row);\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        this.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            this.setProperties({ columns: this.columnModel }, true);\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","splice","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","updateAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","ej2Popups","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","ej2Grids","gridRendered","setBlazorGUID","bindGridEvents","selectionModule","gridObserver","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.beforeBatchSave","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","getSelectedRecords","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","saveCell","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","beforeBatchSaveAction","batchSaveAction","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule"],"mappings":"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"}