{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var updateColTypeObj = 'updateColTypeObj';\n        if (!isNullOrUndefined(this.grid.editModule)) {\n            this.grid.editModule[updateColTypeObj]();\n        }\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.cellSelected = function (args) {\n            var cellSelectedArgs;\n            if (isBlazor() && _this.isServerRendered) {\n                cellSelectedArgs = { data: args.data, cellIndex: args.cellIndex };\n                _this.trigger('cellSelected', cellSelectedArgs);\n            }\n            else {\n                _this.trigger('cellSelected', args);\n            }\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridRowSelectEvents();\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.extendedGridBatchEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridRowSelectEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (isNullOrUndefined(args.target) || !(args.target.classList.contains('e-treegridexpand') ||\n                args.target.classList.contains('e-treegridcollapse'))) {\n                treeGrid.notify(events.rowSelecting, args);\n                _this.trigger(events.rowSelecting, args);\n            }\n            else {\n                args.cancel = true;\n            }\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var length_1 = 'length';\n                args.data = args.data[args.data[length_1] - 1];\n                args.rowIndex = args.rowIndex[args.rowIndex[length_1] - 1];\n                args.row = args.row[args.row[length_1] - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            if (isNullOrUndefined(args.target) || !(args.target.classList.contains('e-treegridexpand') ||\n                args.target.classList.contains('e-treegridcollapse'))) {\n                treeGrid.notify(events.rowDeselecting, args);\n                _this.trigger(events.rowDeselecting, args);\n            }\n            else {\n                args.cancel = true;\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n    };\n    TreeGrid.prototype.extendedGridBatchEvents = function () {\n        var _this = this;\n        var beforeBatchSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beforeBatchSave)) {\n                beforeBatchSave = this.grid.beforeBatchSave;\n            }\n        }\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beforeBatchSave && typeof beforeBatchSave === 'function') {\n                    beforeBatchSave.apply(_this, [args]);\n                }\n            }\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.allowServerDataBinding = false;\n        }\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        if (isBlazor() && this.isServerRendered) {\n            this.allowServerDataBinding = true;\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_2 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_2; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelecting","rowSelected","checkboxChange","rowDeselecting","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","cellSelected","cellSelectedArgs","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridRowSelectEvents","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","extendedGridBatchEvents","bindGridDragEvents","bindCallBackEvents","events.rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","events.rowDeselecting","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_2","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","mRow","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser"],"mappings":"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"}